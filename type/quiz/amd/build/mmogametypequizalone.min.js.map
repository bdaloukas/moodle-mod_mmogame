{"version":3,"file":"mmogametypequizalone.min.js","sources":["../src/mmogametypequizalone.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mmogametype_quiz/mmogametypequiz'],\n    function(MmoGameTypeQuiz) {\n    return class MmoGameTypeQuizAlone extends MmoGameTypeQuiz {\n\n        // Score variables.\n        player;\n\n        constructor() {\n            super('alone');\n            this.cIcons = this.hasHelp() ? 5 : 4;\n        }\n\n        createIconBar() {\n            let i = 0;\n            const step = this.iconSize + this.padding;\n\n            const nicknameHeight = Math.round(this.iconSize / 3);\n\n            const fragment = document.createDocumentFragment(); // Batch DOM updates\n\n            const [nickname, avatar] = this.createNicknameAvatar(fragment,\n                'mmogame-quiz-alone',\n                Math.round(this.padding + (i++) * step),\n                this.padding,\n                2 * this.iconSize + this.padding,\n                nicknameHeight,\n                this.padding + nicknameHeight,\n                this.iconSize);\n\n            this.player = this.createDivScorePercent(fragment,\n                'mmogame-quiz-alone',\n                this.padding + (i++) * step,\n                this.padding + nicknameHeight,\n                true,\n                this.colorScore);\n            this.player.avatarElement = avatar;\n            this.player.nicknameElement = nickname;\n            this.player.cacheAvatar = '';\n            this.player.cacheNickname = '';\n            this.player.lblScore.title = this.getStringM('js_grade');\n            this.player.lblRank.title = this.getStringM('js_ranking_grade');\n\n            this.createButtonSound(fragment, this.padding + (i++) * step,\n                this.padding + nicknameHeight, this.iconSize);\n            if (this.hasHelp()) {\n                const button = this.createButtonHelp(fragment, this.padding + (i++) * step, this.padding);\n                button.addEventListener(\"click\", () => this.onClickHelp());\n            }\n\n            this.areaRect = {top: 2 * this.padding + this.iconSize + nicknameHeight};\n\n            this.body.appendChild(fragment); // Batch insert into DOM\n        }\n\n        processSetAnswer(json) {\n            this.correct = json.correct;\n\n            if (json.correct !== undefined) {\n                if (this.qtype === \"multichoice\") {\n                    this.onServerAnswerMultichoice(json);\n                }\n            }\n\n            this.disableInput();\n\n            if (this.aItemAnswer !== undefined && json.correct !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                }\n            }\n\n            this.createNextButton(this.areaRect.width - this.iconSize - this.padding, this.stripTop);\n\n            this.showScore(json);\n        }\n\n        /**\n         * Creates the game screen layout based on the current state.\n         *\n         * @param {Object} json - The game data used to build the screen.\n         * @param {boolean} disabled - Determines whether user input should be disabled.\n         */\n        createScreen(json, disabled) {\n            if (this.endofgame) {\n                // Display end-of-game message and final score\n                this.createDivMessage('mmogame-quiz-alone-endofgame', this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            this.removeAreaChildren();\n\n            // Render the screen layout based on orientation (vertical or horizontal)\n            if (this.isVertical) {\n                this.createScreenVertical(json, disabled);\n            } else {\n                this.createScreenHorizontal(json, disabled);\n            }\n\n            // Display the current score\n            this.showScore(json);\n        }\n\n        /**\n         * Creates a horizontal layout for the quiz screen.\n         *\n         * @param {object} json\n         * @param {boolean} disabled - Whether user input should be disabled.\n         */\n        createScreenHorizontal(json, disabled) {\n            const [width] = this.computeBestFontSize(json);\n\n            this.radioSize = Math.round(this.fontSize);\n            this.stripTop = this.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled);\n\n            this.createDefinition(0, 0, width - this.padding, this.stripTop - this.padding,\n                false, this.fontSize, json.definition);\n\n            // Adjust strip dimensions\n            this.stripLeft = width + this.padding;\n        }\n\n        createScreenVertical(json, disabled) {\n            this.computeBestFontSize(json);\n\n            this.radioSize = Math.round(this.fontSize);\n\n            const defSize = this.createDefinition(0, 0, this.areaRect.width, 0, false, this.fontSize, json.definition);\n            this.stripTop = this.createAnswer(0, defSize[1] + this.padding, this.areaRect.width, false, this.fontSize, disabled);\n\n            // Adjust strip position\n            this.stripLeft = 0;\n        }\n\n        processGetAttempt(json) {\n            super.processGetAttempt(json);\n            if (json.name !== undefined) {\n                window.document.title = json.name;\n            }\n\n            // Update game state\n            this.state = parseInt(json.state, 10);\n            if (this.state === 0) {\n                json.qtype = '';\n                if (json.colors) {\n                    this.setColorsString(json.colors);\n                    this.createIconBar();\n                }\n                this.showScore(json);\n                this.createDivMessageStart(this.getStringM('js_wait_to_start'));\n                this.sendFastJSON(); // Send fast JSON updates\n                return;\n            }\n\n            if (this.player === undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            if (this.area === undefined) {\n                this.createArea(this.areaRect.top, 0);\n            }\n\n            // Update the window title if a name is provided\n            if (json.name) {\n                document.title = json.name;\n            }\n\n            // Handle error messages from the server\n            if (json.errorcode) {\n                this.createDivMessage('mmogame-error', json.errorcode);\n                return;\n            }\n\n            const nicknameWidth = 2 * this.iconSize + this.padding;\n            const nicknameHeight = this.iconSize / 3;\n            this.updateNicknameAvatar(this.player, json.avatar, json.nickname, nicknameWidth, nicknameHeight);\n            this.attempt = json.attempt;\n\n            // Process question type and answers\n            this.qtype = json.qtype;\n            if (this.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = json.answerids;\n                json.answers.forEach((answer, index) => {\n                    this.answers[index] = this.repairP(answer); // Process each answer\n                });\n            }\n            this.answer = json.answer ?? undefined;\n\n            // Handle end-of-game scenarios\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            json.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            this.sendFastJSON(); // Send fast JSON updates\n        }\n\n        showScore(json) {\n            super.showScore(this.player, json.sumscore, json.rank, json.percent, json.percentRank, true);\n            this.player.lblAddScore.innerHTML = json.addscore === undefined ? '' : json.addscore;\n            this.autoResizeText(this.player.lblAddScore, this.player.cellSize, this.player.cellSize, true, 0, 0, 1);\n        }\n\n        showHelpScreen(div) {\n            div.innerHTML = `\n                <br>\n                <div>${this.getStringT('js_alone_help')}</div><br>\n\n                <table class=\"mmogame-table-help\">\n                    <tr>\n                        <td><img height=\"83\" src=\"type/quiz/assets/aduel/example2.png\" alt=\"\" /></td>\n                        <td>${this.getStringT('js_aduel_example2')}</td>\n                    </tr>\n                </table>\n            `;\n        }\n\n        onServerAnswerMultichoice(json) {\n            let foundCorrect = false;\n\n            let aCorrect = json.correct.split(\",\");\n            for (let i = 0; i < this.answersID.length; i++) {\n                if (this.answersID[i] === '') {\n                    continue;\n                }\n\n                const label = this.aItemLabel[i];\n\n                let iscorrect1;\n\n                const iscorrect = aCorrect.includes(this.answersID[i]);\n\n                if (this.aItemAnswer[i].classList.contains(\"checked\")) {\n                    iscorrect1 = aCorrect.includes(this.answersID[i]);\n                }\n                if (iscorrect1) {\n                    foundCorrect = true;\n                }\n\n                if (iscorrect === false && iscorrect1 === undefined) {\n                    continue;\n                }\n\n                const height = this.aItemLabel[i].scrollHeight;\n\n                const move = iscorrect1 !== undefined ? this.radioSize : 0;\n                const width = this.labelWidth - move;\n\n                if (move !== 0) {\n                    label.style.left = (parseInt(label.style.left) + move) + \"px\";\n                }\n                this.aItemLabel[i].style.width = width + \"px\";\n                this.autoResizeText(this.aItemLabel[i], width, height, true, this.minFontSize, this.maxFontSize, 0.5);\n\n                this.onServerAnswerMultichoiceShowCorrect(i, iscorrect1);\n            }\n\n            this.playAudio(foundCorrect ? this.audioYes : this.audioNo);\n        }\n\n        onServerAnswerMultichoiceShowCorrect(i, iscorrect1, iscorrect) {\n            if (iscorrect) {\n                this.aItemLabel[i].innerHTML = '<b><u>' + this.aItemLabel[i].innerHTML + '</b></u>';\n            }\n\n            if (iscorrect1 !== undefined) {\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, 'mmogame-quiz-aduel-correct-answer',\n                    this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.title = iscorrect1 ? this.getStringT('js_correct_answer') : this.getStringT('js_wrong_answer');\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect1, this.colorScore, this.colorScore);\n            }\n        }\n\n    };\n});"],"names":["define","MmoGameTypeQuiz","player","constructor","super","this","cIcons","hasHelp","createIconBar","i","step","iconSize","padding","nicknameHeight","Math","round","fragment","document","createDocumentFragment","nickname","avatar","createNicknameAvatar","createDivScorePercent","colorScore","avatarElement","nicknameElement","cacheAvatar","cacheNickname","lblScore","title","getStringM","lblRank","createButtonSound","createButtonHelp","addEventListener","onClickHelp","areaRect","top","body","appendChild","processSetAnswer","json","correct","undefined","qtype","onServerAnswerMultichoice","disableInput","aItemAnswer","length","classList","add","createNextButton","width","stripTop","showScore","createScreen","disabled","endofgame","createDivMessage","removeAreaChildren","isVertical","createScreenVertical","createScreenHorizontal","computeBestFontSize","radioSize","fontSize","createAnswer","createDefinition","definition","stripLeft","defSize","processGetAttempt","name","window","state","parseInt","colors","setColorsString","createDivMessageStart","sendFastJSON","area","createArea","errorcode","nicknameWidth","updateNicknameAvatar","attempt","answers","answersID","answerids","forEach","answer","index","repairP","sumscore","rank","percent","percentRank","lblAddScore","innerHTML","addscore","autoResizeText","cellSize","showHelpScreen","div","getStringT","foundCorrect","aCorrect","split","label","aItemLabel","iscorrect1","iscorrect","includes","contains","height","scrollHeight","move","labelWidth","style","left","minFontSize","maxFontSize","onServerAnswerMultichoiceShowCorrect","playAudio","audioYes","audioNo","t","createDiv","aItemCorrectX","getSVGcorrect"],"mappings":"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"}