{"version":3,"file":"mmogametypequiz.min.js","sources":["../src/mmogametypequiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mod_mmogame/mmogameui'], function(MmoGameUI) {\n    return class MmoGameTypeQuiz extends MmoGameUI {\n        mmogameid;\n        kinduser;\n        user;\n        url;\n        pin;\n        labelTimer;\n        timeForSendAnswer;\n        divDefinition;\n        definitionHeight;\n\n        /**\n         * Base class for Quiz mmmogame\n         *\n         * @module mmogametype_quiz\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n\n        constructor() {\n            super();\n            this.hideSubmit = false;\n            this.timeForSendAnswer = 10000;\n        }\n\n        setColors(colors) {\n            this.repairColors(colors);\n\n            this.colorDefinition = this.colors[1];\n            this.colorScore = this.colors[2];\n            this.colorCopyright = this.colors[3];\n            this.colorScore2 = this.colors[4];\n        }\n\n        openGame() {\n            super.openGame();\n\n            this.audioYes = new Audio('assets/yes1.mp3');\n            this.audioYes.load();\n            this.audioNo = new Audio('assets/no1.mp3');\n            this.audioNo.load();\n        }\n\n        processGetAttempt(json) {\n            this.computeDifClock(json.time, json.timestart, json.timeclose);\n\n            if (json.colors !== undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            if (name !== undefined) {\n                window.document.title = name;\n            }\n\n            if (json.helpurl !== undefined) {\n                this.helpUrl = json.helpurl;\n            }\n\n            if (json.errorcode !== undefined) {\n                this.createDivMessage('mmogame-error', json.errorcode);\n                return;\n            }\n\n            this.state = parseInt(json.state);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson);\n            this.updateButtonsAvatar(1, json.avatar, json.nickname);\n\n            this.attempt = json.attempt;\n\n            this.qtype = json.qtype;\n            if (json.qtype === 'multichoice') {\n                this.answers = json.answers;\n                this.answersID = json.answerids;\n            }\n            this.answer = json.answer !== undefined ? json.answer : undefined;\n\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            this.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            this.updateLabelTimer();\n\n            this.sendFastJSON();\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined || this.timeclose === undefined) {\n                return;\n            }\n            if (this.timeclose === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n            let time = (new Date()).getTime();\n            let dif = this.timeclose - time / 1000;\n\n            if (dif <= 0) {\n                dif = 0;\n            }\n            dif = Math.round(dif);\n            if (dif <= 0) {\n                this.labelTimer.innerHTML = '';\n                this.onTimeout();\n            } else {\n                let s = (dif < 0 ? \"-\" : \"\") + Math.floor(dif / 60.0);\n                this.labelTimer.innerHTML = s + \":\" + (\"0\" + (dif % 60)).slice(-2);\n            }\n\n            if (dif <= 0 && this.timeclose !== 0) {\n                return;\n            }\n\n            let instance = this;\n            this.timerTimeout = setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        onTimeout() {\n            this.labelTimer.innerHTML = '';\n            this.disableInput();\n            this.sendTimeout();\n        }\n\n        createScreen(json, disabled) {\n            this.createArea();\n\n            if (this.endofgame) {\n                this.createDivMessage('mmogame-endofgame', this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(disabled);\n            }\n            this.showScore(json);\n        }\n\n        createScreenVertical(disabled) {\n            let nickNameHeight = Math.round(this.iconSize / 3) + this.padding;\n            let maxHeight = this.areaHeight - 4 * this.padding - nickNameHeight;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize;\n            }\n            let instance = this;\n            let maxWidth = this.areaWidth;\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                    let defSize = instance.createDefinition(0, 0, maxWidth - 1, true, fontSize);\n\n                    if (defSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    let ansSize = instance.createAnswer(0, 0, maxWidth - 1, true, fontSize, disabled);\n                    if (ansSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    return defSize[1] + ansSize[1] < maxHeight ? -1 : 1;\n                }\n            );\n\n            this.radioSize = Math.round(this.fontSize);\n            let defSize = this.createDefinition(0, 0, maxWidth, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(0, defSize[1] + this.padding, maxWidth, false, this.fontSize, disabled);\n            this.nextLeft = this.areaWidth - this.iconSize - this.padding;\n\n            if (this.nextTop + this.padding >= this.areaHeight) {\n                this.nextTop = this.areaHeight - this.padding;\n            }\n\n            if (this.hideSubmit === false) {\n                let space = (this.areaWidth - this.iconSize) / 2;\n                this.btnSubmit = this.createImageButton(this.body, 'mmogame-quiz-submit',\n                    space, this.nextTop, 0, this.iconSize,\n                   'assets/submit.svg', false, 'submit');\n                this.btnSubmit.addEventListener(\"click\",\n                    function() {\n                        if (instance.btnSubmit !== undefined) {\n                            instance.area.removeChild(instance.btnSubmit);\n                            instance.btnSubmit = undefined;\n                        }\n                        instance.sendAnswer();\n                    }\n                );\n            }\n\n            this.stripLeft = this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createScreenHorizontal(disabled) {\n            let maxHeight = this.areaHeight - 2 * this.padding;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize + this.padding;\n            }\n            let width = Math.round((this.areaWidth - this.padding) / 2);\n            let instance = this;\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    function(fontSize) {\n                        defSize = instance.createDefinition(0, 0, width - instance.padding, true, fontSize);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = instance.createAnswer(0, 0, width - instance.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= instance.areaHeight) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n            this.nextLeft = width + Math.min(3 * this.iconSize + 2 * this.padding, width - this.iconSize);\n\n            if (this.hideSubmit) {\n                return;\n            }\n\n            this.btnSubmit = this.createImageButton(this.body, 'mmogame-quiz-submit',\n                width + (width - this.iconSize) / 2, this.nextTop, 0, this.iconSize,\n                \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.sendAnswer();\n            });\n\n            this.stripLeft = width + this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createAnswer(left, top, width, onlyMetrics, fontSize, disabled) {\n            return this.createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled);\n        }\n\n        createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled) {\n            let n = this.answers === undefined ? 0 : this.answers.length;\n            let instance = this;\n\n            let aChecked = [];\n            if (this.answer !== undefined) {\n                aChecked = this.answer.split(\",\");\n            }\n            if (aChecked.length > 0) {\n                if (aChecked[0] === \"\") {\n                    aChecked.pop();\n                }\n            }\n\n            this.aItemAnswer = new Array(n);\n            this.aItemLabel = new Array(n);\n            this.aItemCorrectX = new Array(n);\n            let retSize = [0, 0];\n            this.labelWidth = Math.round(width - fontSize - this.padding);\n            let checkboxSize = Math.round(fontSize);\n            let top1 = top;\n            let offsetLabel = 0;\n            for (let i = 0; i < n; i++) {\n                let label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.style.width = this.labelWidth + \"px\";\n\n                label.innerHTML = this.answers[i];\n\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                this.aItemLabel[i] = label;\n\n                if (onlyMetrics) {\n                    this.body.appendChild(label);\n                    let newSize = label.scrollWidth + fontSize + this.padding;\n                    if (newSize > retSize[0]) {\n                        retSize[0] = newSize;\n                    }\n                    retSize[1] += Math.max(label.scrollHeight, fontSize) + this.padding;\n\n                    this.body.removeChild(label);\n                    continue;\n                }\n\n                label.htmlFor = \"input\" + i;\n                label.style.left = (left + fontSize + this.padding + offsetLabel) + \"px\";\n                label.style.top = top + \"px\";\n                label.style.align = \"left\";\n                label.style.color = this.getContrastingColor(this.colorBackground);\n\n                let checked = aChecked.includes(this.answersID[i]);\n                let item = this.createRadiobox(this.body, checkboxSize, this.colorDefinition, this.colorScore, checked, disabled);\n                item.style.position = \"absolute\";\n                item.style.left = left + \"px\";\n                let topRadio = top;\n                item.style.top = topRadio + \"px\";\n\n                item.addEventListener('click', () => {\n                    if (!item.classList.contains(\"disabled\")) {\n                        instance.onClickRadio(i, this.colorDefinition, this.colorScore, true);\n                    }\n                });\n\n                label.addEventListener('click', () => {\n                    instance.onClickRadio(i, instance.colorDefinition, instance.colorScore, true);\n                });\n\n                this.area.appendChild(item);\n                this.area.appendChild(label);\n                if (label.scrollHeight > fontSize) {\n                    topRadio = Math.round(top + (label.scrollHeight - fontSize) / 2);\n                    item.style.top = topRadio + \"px\";\n                }\n\n                if (this.answersID[i] === '') {\n                    item.style.visibility = 'hidden';\n                    label.style.visibility = 'hidden';\n                }\n\n                this.aItemAnswer[i] = item;\n                this.aItemCorrectX[i] = left + fontSize + this.padding;\n\n                top += Math.max(label.scrollHeight, fontSize) + this.padding;\n            }\n\n            if (onlyMetrics) {\n                return retSize;\n            }\n\n            let heightControls = top - top1;\n            let vspace;\n            if (this.vertical === false) {\n                vspace = this.areaHeight - heightControls - this.iconSize;\n                if (vspace > this.padding) {\n                    let move = Math.round(vspace / 3);\n                    for (let i = 0; i < n; i++) {\n                        this.aItemAnswer[i].style.top = (parseInt(this.aItemAnswer[i].style.top) + move) + \"px\";\n                        this.aItemLabel[i].style.top = (parseInt(this.aItemLabel[i].style.top) + move) + \"px\";\n                    }\n                    this.nextTop += move / 2;\n                    let defTop = parseInt(this.divDefinition.style.top);\n                    if (defTop + move + this.definitionHeight + this.padding < this.areaHeight) {\n                        this.divDefinition.style.top = this.aItemLabel[0].style.top;\n                        this.divDefinition.style.height = Math.max(heightControls, this.definitionHeight) + \"px\";\n                    }\n                    top += move;\n                }\n            }\n\n            return top;\n        }\n\n        onClickRadio(i, colorBack, color, callSendAnswer) {\n            if (this.aItemAnswer[i].classList.contains(\"disabled\")) {\n                return;\n            }\n            for (let j = 0; j < this.aItemAnswer.length; j++) {\n                let item = this.aItemAnswer[j];\n                let disabled = item.classList.contains(\"disabled\");\n\n                if (i === j) {\n                    item.classList.add(\"checked\");\n                    this.answerid = this.answersID[i];\n                } else if (item.classList.contains(\"checked\")) {\n                    item.classList.remove(\"checked\");\n                }\n\n                this.drawRadio(item, disabled ? colorBack : 0xFFFFFF, color);\n            }\n            if (this.autosave && callSendAnswer) {\n                this.callSetAnswer();\n            }\n        }\n\n        sendTimeout() {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.sendGetAttempt();\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let data = JSON.stringify({\n                \"command\": \"timeout\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.user, \"attempt\": this.attempt\n            });\n            xmlhttp.send(data);\n        }\n\n        updateScreenAfterAnswer(json) {\n            console.log('updateScreenAfterAnswer this.qtype=' + this.qtype);\n            console.log(json);\n            this.playAudio(json.iscorrect !== 0 ? this.audioYes : this.audioNo);\n\n            if (json.correct !== undefined) {\n                if (this.qtype === \"multichoice\") {\n                    this.updateScreenAfterAnswerMultichoice();\n                }\n            }\n            this.disableInput();\n\n            if (this.btnSubmit !== undefined) {\n                this.body.removeChild(this.btnSubmit);\n                this.btnSubmit = undefined;\n            }\n\n            let btn = super.createImageButton(this.area, 'mmogame-quiz-next',\n                this.nextLeft, this.nextTop, 0, this.iconSize, 'assets/next.svg');\n            let instance = this;\n            btn.addEventListener(\"click\", function() {\n                instance.callGetAttempt();\n                instance.area.removeChild(btn);\n            });\n\n            this.showScore(json);\n        }\n\n        getSVGcorrect(size, iscorrect, colorCorrect, colorError) {\n            if (iscorrect) {\n                let c = colorCorrect !== undefined ? this.getColorHex(colorCorrect) : '#398439';\n                return \"<svg aria-hidden=\\\"true\\\" class=\\\"svg-icon iconCheckmarkLg\\\" width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" viewBox=\\\"0 0 36 36\\\"><path fill=\\\"\" + c + \"\\\" d=\\\"m6 14 8 8L30 6v8L14 30l-8-8v-8z\\\"></path></svg>\";\n            } else {\n                let c = colorError !== undefined ? this.getColorHex(colorError) : '#398439';\n                return \"<svg width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" class=\\\"bi bi-x-lg\\\" viewBox=\\\"0 0 18 18\\\"> <path fill=\\\"\" + c +\n                    `\" d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 \n                1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\"/></svg>`;\n            }\n        }\n\n        updateScreenAfterAnswerMultichoice() {\n            let aCorrect = this.correct.split(\",\");\n            for (let i = 0; i < this.answersID.length; i++) {\n                let label = this.aItemLabel[i];\n                let checked = this.aItemAnswer[i].classList.contains(\"checked\");\n                let iscorrect;\n\n                if (aCorrect.includes(this.answersID[i])) {\n                    iscorrect = true;\n                } else if (checked) {\n                    iscorrect = false;\n                } else {\n                    continue;\n                }\n                let height = label.scrollHeight;\n                let width = label.scrollWidth - this.radioSize;\n                label.style.left = (parseInt(label.style.left) + this.radioSize) + \"px\";\n                label.style.width = width + \"px\";\n                if (iscorrect) {\n                    label.innerHTML = '<b>' + label.innerHTML + '</b>';\n                }\n                this.autoResizeText(label, width, height, true, this.minFontSize, this.maxFontSize, 0.9);\n\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, 'mmogame-quiz-correct',\n                    this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect, this.colorScore, this.colorScore);\n            }\n        }\n\n        disableInput() {\n            if (this.aItemAnswer !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                    this.drawRadio(this.aItemAnswer[i], this.colorScore, this.colorDefinition);\n                }\n            }\n        }\n\n        sendFastJSON() {\n            if (this.timeoutFastJSON !== undefined) {\n                clearTimeout(this.timeoutFastJSON);\n            }\n            let instance = this;\n            this.timeoutFastJSON = setTimeout(function() {\n                let xmlhttp = new XMLHttpRequest();\n                xmlhttp.onreadystatechange = function() {\n                    this.timeoutFastJSON = undefined;\n                    if (this.readyState === 4 && this.status === 200) {\n                        instance.onServerFastJson(this.response);\n                    }\n                };\n\n                let url = instance.url + \"/state.php\";\n\n                xmlhttp.open(\"POST\", url, true);\n\n                let data = new FormData();\n                data.set('fastjson', instance.fastjson);\n                data.set('type', instance.type);\n\n                xmlhttp.send(data);\n            }, this.timeForSendAnswer);\n        }\n\n        onClickHelp() {\n            if (this.helpUrl !== '') {\n                window.open(this.helpUrl, \"_blank\");\n            }\n        }\n\n        getStringT(name) {\n            return M.util.get_string(name, 'mmogametype_quiz');\n        }\n\n        /**\n         * Creates a percentage-based score display using createDOMElement.\n         *\n         * @param {number} left - The left position in pixels.\n         * @param {number} top - The top position in pixels.\n         * @param {number} num - Identifier for the score (1 or 2).\n         */\n        createDivScorePercent(left, top, num) {\n            // Create the main button container\n            const button = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'score-button',\n                styles: {\n                    position: 'absolute',\n                    left: `${left}px`,\n                    top: `${top}px`,\n                    width: `${this.iconSize}px`,\n                    height: `${this.iconSize}px`,\n                    border: \"0px solid \" + this.getColorHex(0xFFFFFF),\n                    boxShadow: \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\",\n                    background: num === 1 ? this.getColorHex(this.colorScore) : this.getColorHex(this.colorScore2),\n                    color: num === 1 ? this.getContrastingColor(this.colorScore) : this.getContrastingColor(this.colorScore2),\n                },\n                attributes: {\n                    title: num === 1 ? this.getStringM('js_grade') : this.getStringM('js_grade_opponent'),\n                    disabled: true,\n                },\n            });\n\n            button.innerHTML = '';\n\n            // Create the main score label\n            const scoreLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'score-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left}px`,\n                    top: `${top + this.iconSize / 4}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 2}px`,\n                    lineHeight: `${this.iconSize / 2}px`,\n                    textAlign: 'center',\n                    color: this.getContrastingColor(this.colorScore),\n                },\n                attributes: {\n                    title: num === 1 ? this.getStringM('js_grade') : this.getStringM('js_grade_opponent'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScore = scoreLabel;\n            } else {\n                this.labelScore2 = scoreLabel;\n            }\n\n            // Create the ranking grade label\n            const rankLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'ranking-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left}px`,\n                    top: `${top}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 3}px`,\n                    textAlign: 'center',\n                    color: this.getContrastingColor(this.colorScore),\n                },\n                attributes: {\n                    title: this.getStringM('js_ranking_grade'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScoreRank = rankLabel;\n            } else {\n                this.labelScoreRank2 = rankLabel;\n            }\n\n            this.createAddScore('mmogame_addscore', left, top + this.iconSize - this.iconSize / 3,\n                this.iconSize / 2, this.iconSize / 3, num);\n\n            // Create the percentage label\n            const percentLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'percent-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left + this.iconSize / 2}px`,\n                    top: `${top}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 3}px`,\n                    textAlign: 'center',\n                    fontSize: `${this.iconSize / 3}px`,\n                    lineHeight: `${this.iconSize / 3}px`,\n                    color: rankLabel.style.color,\n                },\n                attributes: {\n                    title: this.getStringM('js_ranking_percent'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScoreRankB = percentLabel;\n            }\n\n            // Create the additional score label\n            const addScoreLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'addscore-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left + this.iconSize / 2}px`,\n                    top: `${parseFloat(this.labelScore.style.top)}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 2}px`,\n                    textAlign: 'center',\n                    lineHeight: `${Math.round(this.iconSize / 2)}px`,\n                    fontWeight: 'bold',\n                    color: rankLabel.style.color,\n                },\n                attributes: {\n                    title: this.getStringM('js_percent'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScoreB = addScoreLabel;\n            }\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getContrastingColor(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        showScore({addscore, completedrank, percentcompleted, rank, sumscore, usercode}) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n    };\n    });"],"names":["define","MmoGameUI","constructor","hideSubmit","timeForSendAnswer","setColors","colors","repairColors","colorDefinition","this","colorScore","colorCopyright","colorScore2","openGame","audioYes","Audio","load","audioNo","processGetAttempt","json","computeDifClock","time","timestart","timeclose","undefined","setColorsString","createIconBar","name","window","document","title","helpurl","helpUrl","errorcode","state","parseInt","fastjson","timefastjson","updateButtonsAvatar","avatar","nickname","attempt","qtype","answers","answersID","answerids","answer","endofgame","definition","repairP","createScreen","updateLabelTimer","sendFastJSON","createDivMessage","labelTimer","innerHTML","Date","getTime","dif","Math","round","onTimeout","s","floor","slice","instance","timerTimeout","setTimeout","disableInput","sendTimeout","disabled","createArea","getStringM","showScore","vertical","createScreenVertical","createScreenHorizontal","nickNameHeight","iconSize","padding","maxHeight","areaHeight","maxWidth","areaWidth","fontSize","findbest","minFontSize","maxFontSize","defSize","createDefinition","ansSize","createAnswer","radioSize","nextTop","nextLeft","space","btnSubmit","createImageButton","body","addEventListener","area","removeChild","sendAnswer","stripLeft","stripWidth","stripHeight","width","step","min","left","top","onlyMetrics","createAnswerMultichoice","n","length","aChecked","split","pop","aItemAnswer","Array","aItemLabel","aItemCorrectX","retSize","labelWidth","checkboxSize","top1","i","label","createElement","style","position","font","appendChild","newSize","scrollWidth","max","scrollHeight","htmlFor","align","color","getContrastingColor","colorBackground","checked","includes","item","createRadiobox","topRadio","classList","contains","onClickRadio","visibility","vspace","heightControls","move","divDefinition","definitionHeight","height","colorBack","callSendAnswer","j","add","answerid","remove","drawRadio","autosave","callSetAnswer","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","sendGetAttempt","open","url","setRequestHeader","data","JSON","stringify","mmogameid","pin","kinduser","user","send","updateScreenAfterAnswer","console","log","playAudio","iscorrect","correct","updateScreenAfterAnswerMultichoice","btn","super","callGetAttempt","getSVGcorrect","size","colorCorrect","colorError","getColorHex","aCorrect","autoResizeText","t","createDiv","timeoutFastJSON","clearTimeout","onServerFastJson","response","FormData","set","type","onClickHelp","getStringT","M","util","get_string","createDivScorePercent","num","createDOMElement","parent","classnames","styles","border","boxShadow","background","attributes","scoreLabel","lineHeight","textAlign","labelScore","labelScore2","rankLabel","labelScoreRank","labelScoreRank2","createAddScore","percentLabel","labelScoreRankB","addScoreLabel","parseFloat","fontWeight","labelScoreB","div","ret","paddingLeft","paddingRight","id","addscore","completedrank","percentcompleted","rank","sumscore","usercode","w","labelAddScore"],"mappings":"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"}