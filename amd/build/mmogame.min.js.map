{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class mmoGame {\n    kindSound = 0;\n    state = 0;\n    body;\n    minFontSize;\n    maxFontSize;\n    fontSize;\n    avatarTop;\n    colorsBackground;\n    buttonAvatarTop;\n    buttonAvatarHeight;\n    colorScore;\n    colorScore2;\n    definition;\n    colorDefinition;\n    /**\n     * Basic class for games.\n     *\n     * @module mmogame\n     * @copyright 2024 Vasilis Daloukas\n     * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n     */\n    constructor() {\n        this.body = document.getElementsByTagName(\"body\")[0];\n        this.kindSound = window.localStorage.getItem('kindSound');\n        if (isNaN(this.kindSound)) {\n            this.kindSound = 0;\n        }\n        if (this.kindSound !== 0 && this.kindSound !== 1 && this.kindSound !== 2) {\n            this.kindSound = 0;\n        }\n\n        let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n        this.minFontSize = size;\n        this.maxFontSize = 2 * size;\n        this.fontSize = size;\n    }\n\n    hasHelp() {\n        return false;\n    }\n\n    removeBodyChilds() {\n        this.removeDivMessage();\n\n        while (this.body.firstChild) {\n            this.body.removeChild(this.body.lastChild);\n        }\n        this.area = undefined;\n    }\n\n    openGame(url, id, pin, auserid, kinduser, callOnAfterOpenGame) {\n        this.removeBodyChilds();\n        this.area = undefined;\n\n        this.game = [];\n\n        this.url = url;\n        this.mmogameid = id;\n        this.pin = pin;\n        this.kinduser = kinduser;\n        if (this.kinduser === undefined || this.kinduser === \"\") {\n            this.kinduser = \"usercode\";\n        }\n        this.auserid = auserid;\n        if (this.auserid === 0 && this.kinduser === 'guid') {\n            this.auserid = this.getUserGUID();\n        }\n\n        this.computeSizes();\n        if (!callOnAfterOpenGame) {\n            return;\n        }\n        if (this.kinduser === undefined) {\n            this.onAfterOpenGame();\n        } else {\n            this.onAfterOpenGame();\n        }\n    }\n\n    createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n        let button = document.createElement(\"img\");\n        if (alt !== undefined && alt !== '') {\n            button.alt = alt;\n        }\n\n        button.classList.add(\"mmogame_imgbutton\");\n        button.tabIndex = 0;\n        button.setAttribute(\"role\", \"button\");\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    createImage(parent, left, top, width, height, filename) {\n        let button = document.createElement(\"img\");\n\n        button.tabIndex = 0;\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    createCenterImageButton(parent, left, top, width, height, classname, filename) {\n        let button = document.createElement(\"img\");\n        button.classList.add(\"mmogame_imgbutton\");\n        button.style.position = \"absolute\";\n        button.draggable = false;\n\n        const img = new Image();\n        img.onload = function() {\n            if (this.width === 0 || this.height === 0) {\n                this.width = this.height = 1;\n            }\n\n            if (this.width > 0 && this.height > 0) {\n                let mul = Math.min(width / this.width, height / this.height);\n                let w = Math.round(this.width * mul);\n                let h = Math.round(this.height * mul);\n\n                button.style.width = w + \"px\";\n                button.style.height = h + \"px\";\n                button.style.left = (left + width / 2 - w / 2) + \"px\";\n                button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                button.src = filename;\n                button.innerHTML = filename;\n                button.style.fontSize = height + \"px\";\n            }\n        };\n        if (filename !== undefined && filename !== \"\") {\n            img.style.left = left + \"px\";\n            img.style.top = top + \"px\";\n            img.style.visibility = 'hidden';\n            img.src = filename;\n        }\n        button.tabIndex = 0;\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    updateImageButton(button, left, top, width, height, filename) {\n        button.src = filename;\n    }\n\n    createDiv(parent, left, top, width, height) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = width + \"px\";\n        div.style.height = height + \"px\";\n\n        parent.appendChild(div);\n\n        return div;\n    }\n\n    createDivColor(parent, left, top, width, height, color) {\n        let div = this.createDiv(parent, left, top, width, height);\n        div.style.background = this.getColorHex(color);\n\n        return div;\n    }\n\n    getMuteFile() {\n        if (this.kindSound === 0) {\n            return 'assets/sound-on-flat.png';\n        } else if (this.kindSound === 1) {\n            return 'assets/sound-off-flat.png';\n        } else if (this.kindSound === 2) {\n            return 'assets/speak.svg';\n        } else {\n            return 'assets/sound-on-flat.png';\n        }\n    }\n\n    playAudio(audio) {\n        if (this.kindSound !== 0 && audio !== null) {\n            if (audio.networkState === 1) {\n                audio.play();\n            }\n        }\n    }\n\n    autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n        let minHeight = 0.9 * height;\n        let low = Math.max(1, minFontSize);\n        width = Math.round(width);\n        height = Math.round(height);\n        let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n        let fitSize = low;\n        let fitHeight = 0;\n        let newHeight = 0;\n        let newWidth = 0;\n\n        for (let i = 0; i <= 10; i++) {\n            let el = document.createElement(\"div\");\n            el.style.left = 0;\n            el.style.top = 0;\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"visible\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n\n            let fontSize = (low + up) / 2;\n\n            el.style.fontSize = fontSize + \"px\";\n            newHeight = el.scrollHeight;\n            newWidth = el.scrollWidth - 1;\n\n            this.body.removeChild(el);\n\n            if (newWidth > width || newHeight > height) {\n                up = fontSize;\n            } else {\n                low = fontSize;\n                if (Math.abs(fitHeight - newHeight) <= 2) {\n                    break;\n                }\n                fitHeight = newHeight;\n                fitSize = fontSize;\n                if (newHeight > minHeight) {\n                    break;\n                }\n            }\n        }\n        item.style.fontSize = fitSize + \"px\";\n\n        if (newWidth > width || newHeight > height) {\n            this.autoResizeTextBr(item);\n            newWidth = item.scrollWidth;\n            newHeight = item.scrollHeight;\n            this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                minRatio);\n        } else {\n            return [item.scrollWidth - 1, item.scrollHeight];\n        }\n\n        let el = document.createElement(\"div\");\n        el.style.width = width + \"px\";\n        el.style.height = 0;\n        el.visibility = \"hidden\";\n        if (!wrap) {\n            el.style.whiteSpace = \"nowrap\";\n        }\n        el.innerHTML = item.innerHTML;\n        this.body.appendChild(el);\n        el.style.fontSize = item.style.fontSize;\n        let size = [el.scrollWidth - 1, el.scrollHeight];\n        this.body.removeChild(el);\n\n        return size;\n    }\n\n    autoResizeTextBr(item) {\n        let s = item.innerHTML;\n        let change = false;\n        while (s.startsWith('<br>')) {\n            s = s.substring(4);\n            change = true;\n        }\n        let pos1 = s.indexOf('<br>');\n        for (; ;) {\n            let pos = s.indexOf('<br>', pos1 + 4);\n            if (pos < 0) {\n                break;\n            }\n            let s2 = s.substring(pos1 + 4, pos);\n            if (!s2.trim()) {\n                s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                change = true;\n                pos = pos1;\n            }\n            pos1 = pos;\n        }\n\n        if (change) {\n            item.innerHTML = s;\n        }\n    }\n\n    autoResizeTextImage(item, subwidth, subheight, minRatio) {\n        if (subwidth === 0 && subheight === 0) {\n            return;\n        }\n        let s = item.innerHTML;\n\n        for (let pos = 0; ;) {\n            let pos2 = s.indexOf(\"<img \", pos);\n            if (pos2 < 0) {\n                break;\n            }\n            let pos3 = s.indexOf(\">\", pos2);\n            if (pos3 < 0) {\n                break;\n            }\n            let s2 = s.substring(pos2, pos3) + \" \";\n\n            let width = 0;\n            let height = 0;\n            let posw = s2.indexOf(\"width=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                    width = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n\n            posw = s2.indexOf(\"height=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                    height = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n            if (width > 0 && height > 0) {\n                let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n            }\n            s = s.slice(0, pos2) + s2 + s.slice(pos3);\n            pos = pos3;\n        }\n        item.innerHTML = s;\n    }\n\n    getUserGUID() {\n        let guid = window.localStorage.getItem('UserGUID');\n        if (guid === null || guid === '') {\n            guid = this.uuid4();\n            window.localStorage.setItem(\"UserGUID\", guid);\n        }\n\n        return guid;\n    }\n\n    pad(num, size) {\n        let s = num + \"\";\n        while (s.length < size) {\n            s = \"0\" + s;\n        }\n        return s;\n    }\n\n    uuid4() {\n        const uuid = new Array(36);\n\n        for (let i = 0; i < 36; i++) {\n            uuid[i] = Math.floor(Math.random() * 16);\n        }\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n\n        return uuid.map((x) => x.toString(16)).join('');\n    }\n\n    computeSizes() {\n        if (this.cIcons < 5 || this.cIcons === undefined) {\n            this.cIcons = 5;\n        }\n        this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n        this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n        this.padding = Math.round(this.iconSize / 10);\n        this.iconSize -= this.padding;\n    }\n\n    getIconSize() {\n        return this.iconSize;\n    }\n\n    getCopyrightHeight() {\n        return Math.round(this.getIconSize() / 3);\n    }\n\n    getPadding() {\n        return this.padding;\n    }\n\n    getColorHex(x) {\n        return '#' + ('0000' + x.toString(16).toUpperCase()).slice(-6);\n    }\n\n    getContrast(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256; // Blue.\n\n        return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    }\n\n    getColorGray(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256, // Blue.\n            yiq = (r * 299) + g * 587 + b * 114,\n            m = 255 * 299 + 255 * 587 + 255 * 114,\n            gray = Math.round(yiq * 255 / m);\n\n        return (gray * 0x10000) + (gray * 0x100) + gray;\n    }\n\n    getColorContrast(x) {\n        return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n    }\n\n    repairColors(colors) {\n\n        this.colors = colors;\n        let instance = this;\n        this.colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n\n        this.colorBackground = this.colors[0];\n        this.body.style.background = this.getColorHex(this.colorBackground);\n\n        return this.colors;\n    }\n    repairHTML(s, mapFiles, mapFilesWidth, mapFilesHeight) {\n        if (s === undefined) {\n            return '';\n        }\n        while (s.slice(0, 4) === '<br>') {\n            s = s.slice(4).trim();\n        }\n        for (; ;) {\n            let pos = s.indexOf(\"@@GUID@@\");\n            if (pos < 0) {\n                break;\n            }\n            let pos2 = s.indexOf(\"\\\"\", pos);\n            if (pos2 > 0) {\n                let s2 = s.slice(pos2 + 1);\n                let posw = s2.indexOf(\"width=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n                posw = s2.indexOf(\"height=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n\n                let key = s.substring(pos + 8, pos2);\n                s2 = \" width=\\\"\" + mapFilesWidth.get(key) + \"\\\" \" + s2;\n                s2 = \" height=\\\"\" + mapFilesHeight.get(key) + \"\\\" \" + s2;\n\n                s = s.substring(0, pos) + \"data:image/png;base64, \" + mapFiles.get(key) + \"\\\"\" + s2;\n            }\n        }\n\n        return s;\n    }\n\n    repairP(s) {\n        if (s === undefined) {\n            return \"\";\n        }\n\n        // Remove <p> tags and replace </p> with <br />\n        let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n        // Remove <br> or <br/> at the end of the string\n        s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n        // Remove the <ol><br></ol> sequence if it exists\n        let pos = s2.indexOf('<ol><br></ol>');\n        if (pos >= 0) {\n            s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n        }\n\n        return s2;\n    }\n\n    createDivScorePercent(left, top, num) {\n        let button = document.createElement(\"button\");\n        button.style.position = \"absolute\";\n        button.classList.add(\"mmogame_button\");\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.style.width = this.iconSize + \"px\";\n        button.style.height = this.iconSize + \"px\";\n        button.style.lineHeight = this.iconSize + \"px\";\n        button.style.textAlign = \"center\";\n        button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n        button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n        if (num === 1) {\n            button.style.background = this.getColorHex(this.colorScore);\n            button.style.color = this.getColorContrast(this.colorScore);\n            button.title = this.getStringM('grade');\n        } else {\n            button.style.background = this.getColorHex(this.colorScore2);\n            button.style.color = this.getColorContrast(this.colorScore2);\n        }\n\n        this.body.appendChild(button);\n\n        button.innerHTML = '';\n        button.disabled = true;\n\n        let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n        div.style.lineHeight = (this.iconSize / 2) + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        if (num === 1) {\n            this.labelScore = div;\n            div.title = '[LANGM_GRADE]';\n        } else {\n            this.labelScore2 = div;\n            div.title = \"[LANGM_GRADE_OPONENT]\";\n        }\n\n        let h = this.iconSize / 3;\n        div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = '[LANGM_RANKING_GRADE]';\n        if (num === 1) {\n            this.labelScoreRank = div;\n        } else {\n            this.labelScoreRank2 = div;\n        }\n\n        div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = '[LANGM_GRADE_LAST_QUESTION]';\n        button.disabled = true;\n        if (num === 1) {\n            this.labelAddScore = div;\n        } else {\n            this.labelAddScore2 = div;\n        }\n\n        let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n        div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = h + \"px\";\n        div.style.lineHeight = h + \"px\";\n        div.style.color = label.style.color;\n        div.title = '[LANGM_RANKING_PERCENT].';\n        if (num === 1) {\n            this.labelScoreRankB = div;\n        }\n\n        label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n        div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n            this.iconSize / 2);\n        div.style.textAlign = \"center\";\n        div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = label.style.fontSize;\n        div.style.fontWeight = 'bold';\n        div.style.color = label.style.color;\n        div.title = '[LANGM_PERCENT]';\n        this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n        if (num === 1) {\n            this.labelScoreB = div;\n        }\n    }\n\n    createDivTimer(left, top, sizeIcon) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = sizeIcon + \"px\";\n        div.style.height = sizeIcon + \"px\";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.lineHeight = sizeIcon + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n        div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n        div.name = \"timer\";\n        this.body.appendChild(div);\n        this.labelTimer = div;\n\n        div.innerHTML = '23:59';\n        this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n        div.innerHTML = '';\n        div.title = this.getStringM('question_time');\n    }\n\n    createButtonSound(left, top) {\n        this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n            this.getMuteFile());\n        this.buttonSound.alt = this.getStringM('sound');\n        let instance = this;\n        this.buttonSound.addEventListener(\"click\", function() {\n            instance.onClickSound(instance.buttonSound);\n        });\n\n        this.buttonSound.title = this.getStringM('sound');\n    }\n\n    onClickSound(btn) {\n        window.title = btn.src;\n        this.kindSound = (this.kindSound + 1) % 2;\n        window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n        btn.src = this.getMuteFile();\n    }\n\n    createButtonHelp(left, top) {\n        this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n        this.buttonHelp.alt = this.getStringM('help');\n    }\n\n    readJsonFiles(json) {\n        this.mapFiles = new Map();\n        this.mapFilesWidth = new Map();\n        this.mapFilesHeight = new Map();\n        this.mapFiles.set(json.fileg1, json.filec1);\n        this.mapFilesWidth.set(json.fileg1, json.width1);\n        this.mapFilesHeight.set(json.fileg1, json.height1);\n    }\n\n    findbest(low, up, fn) {\n        if (low < 1) {\n            low = 1;\n        }\n\n        let prevSize;\n        let fitSize = low;\n        let testSize;\n        for (let i = 0; i <= 10; i++) {\n            prevSize = low;\n            testSize = (low + up) / 2;\n\n            let cmp = fn(testSize);\n            if (cmp <= 0) {\n                fitSize = testSize;\n                low = testSize;\n            } else {\n                up = testSize;\n            }\n            if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                break;\n            }\n        }\n\n        return fitSize;\n    }\n\n    createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n        width -= 2 * this.padding;\n        let div = document.createElement(\"div\");\n\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n\n        div.style.fontSize = fontSize + \"px\";\n        div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n        div.style.textAlign = \"left\";\n\n        if (onlyMetrics) {\n            this.body.appendChild(div);\n            let ret = [div.scrollWidth - 1, div.scrollHeight];\n            this.body.removeChild(div);\n            return ret;\n        }\n\n        div.style.background = this.getColorHex(this.colorDefinition);\n        div.style.color = this.getColorContrast(this.colorDefinition);\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.paddingLeft = this.padding + \"px\";\n        div.style.paddingRight = this.padding + \"px\";\n        div.id = \"definition\";\n\n        this.area.appendChild(div);\n        let height = div.scrollHeight + this.padding;\n        div.style.height = height + \"px\";\n\n        this.definitionHeight = height;\n        this.divDefinition = div;\n\n        return [div.scrollWidth - 1, div.scrollHeight];\n    }\n\n    updateLabelTimer() {\n        if (this.labelTimer === undefined) {\n            return;\n        }\n        if (this.timeclose === 0 || this.timestart === 0) {\n            this.labelTimer.innerHTML = '';\n            return;\n        }\n\n        let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n        if (dif <= 0) {\n            dif = 0;\n            this.sendTimeout();\n        }\n        const minutes = Math.floor(Math.abs(dif) / 60);\n        const seconds = Math.abs(dif) % 60;\n        const prefix = dif < 0 ? \"-\" : \"\";\n        this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n        if (dif === 0) {\n            return;\n        }\n\n        let instance = this;\n        setTimeout(function() {\n            instance.updateLabelTimer();\n        }, 500);\n    }\n\n    createDivMessage(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        if (this.divMessageBackground === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n            this.body.appendChild(this.divMessageBackground);\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n        this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n\n        this.autoResizeText(this.divMessage, width, height, false, this.minFontSize, this.maxFontSize, 0.5);\n    }\n\n    createDivMessageStart(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        let height1 = height / 8;\n\n        if (this.divMessageBackground === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n            this.body.appendChild(this.divMessageBackground);\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n\n        this.autoResizeText(this.divMessage, width, height1, false, this.minFontSize, this.maxFontSize, 0.5);\n        top += (height1 - this.divMessage.scrollHeight) / 2;\n        this.divMessage.style.top = top + \"px\";\n\n        if (this.divMessageHelp === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"left\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            let top = this.iconSize + 3 * this.padding + height1;\n            div.style.top = (top + this.padding) + \"px\";\n            div.style.height = (height - height1) + \"px\";\n            this.divMessageHelp = div;\n            this.body.appendChild(this.divMessageHelp);\n\n            this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n        }\n    }\n\n    removeDivMessage() {\n        if (this.divMessage !== undefined) {\n            this.body.removeChild(this.divMessage);\n            this.divMessage = undefined;\n        }\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n        if (this.divMessageBackground !== undefined) {\n            this.divMessageBackground.remove();\n            this.divMessageBackground = undefined;\n        }\n    }\n\n    disableButtons(buttons, disabled) {\n        for (let i = 0; i < buttons.length; i++) {\n            let btn = buttons[i];\n            if (btn !== undefined) {\n                if (disabled) {\n                    btn.classList.add(\"mmogame_imgbutton_disabled\");\n                } else {\n                    btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                }\n            }\n        }\n    }\n\n    repairNickname(nickname) {\n        if (nickname === undefined) {\n            return '';\n        }\n\n        let s = nickname;\n        if (s !== '') {\n            while (s.indexOf('_') !== -1) {\n                s = s.replace('_', ' ');\n            }\n        }\n\n        return s;\n    }\n\n    showScore(json) {\n        let s = json.sumscore === undefined ? '' : '<b>' + json.sumscore + '</b>';\n        if (this.labelScore.innerHTML !== s) {\n            this.labelScore.innerHTML = s;\n            let w = this.iconSize - 2 * this.padding;\n            this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRank.innerHTML !== json.rank) {\n            this.labelScoreRank.innerHTML = json.rank !== undefined ? json.rank : '';\n            this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        if (json.name !== undefined) {\n            window.document.title = (json.usercode !== undefined ? json.usercode : \"\") + \" \" + json.name;\n        }\n\n        s = json.addscore === undefined ? '' : json.addscore;\n        if (this.labelAddScore.innerHTML !== s) {\n            this.labelAddScore.innerHTML = s;\n            this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRankB.innerHTML !== json.completedrank) {\n            this.labelScoreRankB.innerHTML = json.completedrank !== undefined ? json.completedrank : '';\n            this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        s = json.percentcompleted !== undefined ? Math.round(100 * json.percentcompleted) + '%' : '';\n        if (this.labelScoreB.innerHTML !== s) {\n            this.labelScoreB.innerHTML = s;\n            this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n    }\n\n    createDivName(left, top, labelWidth, inpWidth, label, value) {\n        let div = this.createDiv(this.area, left, top, labelWidth, this.iconSize);\n        div.innerHTML = label + \": \";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.textAlign = \"right\";\n        div.style.color = this.getColorContrast(this.colorBackground);\n        this.autoResizeText(div, labelWidth, this.areaHeight, false, this.minFontSize, this.maxFontSize, 1);\n\n        let divInp = document.createElement(\"input\");\n        divInp.style.position = \"absolute\";\n        divInp.style.width = inpWidth + \"px\";\n        divInp.style.type = \"text\";\n        divInp.style.fontSize = div.style.fontSize;\n        divInp.value = value;\n        divInp.style.left = (left + labelWidth + this.padding) + \"px\";\n        divInp.style.top = top + \"px\";\n        divInp.autofocus = true;\n        divInp.style.background = this.getColorHex(this.colorBackground);\n        divInp.style.color = this.getColorContrast(this.colorBackground);\n        this.area.appendChild(divInp);\n        divInp.autofocus = true;\n        let instance = this;\n        divInp.addEventListener(\"keydown\", function() {\n            if (event.key === \"Enter\") {\n                instance.sendSetAvatar(divInp.value, -1);\n            }\n        });\n\n        return divInp;\n    }\n\n    createCheckbox(parent, left, top, width, height, value) {\n        let checkbox = document.createElement('input');\n        checkbox.type = \"checkbox\";\n        checkbox.value = value;\n        checkbox.style.position = \"absolute\";\n        checkbox.style.left = left + \"px\";\n        checkbox.style.top = top + \"px\";\n        checkbox.style.width = width + \"px\";\n        checkbox.style.height = height + \"px\";\n\n        parent.appendChild(checkbox);\n\n        return checkbox;\n    }\n\n    showColorPalette(canvas, colors) {\n        let ctx = canvas.getContext(\"2d\");\n        let width = canvas.width;\n        let height = canvas.height;\n        let strip = width / 5;\n        let instance = this;\n\n        colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n        for (let i = 0; i < 5; i++) {\n            ctx.fillStyle = this.getColorHex(colors[i]);\n            ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n        }\n\n        ctx.strokeStyle = \"#FFFFFF\";\n        ctx.lineWidth = 1;\n        ctx.strokeRect(0, 0, width, height);\n    }\n\n    sendSetAvatar(nickname, avatarid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                let json = JSON.parse(this.responseText);\n                instance.updateButtonsAvatar(1, json.avatar);\n                instance.sendGetAttempt();\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setavatar\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, 'avatarid': avatarid, 'nickname': nickname\n        });\n        xmlhttp.send(data);\n    }\n\n    sendSetColorPalette(colorpaletteid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.colors = undefined;\n                instance.openGame(instance.url, instance.mmogameid, instance.pin, instance.auserid, instance.kinduser);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setcolorpalette\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, \"id\": colorpaletteid\n        });\n        xmlhttp.send(data);\n    }\n\n    computeDifClock(json) {\n        if (json.time !== undefined) {\n            this.difClock = ((new Date()).getTime() - json.time) / 1000;\n        }\n\n        this.computeTimeStartClose(json);\n    }\n\n    computeTimeStartClose(json) {\n        if (json.timestart !== undefined) {\n            this.timestart = parseInt(json.timestart) !== 0 ? parseInt(json.timestart) + this.difClock : 0;\n            this.timeclose = parseInt(json.timeclose) !== 0 ? parseInt(json.timeclose) + this.difClock : 0;\n        } else {\n            this.timestart = 0;\n            this.timeclose = 0;\n        }\n    }\n\n    drawRadio(canvas, color1, color2) {\n        let ctx = canvas.getContext(\"2d\");\n        let size = canvas.width;\n        ctx.clearRect(0, 0, size, canvas.height);\n\n        ctx.beginPath();\n        ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.getColorHex(color1);\n        ctx.fill();\n\n        let checked = canvas.classList.contains(\"checked\");\n        if (checked) {\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color2);\n            ctx.fill();\n        }\n    }\n\n    createRadiobox(parent, size, color1, color2, checked, disabled) {\n        let canvas = document.createElement('canvas');\n        canvas.style.position = \"absolute\";\n        canvas.width = size;\n        canvas.height = size;\n        parent.appendChild(canvas);\n        if (checked) {\n            canvas.classList.add(\"checked\");\n        }\n        if (disabled) {\n            canvas.classList.add(\"disabled\");\n        }\n\n        this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n        return canvas;\n    }\n\n    createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n        if (widthNickName === 0) {\n            widthNickName = this.iconSize;\n        }\n        if (heightNickName === 0) {\n            heightNickName = this.iconSize - this.buttonAvatarHeight;\n        }\n        if (this.buttonsAvatarLeft === undefined) {\n            this.buttonsAvatarLeft = [];\n        }\n        this.buttonsAvatarLeft[num] = left;\n\n        if (this.buttonsAvatarSrc === undefined) {\n            this.buttonsAvatarSrc = [];\n        }\n        this.buttonsAvatarSrc[num] = \"\";\n\n        if (this.nicknames === undefined) {\n            this.nicknames = [];\n        }\n        this.nicknames[num] = \"\";\n\n        if (this.buttonsAvatar === undefined) {\n            this.buttonsAvatar = [];\n        }\n        this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n        if (num === 2 && this.avatarTop !== undefined) {\n            this.buttonsAvatar[num].title = this.getStringM('opponent');\n        }\n\n        if (this.divNicknames === undefined) {\n            this.divNicknames = [];\n        }\n        if (this.divNicknamesWidth === undefined) {\n            this.divNicknamesWidth = [];\n        }\n        if (this.divNicknamesHeight === undefined) {\n            this.divNicknamesHeight = [];\n        }\n        this.divNicknamesWidth[num] = widthNickName;\n        this.divNicknamesHeight[num] = heightNickName;\n\n        this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n    }\n\n    updateButtonsAvatar(num, avatar, nickname) {\n        if (avatar === undefined) {\n            avatar = \"\";\n        }\n        if (nickname === undefined) {\n            nickname = \"\";\n        }\n\n        if (avatar === \"\" && nickname === \"\") {\n            this.buttonsAvatar[num].style.visibility = 'hidden';\n            this.divNicknames[num].style.visibility = 'hidden';\n            return;\n        }\n\n        if (this.nicknames[num] !== nickname || nickname === \"\") {\n            this.nicknames[num] = nickname;\n            let s = nickname;\n\n            if (nickname.length === 0) {\n                s = avatar;\n                let pos = s.lastIndexOf(\"/\");\n                if (pos >= 0) {\n                    s = s.substr(pos + 1);\n                }\n                pos = s.lastIndexOf(\".\");\n                if (pos >= 0) {\n                    s = s.slice(0, pos);\n                }\n                const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n            }\n            s = this.repairNickname(s);\n            if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                this.divNicknames[num].innerHTML = s;\n                this.divNicknames[num].style.textAlign = \"center\";\n                this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                    0, 0, 1);\n            }\n        }\n\n        if (avatar !== this.buttonsAvatarSrc[num]) {\n            this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n            this.buttonsAvatarSrc[num] = avatar;\n        }\n\n        this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n        this.buttonsAvatar[num].style.visibility = 'visible';\n        this.divNicknames[num].style.visibility = 'visible';\n    }\n\n    // Gate\n    gateOpen(mmogameid, pin, auserid, kinduser) {\n        this.minFontSize *= 2;\n        this.maxFontSize *= 2;\n\n        this.mmogameid = mmogameid;\n        this.pin = pin;\n        this.auserid = auserid;\n        this.kinduser = kinduser;\n        this.gateComputeSizes();\n        this.areaTop = this.padding;\n\n        this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n        this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n        switch (kinduser) {\n            case 'moodle':\n                if (localStorage.getItem(\"nickname\") !== null && localStorage.getItem(\"avatarid\") !== null\n                    && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlaygame(auserid, localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n            case 'guid':\n                if (localStorage.getItem(\"auserid\") !== null && localStorage.getItem(\"nickname\") !== null\n                    && localStorage.getItem(\"avatarid\") !== null && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlaygame(localStorage.getItem(\"auserid\"), localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n        }\n\n        this.gateCreateScreen();\n    }\n\n    gatePlaygame(auserid, nickname, paletteid, avatarid) {\n        if (auserid === 0 && this.kinduser === 'guid') {\n            auserid = this.getUserGUID();\n        }\n        localStorage.setItem(\"auserid\", auserid);\n        localStorage.setItem(\"nickname\", nickname);\n        localStorage.setItem(\"paletteid\", paletteid);\n        localStorage.setItem(\"avatarid\", avatarid);\n\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.gateOnServerGetAttempt(JSON.parse(this.responseText), auserid);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let d = {\n            \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n            \"user\": auserid, \"nickname\": nickname, \"paletteid\": paletteid, \"avatarid\": avatarid\n        };\n        if (this.helpurl === undefined) {\n            d.helpurl = 1;\n        }\n        let data = JSON.stringify(d);\n        xmlhttp.send(data);\n    }\n\n    gateOnServerGetAttempt(json, auserid) {\n        if (json.errorcode !== undefined) {\n            return;\n        }\n\n        this.openGame(this.url, this.mmogameid, this.pin, auserid, this.kinduser, false);\n        this.onServerGetAttempt(json);\n    }\n\n    gateCreateScreen() {\n        this.vertical = window.innerWidth < window.innerHeight;\n\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n        this.removeDivMessage();\n\n        this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n        if (this.vertical) {\n            this.gateCreateScreenVertical();\n        } else {\n            this.gateCreateScreenHorizontal();\n        }\n    }\n\n    gateCreateScreenVertical() {\n        let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, ['[LANGM_CODE]: ', '[LANGM_NAME]: ', '[LANGM_PALETTE]']);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n        bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n            this.getStringM('name') + \": \") + 2 * this.padding;\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = \"[LANGM_PALETTE]\";\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = \"[LANGM_AVATARS]\";\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Vertical\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\", function() {\n            instance.gatePlaygame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                instance.edtNickname.value, instance.paletteid, instance.avatarid);\n        });\n    }\n\n    gateCreateScreenHorizontal() {\n        let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, ['[LANGM_CODE]: ', '[LANGM_NAME]: ', '[LANGM_PALETTE]']);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n        let sizeLabel = this.gateComputeLabelSize(this.fontSize, ['[LANGM_NAME]: ']);\n        bottom = this.gateCreateLabelEdit(0, bottom, newWidth - 2 * this.padding, this.fontSize, sizeLabel[0], \"[LANGM_NAME]: \");\n\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = \"[LANGM_PALETTE]\";\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = \"[LANGM_AVATARS]\";\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        // Avatar\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Horizontal\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\",\n            function() {\n                instance.gatePlaygame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n    }\n\n    gateComputeLabelSize(fontSize, aLabel) {\n        let maxWidth = 0;\n        let maxHeight = 0;\n\n        for (let i = 0; i < aLabel.length; i++) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = aLabel[i];\n            label.style.whiteSpace = \"nowrap\";\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n            label.style.width = \"0px\";\n            label.style.height = \"0px\";\n            this.area.appendChild(label);\n\n            if (label.scrollWidth > maxWidth) {\n                maxWidth = label.scrollWidth;\n            }\n\n            if (label.scrollHeight > maxHeight) {\n                maxHeight = label.scrollHeight;\n            }\n            this.area.removeChild(label);\n        }\n\n        return [maxWidth, maxHeight];\n    }\n\n    gateCreateLabelEdit(left, top, width, fontSize, labelWidth, title) {\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n        let leftEdit = (left + labelWidth + this.padding);\n        const div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = (width - leftEdit - this.padding) + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return ret;\n    }\n\n    gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n        const label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        top += label.scrollHeight;\n\n        let leftEdit = left + 'px';\n        let div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return top + fontSize + this.padding;\n    }\n\n    gateCreateCode(left, top, width, fontSize, labelWidth) {\n        return this.gateCreateLabelEdit(left, top, width, fontSize, labelWidth, \"[LANGM_CODE]: \");\n    }\n\n    gateShowAvatars(json, left, top, width, height, countX) {\n        this.avatar = undefined;\n        let leftOriginal = left;\n        let instance = this;\n        let w = Math.round(this.padding / 2) + \"px\";\n        for (let i = 0; i < json.countavatars; i++) {\n            let btn = this.createCenterImageButton(this.area, left, top, this.iconSize - this.padding,\n                this.iconSize - this.padding, \"\", 'assets/avatars/' + json['avatar' + (i + 1)]);\n            btn.classList.add(\"mmogame_avatar\");\n            let id = json['avatarid' + (i + 1)];\n            btn.addEventListener(\"click\",\n                function() {\n                    instance.gateUpdateAvatar(btn, id, w);\n                }\n            );\n\n            left += this.iconSize;\n\n            if ((i + 1) % countX === 0) {\n                top += this.iconSize;\n                left = leftOriginal;\n            }\n        }\n    }\n\n    gateSendGetColorsAvatarsVertical(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                     gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n        let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n        let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n        let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n        let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n        if (!updateColors) {\n            countXcolors = countXcolors = 0;\n        }\n        if (!updateAvatars) {\n            countXavatars = countYavatars = 0;\n        }\n\n        let instance = this;\n        require(['core/ajax'], function(Ajax) {\n            // Defining the parameters to be passed to the service\n            let params = {\n                mmogameid: instance.mmogameid,\n                kinduser: instance.kinduser,\n                user: instance.auserid,\n                avatars: countXavatars * countYavatars,\n                colorpalettes: countXcolors * countYcolors,\n            };\n\n            // Calling the service through the Moodle AJAX API\n            let getAssets = Ajax.call([{\n                methodname: 'mod_mmogame_get_assets',\n                args: params\n            }]);\n\n            // Handling the response\n            getAssets[0].done(function(response) {\n                 return JSON.parse(response);\n            }).fail(function(error) {\n                return error;\n            });\n        });\n    }\n\n    gateShowColorPalettes(json, left, top, width, height, countX, countY) {\n        let instance = this;\n        let i = 0;\n        this.canvasColor = undefined;\n        for (let iy = 0; iy < countY; iy++) {\n            for (let ix = 0; ix < countX; ix++) {\n                i++;\n                if (i > json.count) {\n                    break;\n                }\n                let a = json[\"palette\" + i];\n                if (a === undefined) {\n                    break;\n                }\n                let canvas = document.createElement('canvas');\n                canvas.style.position = \"absolute\";\n                canvas.style.left = (left + (ix % countX) * this.iconSize) + \"px\";\n                canvas.style.top = (top + iy * this.iconSize) + \"px\";\n                canvas.width = this.iconSize - this.padding * 3 / 2;\n                canvas.height = this.iconSize - this.padding * 3 / 2;\n                canvas.style.cursor = 'pointer';\n                canvas.classList.add(\"mmogame_color\");\n                this.area.appendChild(canvas);\n                for (let j = 0; j < a.length; j++) {\n                    a[j] = parseInt(a[j]);\n                }\n                this.showColorPalette(canvas, a);\n                let id = json['paletteid' + i];\n\n                canvas.addEventListener(\"click\", function() {\n                    instance.gateUpdateColorPalete(canvas, id);\n                });\n            }\n        }\n        this.area.classList.add(\"palete\");\n    }\n\n    gateUpdateColorPalete(canvas, id) {\n        if (this.canvasColor !== undefined) {\n            this.canvasColor.style.borderStyle = \"none\";\n        }\n        this.canvasColor = canvas;\n        canvas.style.borderStyle = \"outset\";\n        let w = Math.round(this.padding / 2) + \"px\";\n        canvas.style.borderLeftWidth = w;\n        canvas.style.borderTopWidth = w;\n        canvas.style.borderRightWidth = w;\n        canvas.style.borderBottomWidth = w;\n\n        this.paletteid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateAvatar(avatar, id, w) {\n        if (this.avatar !== undefined) {\n            this.avatar.style.borderStyle = \"none\";\n        }\n        this.avatar = avatar;\n        avatar.style.borderStyle = \"outset\";\n\n        avatar.style.borderLeftWidth = w;\n        avatar.style.borderTopWidth = w;\n        avatar.style.borderRightWidth = w;\n        avatar.style.borderBottomWidth = w;\n\n        this.avatarid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateSubmit() {\n        let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n        let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode && this.edtNickname.value.length > 0;\n\n        this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n    }\n    gateComputeSizes() {\n        this.computeSizes();\n        this.iconSize = Math.round(0.8 * this.iconSize);\n        this.padding = Math.round(0.8 * this.padding);\n    }\n    getStringM(name) {\n            return M.util.get_string(name, 'mmogame');\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","window","localStorage","getItem","isNaN","this","size","parseFloat","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","firstChild","removeChild","lastChild","area","undefined","openGame","url","id","pin","auserid","kinduser","callOnAfterOpenGame","game","mmogameid","getUserGUID","computeSizes","onAfterOpenGame","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createElement","classList","add","tabIndex","setAttribute","style","position","draggable","src","appendChild","createImage","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","guid","uuid4","setItem","pad","length","uuid","Array","floor","random","map","x","toString","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","toUpperCase","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairHTML","mapFiles","mapFilesWidth","mapFilesHeight","key","get","repairP","createDivScorePercent","lineHeight","textAlign","border","boxShadow","colorScore","title","getStringM","colorScore2","disabled","labelScore","labelScore2","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","createButtonHelp","buttonHelp","readJsonFiles","json","Map","set","fileg1","filec1","width1","height1","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","message","divMessageHelp","areaTop","divMessageBackground","divMessage","createDivMessageStart","showHelpScreen","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","createDivName","labelWidth","inpWidth","value","areaHeight","divInp","type","autofocus","event","sendSetAvatar","createCheckbox","checkbox","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","avatarid","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","updateButtonsAvatar","avatar","sendGetAttempt","open","setRequestHeader","data","stringify","send","sendSetColorPalette","colorpaletteid","computeDifClock","time","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","lastIndexOf","substr","split","pop","colorsBackground","buttonAvatarTop","gateOpen","gateComputeSizes","areaWidth","paletteid","gatePlaygame","gateCreateScreen","gateOnServerGetAttempt","d","helpurl","errorcode","onServerGetAttempt","vertical","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateCode","edtCode","edt","gateUpdateSubmit","gateCreateLabelEditVertical","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatarsVertical","bottom2","btnSubmit","sizeLabel","gateCreateLabelEdit","aLabel","align","leftEdit","divShortAnswer","gateShowAvatars","countX","leftOriginal","countavatars","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","require","Ajax","params","user","avatars","colorpalettes","call","methodname","args","done","response","fail","error","gateShowColorPalettes","countY","canvasColor","iy","ix","count","cursor","j","gateUpdateColorPalete","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string"],"mappings":"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"}