{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class MmoGame {\n        kindSound = 0;\n        state = 0;\n        body;\n        minFontSize;\n        maxFontSize;\n        fontSize;\n        avatarTop;\n        colorsBackground;\n        buttonAvatarTop;\n        buttonAvatarHeight;\n        colorScore;\n        colorScore2;\n        definition;\n        colorDefinition;\n\n        /**\n         * Basic class for games.\n         *\n         * @module mmogame\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n        constructor() {\n            this.body = document.getElementsByTagName(\"body\")[0];\n            this.kindSound = 0;\n\n            let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n            this.minFontSize = size;\n            this.maxFontSize = 2 * size;\n            this.fontSize = size;\n        }\n\n        hasHelp() {\n            return false;\n        }\n\n        removeBodyChilds() {\n            this.removeDivMessage();\n\n            while (this.body.firstChild) {\n                this.body.removeChild(this.body.lastChild);\n            }\n            this.area = undefined;\n        }\n\n        openGame() {\n            this.removeBodyChilds();\n            this.area = undefined;\n            this.computeSizes();\n        }\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n\n        createImage(parent, left, top, width, height, filename) {\n            let button = document.createElement(\"img\");\n\n            button.tabIndex = 0;\n            button.style.position = \"absolute\";\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.draggable = false;\n\n            if (width !== 0) {\n                button.style.width = width + \"px\";\n            }\n            if (height !== 0) {\n                button.style.height = height + \"px\";\n            }\n\n            button.style.fontSize = height + \"px\";\n            if (filename !== undefined && filename !== '') {\n                button.src = filename;\n            }\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        createCenterImageButton(parent, left, top, width, height, classname, filename) {\n            let button = document.createElement(\"img\");\n            button.classList.add(\"mmogame_imgbutton\");\n            button.style.position = \"absolute\";\n            button.draggable = false;\n\n            const img = new Image();\n            img.onload = function() {\n                if (this.width === 0 || this.height === 0) {\n                    this.width = this.height = 1;\n                }\n\n                if (this.width > 0 && this.height > 0) {\n                    let mul = Math.min(width / this.width, height / this.height);\n                    let w = Math.round(this.width * mul);\n                    let h = Math.round(this.height * mul);\n\n                    button.style.width = w + \"px\";\n                    button.style.height = h + \"px\";\n                    button.style.left = (left + width / 2 - w / 2) + \"px\";\n                    button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                    button.src = filename;\n                    button.innerHTML = filename;\n                    button.style.fontSize = height + \"px\";\n                }\n            };\n            if (filename !== undefined && filename !== \"\") {\n                img.style.left = left + \"px\";\n                img.style.top = top + \"px\";\n                img.style.visibility = 'hidden';\n                img.src = filename;\n            }\n            button.tabIndex = 0;\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        updateImageButton(button, left, top, width, height, filename) {\n            button.src = filename;\n        }\n\n        createDiv(parent, left, top, width, height) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n\n            parent.appendChild(div);\n\n            return div;\n        }\n\n        createDivColor(parent, left, top, width, height, color) {\n            let div = this.createDiv(parent, left, top, width, height);\n            div.style.background = this.getColorHex(color);\n\n            return div;\n        }\n\n        getMuteFile() {\n            if (this.kindSound === 0) {\n                return 'assets/sound-on-flat.png';\n            } else if (this.kindSound === 1) {\n                return 'assets/sound-off-flat.png';\n            } else if (this.kindSound === 2) {\n                return 'assets/speak.svg';\n            } else {\n                return 'assets/sound-on-flat.png';\n            }\n        }\n\n        playAudio(audio) {\n            if (this.kindSound !== 0 && audio !== null) {\n                if (audio.networkState === 1) {\n                    audio.play();\n                }\n            }\n        }\n\n        autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n            let minHeight = 0.9 * height;\n            let low = Math.max(1, minFontSize);\n            width = Math.round(width);\n            height = Math.round(height);\n            let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n            let fitSize = low;\n            let fitHeight = 0;\n            let newHeight = 0;\n            let newWidth = 0;\n\n            for (let i = 0; i <= 10; i++) {\n                let el = document.createElement(\"div\");\n                el.style.left = 0;\n                el.style.top = 0;\n                el.style.width = width + \"px\";\n                el.style.height = 0;\n                el.visibility = \"visible\";\n                if (!wrap) {\n                    el.style.whiteSpace = \"nowrap\";\n                }\n                el.innerHTML = item.innerHTML;\n                this.body.appendChild(el);\n\n                let fontSize = (low + up) / 2;\n\n                el.style.fontSize = fontSize + \"px\";\n                newHeight = el.scrollHeight;\n                newWidth = el.scrollWidth - 1;\n\n                this.body.removeChild(el);\n\n                if (newWidth > width || newHeight > height) {\n                    up = fontSize;\n                } else {\n                    low = fontSize;\n                    if (Math.abs(fitHeight - newHeight) <= 2) {\n                        break;\n                    }\n                    fitHeight = newHeight;\n                    fitSize = fontSize;\n                    if (newHeight > minHeight) {\n                        break;\n                    }\n                }\n            }\n            item.style.fontSize = fitSize + \"px\";\n\n            if (newWidth > width || newHeight > height) {\n                this.autoResizeTextBr(item);\n                newWidth = item.scrollWidth;\n                newHeight = item.scrollHeight;\n                this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                    minRatio);\n            } else {\n                return [item.scrollWidth - 1, item.scrollHeight];\n            }\n\n            let el = document.createElement(\"div\");\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"hidden\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n            el.style.fontSize = item.style.fontSize;\n            let size = [el.scrollWidth - 1, el.scrollHeight];\n            this.body.removeChild(el);\n\n            return size;\n        }\n\n        autoResizeTextBr(item) {\n            let s = item.innerHTML;\n            let change = false;\n            while (s.startsWith('<br>')) {\n                s = s.substring(4);\n                change = true;\n            }\n            let pos1 = s.indexOf('<br>');\n            for (; ;) {\n                let pos = s.indexOf('<br>', pos1 + 4);\n                if (pos < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos1 + 4, pos);\n                if (!s2.trim()) {\n                    s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                    change = true;\n                    pos = pos1;\n                }\n                pos1 = pos;\n            }\n\n            if (change) {\n                item.innerHTML = s;\n            }\n        }\n\n        autoResizeTextImage(item, subwidth, subheight, minRatio) {\n            if (subwidth === 0 && subheight === 0) {\n                return;\n            }\n            let s = item.innerHTML;\n\n            for (let pos = 0; ;) {\n                let pos2 = s.indexOf(\"<img \", pos);\n                if (pos2 < 0) {\n                    break;\n                }\n                let pos3 = s.indexOf(\">\", pos2);\n                if (pos3 < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos2, pos3) + \" \";\n\n                let width = 0;\n                let height = 0;\n                let posw = s2.indexOf(\"width=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                        width = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n\n                posw = s2.indexOf(\"height=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                        height = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n                if (width > 0 && height > 0) {\n                    let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                    let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                    let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                    s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n                }\n                s = s.slice(0, pos2) + s2 + s.slice(pos3);\n                pos = pos3;\n            }\n            item.innerHTML = s;\n        }\n\n        pad(num, size) {\n            let s = num + \"\";\n            while (s.length < size) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        uuid4() {\n            const uuid = new Array(36);\n            const hexDigits = '0123456789abcdef'; // Lookup table for hexadecimal digits\n\n            for (let i = 0; i < 36; i++) {\n                uuid[i] = Math.floor(Math.random() * 16); // Generate random numbers for each position\n            }\n\n            // Insert dashes at predefined positions\n            uuid[8] = '-';\n            uuid[13] = '-';\n            uuid[18] = '-';\n            uuid[23] = '-';\n\n            // Set specific bits to comply with UUIDv4 standards\n            uuid[14] = 4; // The 13th position represents version 4 (0100 in binary)\n            // eslint-disable-next-line no-bitwise\n            uuid[19] = (uuid[19] & 0x3) | 0x8; // The 17th position must start with '10' in binary\n\n            // Convert numbers to hexadecimal without using toString\n            this.user = uuid\n                .map((x) => (typeof x === 'string' ? x : hexDigits[x])) // Convert numeric values to hex using lookup table\n                .join('');\n\n            let options = {userGUID: this.user};\n            let instance = this;\n            this.saveOptions(options)\n                .then(function() {\n                    return true;\n                })\n                .catch(error => {\n                    instance.showError(error.message);\n                    return false;\n                });\n        }\n\n        computeSizes() {\n            if (this.cIcons < 5 || this.cIcons === undefined) {\n                this.cIcons = 5;\n            }\n            this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n            this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n            this.padding = Math.round(this.iconSize / 10);\n            this.iconSize -= this.padding;\n        }\n\n        getIconSize() {\n            return this.iconSize;\n        }\n\n        getCopyrightHeight() {\n            return Math.round(this.getIconSize() / 3);\n        }\n\n        getPadding() {\n            return this.padding;\n        }\n\n        getColorHex(x) {\n            const hexDigits = '0123456789ABCDEF'; // Lookup table for hexadecimal digits\n            const hexArray = [];\n\n            for (let i = 0; i < 6; i++) {\n                // Extract the least significant nibble and find its hex representation\n                // eslint-disable-next-line no-bitwise\n                hexArray.unshift(hexDigits[x & 0xF]);\n                // eslint-disable-next-line no-bitwise\n                x >>= 4; // Shift right by 4 bits to process the next nibble\n            }\n\n            // Join the hex digits and prefix with '#'\n            return '#' + hexArray.join('');\n        }\n\n        getContrast(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256; // Blue.\n\n            return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        }\n\n        getColorGray(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256, // Blue.\n                yiq = (r * 299) + g * 587 + b * 114,\n                m = 255 * 299 + 255 * 587 + 255 * 114,\n                gray = Math.round(yiq * 255 / m);\n\n            return (gray * 0x10000) + (gray * 0x100) + gray;\n        }\n\n        getColorContrast(x) {\n            return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n        }\n\n        repairColors(colors) {\n\n            this.colors = colors;\n            let instance = this;\n            this.colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n\n            this.colorBackground = this.colors[0];\n            this.body.style.background = this.getColorHex(this.colorBackground);\n\n            return this.colors;\n        }\n\n        repairP(s) {\n            if (s === undefined) {\n                return \"\";\n            }\n\n            // Remove <p> tags and replace </p> with <br />\n            let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n            // Remove <br> or <br/> at the end of the string\n            s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n            // Remove the <ol><br></ol> sequence if it exists\n            let pos = s2.indexOf('<ol><br></ol>');\n            if (pos >= 0) {\n                s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n            }\n\n            return s2;\n        }\n\n        createDivButton(left, top) {\n            let button = document.createElement(\"button\");\n            button.style.position = \"absolute\";\n            button.classList.add(\"mmogame_button\");\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.style.width = this.iconSize + \"px\";\n            button.style.height = this.iconSize + \"px\";\n            button.style.lineHeight = this.iconSize + \"px\";\n            button.style.textAlign = \"center\";\n\n            return button;\n        }\n        createDivScore(left, top, num) {\n            let button = this.createDivButton(left, top);\n\n            button.style.borderRadius = this.iconSize + \"px\";\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            button.title = this.getStringM('js_grade');\n            button.alt = this.getStringM('js_grade');\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n            } else {\n                this.buttonScore2 = button;\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '100 %';\n            this.autoResizeText(button, this.iconSize, this.iconSize, false, 0, 0, 1);\n            button.innerHTML = '';\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade');\n            if (num === 1) {\n                this.labelScore = div;\n            } else {\n                this.labelScore2 = div;\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            button.disabled = true;\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            this.createAddScore(left, top + this.iconSize - h, this.iconSize, h, num);\n/* A\n            div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n*/\n        }\n\n        createDivScorePercent(left, top, num) {\n            let button = this.createDivButton(left, top);\n\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n                button.title = this.getStringM('js_grade');\n            } else {\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '';\n            button.disabled = true;\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            if (num === 1) {\n                this.labelScore = div;\n                div.title = this.getStringM('js_grade');\n            } else {\n                this.labelScore2 = div;\n                div.title = this.getStringM('js_grade_opponent');\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_ranking_grade');\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            this.createAddScore(left, top + this.iconSize - h, this.iconSize / 2, h);\n/* A\ndiv = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n*/\n            let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n            div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = h + \"px\";\n            div.style.lineHeight = h + \"px\";\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_ranking_percent');\n            if (num === 1) {\n                this.labelScoreRankB = div;\n            }\n\n            label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n            div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n                this.iconSize / 2);\n            div.style.textAlign = \"center\";\n            div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = label.style.fontSize;\n            div.style.fontWeight = 'bold';\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_percent');\n            this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n            if (num === 1) {\n                this.labelScoreB = div;\n            }\n        }\n\n        createDivTimer(left, top, sizeIcon) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = sizeIcon + \"px\";\n            div.style.height = sizeIcon + \"px\";\n            div.style.whiteSpace = \"nowrap\";\n            div.style.lineHeight = sizeIcon + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n            div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n            div.name = \"timer\";\n            this.body.appendChild(div);\n            this.labelTimer = div;\n\n            div.innerHTML = '23:59';\n            this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n            div.innerHTML = '';\n            div.title = this.getStringM('js_question_time');\n        }\n\n        createButtonSound(left, top) {\n            this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n                this.getMuteFile());\n            this.buttonSound.alt = this.getStringM('js_sound');\n            let instance = this;\n            this.buttonSound.addEventListener(\"click\", function() {\n                instance.onClickSound(instance.buttonSound);\n            });\n\n            this.buttonSound.title = this.getStringM('js_sound');\n        }\n\n        onClickSound(btn) {\n            window.title = btn.src;\n            this.kindSound = (this.kindSound + 1) % 2;\n            window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n            btn.src = this.getMuteFile();\n        }\n\n        createButtonHelp(left, top) {\n            this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n            this.buttonHelp.alt = this.getStringM('js_help');\n        }\n\n        findbest(low, up, fn) {\n            if (low < 1) {\n                low = 1;\n            }\n\n            let prevSize;\n            let fitSize = low;\n            let testSize;\n            for (let i = 0; i <= 10; i++) {\n                prevSize = low;\n                testSize = (low + up) / 2;\n\n                let cmp = fn(testSize);\n                if (cmp <= 0) {\n                    fitSize = testSize;\n                    low = testSize;\n                } else {\n                    up = testSize;\n                }\n                if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                    break;\n                }\n            }\n\n            return fitSize;\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined) {\n                return;\n            }\n            if (this.timeclose === 0 || this.timestart === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n\n            let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n            if (dif <= 0) {\n                dif = 0;\n                this.sendTimeout();\n            }\n            const minutes = Math.floor(Math.abs(dif) / 60);\n            const seconds = Math.abs(dif) % 60;\n            const prefix = dif < 0 ? \"-\" : \"\";\n            this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n            if (dif === 0) {\n                return;\n            }\n\n            let instance = this;\n            setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        createDivMessage(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            this.createDivMessageDo(left, top, width, height, message, height);\n\n            this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n        }\n\n        createDivMessageStart(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            let height1 = height / 8;\n\n            this.createDivMessageDo(left, top, width, height, message, height1);\n\n            top += (height1 - this.divMessage.scrollHeight) / 2;\n            this.divMessage.style.top = top + \"px\";\n\n            if (this.divMessageHelp === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"left\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                let top = this.iconSize + 3 * this.padding + height1;\n                div.style.top = (top + this.padding) + \"px\";\n                div.style.height = (height - height1) + \"px\";\n                this.divMessageHelp = div;\n                this.body.appendChild(this.divMessageHelp);\n\n                this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n            }\n        }\n\n        removeDivMessage() {\n            if (this.divMessage !== undefined) {\n                this.body.removeChild(this.divMessage);\n                this.divMessage = undefined;\n            }\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n            if (this.divMessageBackground !== undefined) {\n                this.divMessageBackground.remove();\n                this.divMessageBackground = undefined;\n            }\n        }\n\n        disableButtons(buttons, disabled) {\n            for (let i = 0; i < buttons.length; i++) {\n                let btn = buttons[i];\n                if (btn !== undefined) {\n                    if (disabled) {\n                        btn.classList.add(\"mmogame_imgbutton_disabled\");\n                    } else {\n                        btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                    }\n                }\n            }\n        }\n\n        repairNickname(nickname) {\n            if (nickname === undefined) {\n                return '';\n            }\n\n            let s = nickname;\n            if (s !== '') {\n                while (s.indexOf('_') !== -1) {\n                    s = s.replace('_', ' ');\n                }\n            }\n\n            return s;\n        }\n\n        showScore(sumscore, rank, name, usercode, addscore, completedrank, percentcompleted) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n\n        showColorPalette(canvas, colors) {\n            let ctx = canvas.getContext(\"2d\");\n            let width = canvas.width;\n            let height = canvas.height;\n            let strip = width / 5;\n            let instance = this;\n\n            colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n            for (let i = 0; i < 5; i++) {\n                ctx.fillStyle = this.getColorHex(colors[i]);\n                ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n            }\n\n            ctx.strokeStyle = \"#FFFFFF\";\n            ctx.lineWidth = 1;\n            ctx.strokeRect(0, 0, width, height);\n        }\n\n        setColorsString(s) {\n            let a = [0x9B7ED9, 0x79F2F2, 0x67BF5A, 0xD0F252, 0xBF5B21];\n            if (s !== undefined && s.length >= 0) {\n                let b = s.split(\",\");\n                if (b.length === 5) {\n                    a = b;\n                    for (let i = 0; i < 5; i++) {\n                        a[i] = parseInt(a[i]);\n                    }\n                }\n            }\n            this.setColors(a);\n        }\n\n        computeDifClock(time, timeStart, timeClose) {\n            if (time !== undefined) {\n                this.difClock = ((new Date()).getTime() - time) / 1000;\n            }\n\n            this.computeTimeStartClose(timeStart, timeClose);\n        }\n\n        computeTimeStartClose(timeStart, timeClose) {\n            if (timeStart !== undefined) {\n                this.timestart = parseInt(timeStart) !== 0 ? parseInt(timeStart) + this.difClock : 0;\n                this.timeclose = parseInt(timeClose) !== 0 ? parseInt(timeClose) + this.difClock : 0;\n            } else {\n                this.timestart = 0;\n                this.timeclose = 0;\n            }\n        }\n\n        drawRadio(canvas, color1, color2) {\n            let ctx = canvas.getContext(\"2d\");\n            let size = canvas.width;\n            ctx.clearRect(0, 0, size, canvas.height);\n\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color1);\n            ctx.fill();\n\n            let checked = canvas.classList.contains(\"checked\");\n            if (checked) {\n                ctx.beginPath();\n                ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n                ctx.fillStyle = this.getColorHex(color2);\n                ctx.fill();\n            }\n        }\n\n        createRadiobox(parent, size, color1, color2, checked, disabled) {\n            let canvas = document.createElement('canvas');\n            canvas.style.position = \"absolute\";\n            canvas.width = size;\n            canvas.height = size;\n            parent.appendChild(canvas);\n            if (checked) {\n                canvas.classList.add(\"checked\");\n            }\n            if (disabled) {\n                canvas.classList.add(\"disabled\");\n            }\n\n            this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n            return canvas;\n        }\n\n        createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n            if (widthNickName === 0) {\n                widthNickName = this.iconSize;\n            }\n            if (heightNickName === 0) {\n                heightNickName = this.iconSize - this.buttonAvatarHeight;\n            }\n            if (this.buttonsAvatarLeft === undefined) {\n                this.buttonsAvatarLeft = [];\n            }\n            this.buttonsAvatarLeft[num] = left;\n\n            if (this.buttonsAvatarSrc === undefined) {\n                this.buttonsAvatarSrc = [];\n            }\n            this.buttonsAvatarSrc[num] = \"\";\n\n            if (this.nicknames === undefined) {\n                this.nicknames = [];\n            }\n            this.nicknames[num] = \"\";\n\n            if (this.buttonsAvatar === undefined) {\n                this.buttonsAvatar = [];\n            }\n            this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n            if (num === 2 && this.avatarTop !== undefined) {\n                this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n            }\n\n            if (this.divNicknames === undefined) {\n                this.divNicknames = [];\n            }\n            if (this.divNicknamesWidth === undefined) {\n                this.divNicknamesWidth = [];\n            }\n            if (this.divNicknamesHeight === undefined) {\n                this.divNicknamesHeight = [];\n            }\n            this.divNicknamesWidth[num] = widthNickName;\n            this.divNicknamesHeight[num] = heightNickName;\n\n            this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n        }\n\n        updateButtonsAvatar(num, avatar, nickname) {\n            if (avatar === undefined) {\n                avatar = \"\";\n            }\n            if (nickname === undefined) {\n                nickname = \"\";\n            }\n\n            if (avatar === \"\" && nickname === \"\") {\n                this.buttonsAvatar[num].style.visibility = 'hidden';\n                this.divNicknames[num].style.visibility = 'hidden';\n                return;\n            }\n\n            if (this.nicknames[num] !== nickname || nickname === \"\") {\n                this.nicknames[num] = nickname;\n                let s = nickname;\n\n                if (nickname.length === 0) {\n                    s = avatar;\n                    let pos = s.lastIndexOf(\"/\");\n                    if (pos >= 0) {\n                        s = s.slice(pos + 1);\n                    }\n                    pos = s.lastIndexOf(\".\");\n                    if (pos >= 0) {\n                        s = s.slice(0, pos);\n                    }\n                    const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                    s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n                }\n                s = this.repairNickname(s);\n                if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                    this.divNicknames[num].innerHTML = s;\n                    this.divNicknames[num].style.textAlign = \"center\";\n                    this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                    this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                        0, 0, 1);\n                }\n            }\n\n            if (avatar !== this.buttonsAvatarSrc[num]) {\n                this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                    this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n                this.buttonsAvatarSrc[num] = avatar;\n            }\n\n            this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n            this.buttonsAvatar[num].style.visibility = 'visible';\n            this.divNicknames[num].style.visibility = 'visible';\n        }\n\n        gateOpen(mmogameid, pin, kinduser, user, url) {\n            this.url = url;\n            this.minFontSize *= 2;\n            this.maxFontSize *= 2;\n\n            // Saves parameters to class variables.\n            this.mmogameid = mmogameid;\n            this.pin = pin;\n            this.kinduser = kinduser;\n            this.user = user;\n            this.gateComputeSizes();\n\n            this.areaTop = this.padding;\n            this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n            this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n            let instance = this;\n            this.getOptions().then(function(options) {\n                if (!options.hasOwnProperty('kindsound')) {\n                    options.kindsound = 0;\n                }\n                instance.kindSound = options.kindSound === 1 || options.kindSound === 2 ? options.kindSound : 0;\n\n                if (!options.hasOwnProperty('nickname')) {\n                    options.nickname = '';\n                }\n                options.avatarid = options.hasOwnProperty('avatarid') && options.avatarid !== undefined ? options.avatarid : 0;\n                options.paletteid = options.hasOwnProperty('paletteid') ? options.paletteid : 0;\n\n                switch (kinduser) {\n                    case 'moodle':\n                        if (options.nickname !== '' && options.avatarid !== 0 && options.paletteid !== 0) {\n                            instance.gatePlayGame(false, options.nickname, options.paletteid, options.avatarid);\n                            return true;\n                        }\n                        break;\n                    case 'guid':\n                        if (!options.hasOwnProperty('userGUID')) {\n                            options.userGUID = '';\n                        }\n                        if (options.userGUID.length >= 10 && options.nickname !== '' && options.avatarid !== 0 &&\n                            options.paletteid !== 0) {\n                            instance.user = options.userGUID;\n                            instance.gatePlayGame(false, options.nickname, options.paletteid, options.avatarid);\n                            return true;\n                        }\n                        break;\n                }\n                // Call gateCreateScren to ask user for nickname, colors, avatar.\n                instance.gateCreateScreen();\n                return true;\n            }).catch(error => {\n                instance.showError(error.message);\n                return false;\n            });\n        }\n\n        gatePlayGame(save, nickname, paletteid, avatarid) {\n            if (this.kinduser === 'guid') {\n                if (this.user === '') {\n                    this.uuid4();\n                }\n            }\n\n            if (!save) {\n                this.nickname = nickname;\n                this.paletteid = paletteid;\n                this.avatarid = avatarid;\n                this.callGetAttempt({nickname: nickname, colorpaletteid: paletteid, avatarid: avatarid});\n                return;\n            }\n\n            let options = {nickname: nickname, avatarid: avatarid, paletteid: paletteid};\n\n            let instance = this;\n            this.saveOptions(options)\n                .then(function() {\n                    instance.nickname = nickname;\n                    instance.paletteid = paletteid;\n                    instance.avatarid = avatarid;\n                    instance.callGetAttempt();\n                    return true;\n                })\n                .catch(error => {\n                    instance.showError(error.message);\n                    return false;\n                });\n        }\n\n        callGetAttempt(extraparams) {\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    nickname: null,\n                    colorpaletteid: null,\n                    avatarid: null,\n                };\n                if (extraparams !== undefined) {\n                    params = {...params, ...extraparams};\n                }\n                // Calling the service through the Moodle AJAX API\n                let getAttempt = Ajax.call([{\n                    methodname: 'mmogametype_quiz_get_attempt',\n                    args: params,\n                }]);\n\n                // Handling the response\n                getAttempt[0].done(function(response) {\n                    if (extraparams !== undefined && extraparams.colorpaletteid !== undefined) {\n                        instance.openGame();\n                        instance.colors = undefined;\n                    }\n                    instance.processGetAttempt(JSON.parse(response));\n                }).fail(function(error) {\n                    instance.createDivMessage(error.message);\n                    return error;\n                });\n            });\n        }\n\n        gateCreateScreen() {\n            this.vertical = window.innerWidth < window.innerHeight;\n\n            this.createArea();\n\n            if (this.vertical) {\n                this.gateCreateScreenVertical();\n            } else {\n                this.gateCreateScreenHorizontal();\n            }\n        }\n\n        gateCreateScreenVertical() {\n            let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // A bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code') + \": \") + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n\n            bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n                this.getStringM('js_name') + \": \") + 2 * this.padding;\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Vertical\n            this.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\", function() {\n                if (instance.edtCode !== undefined) {\n                    instance.user = instance.edtCode.value;\n                }\n                instance.gatePlayGame(true, instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n        }\n\n        gateCreateScreenHorizontal() {\n            let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const sName = this.getStringM('js_name') + \": \";\n            let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // B bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code')) + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n            let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n            bottom = this.gateCreateLabelEditHorizontal(0, bottom, newWidth - 2 * this.padding,\n                this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n            this.edtNickname = this.edt;\n\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            // Button refresh color palettes\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n\n            // Button refresh avatars\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            // Avatar\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Horizontal\n            this.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\",\n                function() {\n                    if (instance.edtCode !== undefined) {\n                        instance.user = instance.edtCode.value;\n                    }\n                    instance.gatePlayGame(true, instance.edtNickname.value, instance.paletteid, instance.avatarid);\n                });\n        }\n\n        gateComputeLabelSize(fontSize, aLabel) {\n            let maxWidth = 0;\n            let maxHeight = 0;\n\n            for (let i = 0; i < aLabel.length; i++) {\n                const label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.innerHTML = aLabel[i];\n                label.style.whiteSpace = \"nowrap\";\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                label.style.width = \"0px\";\n                label.style.height = \"0px\";\n                this.area.appendChild(label);\n\n                if (label.scrollWidth > maxWidth) {\n                    maxWidth = label.scrollWidth;\n                }\n\n                if (label.scrollHeight > maxHeight) {\n                    maxHeight = label.scrollHeight;\n                }\n                this.area.removeChild(label);\n            }\n\n            return [maxWidth, maxHeight];\n        }\n\n        gateCreateLabel(left, top, labelWidth, fontSize, title) {\n            console.log(\"gateCreateLabel title=\" + title);\n\n            const label = document.createElement('label');\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            return label;\n        }\n        gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n            console.log(\"gateCreateLabelEditVertical title=\" + title);\n            const label = this.gateCreateLabel(left, top, labelWidth, fontSize, title);\n\n            top += label.scrollHeight;\n\n            this.edt = this.gateCreateInput(left, top, width, fontSize);\n/* A\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n            div.style.width = width + \"px\";\n*/\n            return top + fontSize + this.padding;\n        }\n\n        gateShowAvatars(left, top, width, height, countX, avatarids, avatars) {\n            if (!avatars || avatars.length === 0) {\n                return; // Exit early if no avatars exist\n            }\n\n            this.avatar = undefined;\n            const count = avatars.length;\n            let leftOriginal = left;\n            let w = Math.round(this.padding / 2) + \"px\";\n            for (let i = 0; i < count; i++) {\n                let avatarImagePath = 'assets/avatars/' + avatars[i];\n                let btn = this.createCenterImageButton(\n                    this.area,\n                    left, top,\n                    this.iconSize - this.padding, this.iconSize - this.padding,\n                    \"\",\n                    avatarImagePath\n                );\n                btn.classList.add(\"mmogame_avatar\");\n                let id = avatarids[i];\n                btn.addEventListener(\"click\", () => {\n                    this.gateUpdateAvatar(btn, id, w);\n                });\n\n                // Move left position after placing the button\n                left += this.iconSize;\n\n                // Reset left and move to the next row after filling countX buttons\n                if ((i + 1) % countX === 0) {\n                    top += this.iconSize;\n                    left = leftOriginal;\n                }\n            }\n        }\n\n        gateSendGetColorsAvatars(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                         gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n            let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n            let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n            let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n            let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n            if (!updateColors) {\n                countXcolors = countXcolors = 0;\n            }\n            if (!updateAvatars) {\n                countXavatars = countYavatars = 0;\n            }\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Defining the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    avatars: countXavatars * countYavatars,\n                    colorpalettes: countXcolors * countYcolors,\n                };\n\n                // Calling the service through the Moodle AJAX API\n                let getAssets = Ajax.call([{\n                    methodname: 'mod_mmogame_get_assets',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAssets[0].done(function(response) {\n                    if (updateColors) {\n                        instance.gateShowColorPalettes(leftColors, topColors, gridWidthColors,\n                            gridHeightColors, countXcolors, countYcolors, response.colorpaletteids, response.colorpalettes);\n                    }\n                    if (updateAvatars) {\n                        instance.gateShowAvatars(leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars,\n                            response.avatarids, response.avatars);\n                    }\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateShowColorPalettes(left, top, width, height, countX, countY, colorpaletteids, colorpalettes) {\n            let i = 0; // Counter for color palettes\n            const count = colorpalettes.length;\n            this.canvasColor = undefined;\n            const canvasSize = this.iconSize - this.padding * 3 / 2;\n            const parsedPalettes = colorpalettes.map(palette =>\n                palette.split(\",\").map(value => parseInt(value, 10) || 0)\n            );\n            for (let iy = 0; iy < countY; iy++) {\n                for (let ix = 0; ix < countX; ix++) {\n                    // Check if we exceed available palettes or encounter invalid data\n                    if (i >= count || !parsedPalettes[i] || !colorpaletteids[i]) {\n                        i++; // Increment and continue if invalid\n                        continue;\n                    }\n\n                    // Create a new canvas element\n                    let canvas = document.createElement('canvas');\n                    canvas.style.position = \"absolute\";\n                    canvas.style.left = `${left + ix * this.iconSize}px`;\n                    canvas.style.top = `${top + iy * this.iconSize}px`;\n                    canvas.width = canvasSize;\n                    canvas.height = canvasSize;\n                    canvas.style.cursor = 'pointer';\n                    canvas.classList.add(\"mmogame_color\");\n\n                    // Append canvas to the area\n                    this.area.appendChild(canvas);\n\n                    // Render the color palette on the canvas\n                    this.showColorPalette(canvas, parsedPalettes[i]);\n\n                    // Get the palette ID and attach a click event listener\n                    let id = colorpaletteids[i];\n                    canvas.addEventListener(\"click\", () => {\n                        this.gateUpdateColorPalette(canvas, id);\n                    });\n\n                    i++;\n                }\n            }\n            this.area.classList.add(\"palette\");\n        }\n\n        gateUpdateColorPalette(canvas, id) {\n            if (this.canvasColor !== undefined) {\n                this.canvasColor.style.borderStyle = \"none\";\n            }\n            this.canvasColor = canvas;\n            canvas.style.borderStyle = \"outset\";\n            let w = Math.round(this.padding / 2) + \"px\";\n            canvas.style.borderLeftWidth = w;\n            canvas.style.borderTopWidth = w;\n            canvas.style.borderRightWidth = w;\n            canvas.style.borderBottomWidth = w;\n\n            this.paletteid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateAvatar(avatar, id, w) {\n            if (this.avatar !== undefined) {\n                this.avatar.style.borderStyle = \"none\";\n            }\n            this.avatar = avatar;\n            avatar.style.borderStyle = \"outset\";\n\n            avatar.style.borderLeftWidth = w;\n            avatar.style.borderTopWidth = w;\n            avatar.style.borderRightWidth = w;\n            avatar.style.borderBottomWidth = w;\n\n            this.avatarid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateSubmit() {\n            let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n            let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode\n                && this.edtNickname.value.length > 0;\n\n            this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n        }\n\n        gateComputeSizes() {\n            this.computeSizes();\n            this.iconSize = Math.round(0.8 * this.iconSize);\n            this.padding = Math.round(0.8 * this.padding);\n        }\n\n        getStringM(name) {\n            return M.util.get_string(name, 'mmogame');\n        }\n\n        gateCreateLabelEditHorizontal(left, top, width, fontSize, labelWidth, title) {\n            console.log(\"gateCreateLabelEditHorizontal title=\" + title);\n            const label = this.gateCreateLabel(left, top, labelWidth, fontSize, title);\n\n            let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n            let leftEdit = (left + labelWidth + this.padding);\n            this.edt = this.gateCreateInput(leftEdit, top, width - leftEdit - this.padding, fontSize);\n/* A\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n            div.style.width = (width - leftEdit - this.padding) (width - leftEdit - this.padding) + \"px\";\n*/\n\n            return ret;\n        }\n\n        createDivMessageDo(left, top, width, height, message, heightmessage) {\n            if (this.divMessageBackground === undefined) {\n                let div = this.createDiv(this.body, left, top, width, height);\n                div.style.background = this.getColorHex(this.colorDefinition);\n                this.divMessageBackground = div;\n            }\n\n            if (this.divMessage === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"center\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.background = this.getColorHex(this.colorDefinition);\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                this.divMessage = div;\n            }\n            this.divMessage.innerHTML = message;\n            this.body.appendChild(this.divMessage);\n            this.autoResizeText(this.divMessage, width, heightmessage, false, this.minFontSize, this.maxFontSize, 0.5);\n        }\n\n        getOptions() {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4); // Άνοιγμα της βάσης δεδομένων\n\n                request.onupgradeneeded = function(event) {\n                    let db = event.target.result;\n                    // Δημιουργία του object store \"options\" αν δεν υπάρχει\n                    if (!db.objectStoreNames.contains(\"options\")) {\n                        db.createObjectStore(\"options\", {keyPath: \"name\"});\n                    }\n                };\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readonly\"); // Δημιουργία συναλλαγής ανάγνωσης\n                    let store = transaction.objectStore(\"options\");\n\n                    let getAllRequest = store.getAll(); // Διαβάζει όλες τις εγγραφές από το object store\n\n                    getAllRequest.onsuccess = function(event) {\n                        let records = event.target.result; // Όλες οι εγγραφές από το object store\n                        if (records.length > 0) {\n                            // Μετατροπή σε object με τα name ως κλειδιά\n                            let optionsObject = {};\n                            records.forEach(record => {\n                                optionsObject[record.name] = record.value;\n                            });\n                            resolve(optionsObject); // Επιστροφή του αντικειμένου\n                        } else {\n                            resolve({}); // Επιστροφή άδειου αντικειμένου αν δεν υπάρχουν εγγραφές\n                        }\n                    };\n\n                    getAllRequest.onerror = function() {\n                        reject(new Error(\"Failed to read options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    resolve({});\n                };\n            });\n        }\n\n        saveOptions(optionsObject) {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4);\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readwrite\"); // Δημιουργία συναλλαγής για εγγραφή\n                    let store = transaction.objectStore(\"options\");\n\n                    // Για κάθε ζεύγος name-value στο αντικείμενο, το αποθηκεύουμε στην IndexedDB\n                    for (let name in optionsObject) {\n                        if (optionsObject.hasOwnProperty(name)) {\n                            let value = optionsObject[name];\n                            store.put({name: name, value: value});\n                        }\n                    }\n\n                    // Επιτυχής ολοκλήρωση της συναλλαγής\n                    transaction.oncomplete = function() {\n                        resolve();\n                    };\n\n                    transaction.onerror = function() {\n                        reject(new Error(\"Failed to save options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    reject(new Error(\"Failed to open database\"));\n                };\n            });\n        }\n\n        showError(message) {\n            this.createDivMessage(message);\n        }\n\n        createArea() {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n        }\n\n        clearDB(url) {\n            let options = {nickname: ''};\n            this.saveOptions(options)\n                .then(function() {\n                    window.location.href = url;\n                    return true;\n                })\n                .catch(() => {\n                    return false;\n                });\n\n        }\n\n        gateCreateInput(left, top, width, fontSize) {\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return div;\n        }\n\n        createAddScore(left, top, width, height, num) {\n            const div = this.createDiv(this.body, left, top, width, height);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            // A button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","size","parseFloat","window","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","this","firstChild","removeChild","lastChild","area","undefined","openGame","computeSizes","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","style","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","pad","length","uuid4","uuid","Array","floor","random","user","map","x","join","options","userGUID","instance","saveOptions","then","catch","error","showError","message","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","hexArray","unshift","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","sort","a","b","colorBackground","repairP","createDivButton","lineHeight","textAlign","createDivScore","borderRadius","border","boxShadow","title","getStringM","colorScore","buttonScore2","colorScore2","labelScore","labelScore2","disabled","labelScoreRank","labelScoreRank2","createAddScore","createDivScorePercent","label","fontName","labelScoreRankB","labelAddScore","labelAddScore2","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","localStorage","setItem","toString","createButtonHelp","buttonHelp","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","id","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","divMessageHelp","areaTop","createDivMessageDo","divMessage","createDivMessageStart","height1","showHelpScreen","divMessageBackground","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","setColorsString","split","setColors","computeDifClock","time","timeStart","timeClose","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","updateButtonsAvatar","avatar","lastIndexOf","pop","colorsBackground","buttonAvatarTop","gateOpen","mmogameid","pin","kinduser","url","gateComputeSizes","areaWidth","areaHeight","getOptions","hasOwnProperty","kindsound","avatarid","paletteid","gatePlayGame","gateCreateScreen","save","callGetAttempt","colorpaletteid","extraparams","require","Ajax","params","call","methodname","args","done","response","processGetAttempt","JSON","parse","fail","vertical","createArea","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateLabelEditVertical","edtCode","edt","gateUpdateSubmit","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatars","bottom2","btnSubmit","value","sName","sizeLabel","gateCreateLabelEditHorizontal","aLabel","gateCreateLabel","labelWidth","console","log","align","gateCreateInput","gateShowAvatars","countX","avatarids","avatars","count","leftOriginal","avatarImagePath","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","colorpalettes","gateShowColorPalettes","colorpaletteids","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","cursor","gateUpdateColorPalette","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string","leftEdit","heightmessage","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","createObjectStore","keyPath","onsuccess","getAllRequest","transaction","objectStore","getAll","records","optionsObject","forEach","record","onerror","Error","store","put","oncomplete","clearDB","location","href","type","autofocus"],"mappings":"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"}