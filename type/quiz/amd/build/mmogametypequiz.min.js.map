{"version":3,"file":"mmogametypequiz.min.js","sources":["../src/mmogametypequiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mod_mmogame/mmogame'], function(MmoGame) {\n    return class MmoGameTypeQuiz extends MmoGame {\n        mmogameid;\n        kinduser;\n        auserid;\n        url;\n        pin;\n        labelTimer;\n\n        /**\n         * Base class for Quiz mmmogame\n         *\n         * @module mmogametype_quiz\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n\n        constructor() {\n            super();\n            this.hideSubmit = false;\n        }\n\n        setColors(colors, nameLoad) {\n            let c = this.repairColors(colors, nameLoad);\n\n            this.colorDefinition = c[1];\n            this.colorScore = c[2];\n            this.colorCopyright = c[3];\n            this.colorScore2 = c[4];\n        }\n\n        openGame() {\n            super.openGame();\n\n            this.audioYes = new Audio('assets/yes1.mp3');\n            this.audioYes.load();\n            this.audioNo = new Audio('assets/no1.mp3');\n            this.audioNo.load();\n        }\n/* A\n        sendGetAttempt(param, subcommand) {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.onServerGetAttempt(JSON.parse(this.responseText), param);\n                }\n            };\n\n            xmlhttp.open(\"POST\", this.url, true);\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let d = {\n                \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n                \"user\": this.auserid, \"subcommand\": subcommand\n            };\n            if (this.helpurl === undefined) {\n                d.helpurl = 1;\n            }\n            let data = JSON.stringify(d);\n            xmlhttp.send(data);\n        }\n*/\n\n        onServerGetAttempt(json) {\n            this.computeDifClock(json.time, json.timestart, json.timeclose);\n\n            if (json.colors !== undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            if (name !== undefined) {\n                window.document.title = name;\n            }\n\n            if (json.helpurl !== undefined) {\n                this.helpUrl = json.helpurl;\n            }\n\n            if (json.errorcode !== undefined) {\n                this.createDivMessage(json.errorcode);\n                return;\n            }\n\n            this.state = parseInt(json.state);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson);\n            this.updateButtonsAvatar(1, json.avatar, json.nickname);\n\n            this.attempt = json.attempt;\n\n            this.qtype = json.qtype;\n            if (json.qtype === 'multichoice') {\n                this.answers = json.answers;\n                this.answersID = json.answerids;\n            }\n            this.answer = json.answer !== undefined ? json.answer : null;\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            this.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json.sumscore, json.rank, json.name, '', '', '',\n                    json.percentcompleted, false);\n            }\n\n            this.updateLabelTimer();\n\n            this.sendFastJSON();\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined || this.timeclose === undefined) {\n                return;\n            }\n            if (this.timeclose === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n            let time = (new Date()).getTime();\n            let dif = this.timeclose - time / 1000;\n\n            if (dif <= 0) {\n                dif = 0;\n            }\n            dif = Math.round(dif);\n            if (dif <= 0) {\n                this.labelTimer.innerHTML = '';\n                this.onTimeout();\n            } else {\n                let s = (dif < 0 ? \"-\" : \"\") + Math.floor(dif / 60.0);\n                this.labelTimer.innerHTML = s + \":\" + (\"0\" + (dif % 60)).slice(-2);\n            }\n\n            if (dif <= 0 && this.timeclose !== 0) {\n                return;\n            }\n\n            let instance = this;\n            this.timerTimeout = setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        onTimeout() {\n            this.labelTimer.innerHTML = '';\n            this.disableInput();\n            this.sendTimeout();\n        }\n\n        createScreen(sumscore, rank, name, usercode, addscore, completerank, percentcompleted, disabled) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n            if (this.endofgame) {\n                this.createDivMessage(this.getStringM('js_game_over'));\n                this.showScore(sumscore, rank, name, usercode, addscore, completerank, percentcompleted);\n                return;\n            }\n\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(disabled);\n            }\n            this.showScore(sumscore, rank, name, usercode, addscore, completerank, percentcompleted);\n        }\n\n        createScreenVertical(disabled) {\n            let nickNameHeight = Math.round(this.iconSize / 3) + this.padding;\n            let maxHeight = this.areaHeight - 4 * this.padding - nickNameHeight;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize;\n            }\n            let instance = this;\n            let maxWidth = this.areaWidth;\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                    let defSize = instance.createDefinition(0, 0, maxWidth - 1, true, fontSize);\n\n                    if (defSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    let ansSize = instance.createAnswer(0, 0, maxWidth - 1, true, fontSize, disabled);\n                    if (ansSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    return defSize[1] + ansSize[1] < maxHeight ? -1 : 1;\n                }\n            );\n\n            this.radioSize = Math.round(this.fontSize);\n            let defSize = this.createDefinition(0, 0, maxWidth, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(0, defSize[1] + this.padding, maxWidth, false, this.fontSize, disabled);\n            this.nextLeft = this.areaWidth - this.iconSize - this.padding;\n\n            if (this.nextTop + this.padding >= this.areaHeight) {\n                this.nextTop = this.areaHeight - this.padding;\n            }\n\n            if (this.hideSubmit === false) {\n                let top = (this.areaWidth - this.iconSize) / 2;\n                this.btnSubmit = this.createImageButton(this.body, top, this.nextTop, 0, this.iconSize,\n                    \"\", 'assets/submit.svg', false, 'submit');\n                this.btnSubmit.addEventListener(\"click\",\n                    function() {\n                        if (instance.btnSubmit !== undefined) {\n                            instance.area.removeChild(instance.btnSubmit);\n                            instance.btnSubmit = undefined;\n                        }\n                        instance.sendAnswer();\n                    }\n                );\n            }\n\n            this.stripLeft = this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createScreenHorizontal(disabled) {\n            let maxHeight = this.areaHeight - 2 * this.padding;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize + this.padding;\n            }\n            let width = Math.round((this.areaWidth - this.padding) / 2);\n            let instance = this;\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    function(fontSize) {\n                        defSize = instance.createDefinition(0, 0, width - instance.padding, true, fontSize);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = instance.createAnswer(0, 0, width - instance.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= instance.areaHeight) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n            this.nextLeft = width + Math.min(3 * this.iconSize + 2 * this.padding, width - this.iconSize);\n\n            if (this.hideSubmit) {\n                return;\n            }\n\n            this.btnSubmit = this.createImageButton(this.body, width + (width - this.iconSize) / 2, this.nextTop, 0, this.iconSize,\n                \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.sendAnswer();\n            });\n\n            this.stripLeft = width + this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createAnswer(left, top, width, onlyMetrics, fontSize, disabled) {\n            return this.createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled);\n        }\n\n        createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled) {\n            let n = this.answers.length;\n            let instance = this;\n\n            let aChecked = [];\n            if (this.answer !== null) {\n                aChecked = this.answer.split(\",\");\n            }\n            if (aChecked.length > 0) {\n                if (aChecked[0] === \"\") {\n                    aChecked.pop();\n                }\n            }\n\n            this.aItemAnswer = new Array(n);\n            this.aItemLabel = new Array(n);\n            this.aItemCorrectX = new Array(n);\n            let retSize = [0, 0];\n            this.labelWidth = Math.round(width - fontSize - this.padding);\n            let checkboxSize = Math.round(fontSize);\n            let top1 = top;\n            let offsetLabel = 0;\n            for (let i = 0; i < n; i++) {\n                let label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.style.width = this.labelWidth + \"px\";\n\n                label.innerHTML = this.answers[i];\n\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                this.aItemLabel[i] = label;\n\n                if (onlyMetrics) {\n                    this.body.appendChild(label);\n                    let newSize = label.scrollWidth + fontSize + this.padding;\n                    if (newSize > retSize[0]) {\n                        retSize[0] = newSize;\n                    }\n                    retSize[1] += Math.max(label.scrollHeight, fontSize) + this.padding;\n\n                    this.body.removeChild(label);\n                    continue;\n                }\n\n                label.htmlFor = \"input\" + i;\n                label.style.left = (left + fontSize + this.padding + offsetLabel) + \"px\";\n                label.style.top = top + \"px\";\n                label.style.align = \"left\";\n                label.style.color = this.getColorContrast(this.colorBackground);\n\n                let checked = aChecked.includes(this.answersID[i]);\n                let item = this.createRadiobox(this.body, checkboxSize, this.colorDefinition, this.colorScore, checked, disabled);\n                item.style.position = \"absolute\";\n                item.style.left = left + \"px\";\n                let topRadio = top;\n                item.style.top = topRadio + \"px\";\n\n                item.addEventListener('click', () => {\n                    if (!item.classList.contains(\"disabled\")) {\n                        instance.onClickRadio(i, this.colorDefinition, this.colorScore, true);\n                    }\n                });\n\n                label.addEventListener('click', () => {\n                    instance.onClickRadio(i, instance.colorDefinition, instance.colorScore, true);\n                });\n\n                this.area.appendChild(item);\n                this.area.appendChild(label);\n                if (label.scrollHeight > fontSize) {\n                    topRadio = Math.round(top + (label.scrollHeight - fontSize) / 2);\n                    item.style.top = topRadio + \"px\";\n                }\n\n                if (this.answersID[i] === '') {\n                    item.style.visibility = 'hidden';\n                    label.style.visibility = 'hidden';\n                }\n\n                this.aItemAnswer[i] = item;\n                this.aItemCorrectX[i] = left + fontSize + this.padding;\n\n                top += Math.max(label.scrollHeight, fontSize) + this.padding;\n            }\n\n            if (onlyMetrics) {\n                return retSize;\n            }\n\n            let heightControls = top - top1;\n            let vspace;\n            if (this.vertical === false) {\n                vspace = this.areaHeight - heightControls - this.iconSize;\n                if (vspace > this.padding) {\n                    let move = Math.round(vspace / 3);\n                    for (let i = 0; i < n; i++) {\n                        this.aItemAnswer[i].style.top = (parseInt(this.aItemAnswer[i].style.top) + move) + \"px\";\n                        this.aItemLabel[i].style.top = (parseInt(this.aItemLabel[i].style.top) + move) + \"px\";\n                    }\n                    this.nextTop += move / 2;\n                    let defTop = parseInt(this.divDefinition.style.top);\n                    if (defTop + move + this.definitionHeight + this.padding < this.areaHeight) {\n                        this.divDefinition.style.top = this.aItemLabel[0].style.top;\n                        this.divDefinition.style.height = Math.max(heightControls, this.definitionHeight) + \"px\";\n                    }\n                    top += move;\n                }\n            }\n\n            return top;\n        }\n\n        onClickRadio(i, colorBack, color, callSendAnswer) {\n            if (this.aItemAnswer[i].classList.contains(\"disabled\")) {\n                return;\n            }\n            for (let j = 0; j < this.aItemAnswer.length; j++) {\n                let item = this.aItemAnswer[j];\n                let disabled = item.classList.contains(\"disabled\");\n\n                if (i === j) {\n                    item.classList.add(\"checked\");\n                    this.answer = this.answers[i];\n                    this.answerid = this.answersID[i];\n                } else if (item.classList.contains(\"checked\")) {\n                    item.classList.remove(\"checked\");\n                }\n\n                this.drawRadio(item, disabled ? colorBack : 0xFFFFFF, color);\n            }\n            if (this.autosave && callSendAnswer) {\n                this.sendAnswer();\n            }\n        }\n\n        sendTimeout() {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.sendGetAttempt();\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let data = JSON.stringify({\n                \"command\": \"timeout\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.auserid, \"attempt\": this.attempt\n            });\n            xmlhttp.send(data);\n        }\n\n        updateScreenAfterAnswer(correct, iscorrect) {\n            this.playAudio(iscorrect !== 0 ? this.audioYes : this.audioNo);\n\n            if (correct !== undefined) {\n                if (this.qtype === \"multichoice\") {\n                    this.onServerAnswerMultichoice();\n                }\n            }\n            this.disableInput();\n\n            if (this.btnSubmit !== undefined) {\n                this.body.removeChild(this.btnSubmit);\n                this.btnSubmit = undefined;\n            }\n\n            let btn = super.createImageButton(this.area, this.nextLeft, this.nextTop, 0, this.iconSize, \"\", 'assets/next.svg',\n                false, 'alt');\n            let instance = this;\n            btn.addEventListener(\"click\", function() {\n                instance.sendGetAttempt();\n                instance.area.removeChild(btn);\n            });\n\n            this.showScore();\n        }\n\n        getSVGcorrect(size, iscorrect, colorCorrect, colorError) {\n            if (iscorrect) {\n                let c = colorCorrect !== undefined ? this.getColorHex(colorCorrect) : '#398439';\n                return \"<svg aria-hidden=\\\"true\\\" class=\\\"svg-icon iconCheckmarkLg\\\" width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" viewBox=\\\"0 0 36 36\\\"><path fill=\\\"\" + c + \"\\\" d=\\\"m6 14 8 8L30 6v8L14 30l-8-8v-8z\\\"></path></svg>\";\n            } else {\n                let c = colorError !== undefined ? this.getColorHex(colorError) : '#398439';\n                return \"<svg width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" class=\\\"bi bi-x-lg\\\" viewBox=\\\"0 0 18 18\\\"> <path fill=\\\"\" + c +\n                    `\" d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 \n                1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\"/></svg>`;\n            }\n        }\n\n        onServerAnswerMultichoice() {\n            let aCorrect = this.correct.split(\",\");\n            for (let i = 0; i < this.answersID.length; i++) {\n                let label = this.aItemLabel[i];\n                let checked = this.aItemAnswer[i].classList.contains(\"checked\");\n                let iscorrect;\n\n                if (aCorrect.includes(this.answersID[i])) {\n                    iscorrect = true;\n                } else if (checked) {\n                    iscorrect = false;\n                } else {\n                    continue;\n                }\n                let height = label.scrollHeight;\n                let width = label.scrollWidth - this.radioSize;\n                label.style.left = (parseInt(label.style.left) + this.radioSize) + \"px\";\n                label.style.width = width + \"px\";\n                if (iscorrect) {\n                    label.innerHTML = '<b><u>' + label.innerHTML + '</u></b>';\n                }\n                this.autoResizeText(label, width, height, true, this.minFontSize, this.maxFontSize, 0.9);\n\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect, this.colorScore, this.colorScore);\n            }\n        }\n\n        disableInput() {\n            if (this.aItemAnswer !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                    this.drawRadio(this.aItemAnswer[i], this.colorScore, this.colorDefinition);\n                }\n            }\n        }\n\n        sendFastJSON() {\n            if (this.timeoutFastJSON !== undefined) {\n                clearTimeout(this.timeoutFastJSON);\n            }\n            let instance = this;\n            this.timeoutFastJSON = setTimeout(function() {\n                let xmlhttp = new XMLHttpRequest();\n                xmlhttp.onreadystatechange = function() {\n                    this.timeoutFastJSON = undefined;\n                    if (this.readyState === 4 && this.status === 200) {\n                        instance.onServerFastJson(this.response);\n                    }\n                };\n\n                let url = instance.url + \"/state.php\";\n\n                xmlhttp.open(\"POST\", url, true);\n\n                let data = new FormData();\n                data.set('fastjson', instance.fastjson);\n                data.set('type', instance.type);\n\n                xmlhttp.send(data);\n            }, 1000);\n        }\n\n        onClickHelp() {\n            if (this.helpUrl !== '') {\n                window.open(this.helpUrl, \"_blank\");\n            }\n        }\n\n        getStringG(name) {\n            return M.util.get_string(name, 'mmogametype_quiz');\n        }\n    };\n    });"],"names":["define","MmoGame","constructor","hideSubmit","setColors","colors","nameLoad","c","this","repairColors","colorDefinition","colorScore","colorCopyright","colorScore2","openGame","audioYes","Audio","load","audioNo","onServerGetAttempt","json","computeDifClock","time","timestart","timeclose","undefined","setColorsString","createIconBar","name","window","document","title","helpurl","helpUrl","errorcode","state","parseInt","fastjson","timefastjson","updateButtonsAvatar","avatar","nickname","attempt","qtype","answers","answersID","answerids","answer","endofgame","definition","repairP","createScreen","sumscore","rank","percentcompleted","updateLabelTimer","sendFastJSON","createDivMessage","labelTimer","innerHTML","Date","getTime","dif","Math","round","onTimeout","s","floor","slice","instance","timerTimeout","setTimeout","disableInput","sendTimeout","usercode","addscore","completerank","disabled","area","body","removeChild","removeDivMessage","createDiv","padding","areaTop","areaWidth","areaHeight","getStringM","showScore","vertical","createScreenVertical","createScreenHorizontal","nickNameHeight","iconSize","maxHeight","maxWidth","fontSize","findbest","minFontSize","maxFontSize","defSize","createDefinition","ansSize","createAnswer","radioSize","nextTop","nextLeft","top","btnSubmit","createImageButton","addEventListener","sendAnswer","stripLeft","stripWidth","stripHeight","width","step","min","left","onlyMetrics","createAnswerMultichoice","n","length","aChecked","split","pop","aItemAnswer","Array","aItemLabel","aItemCorrectX","retSize","labelWidth","checkboxSize","top1","i","label","createElement","style","position","font","appendChild","newSize","scrollWidth","max","scrollHeight","htmlFor","align","color","getColorContrast","colorBackground","checked","includes","item","createRadiobox","topRadio","classList","contains","onClickRadio","visibility","vspace","heightControls","move","divDefinition","definitionHeight","height","colorBack","callSendAnswer","j","add","answerid","remove","drawRadio","autosave","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","sendGetAttempt","open","url","setRequestHeader","data","JSON","stringify","mmogameid","pin","kinduser","auserid","send","updateScreenAfterAnswer","correct","iscorrect","playAudio","onServerAnswerMultichoice","btn","super","getSVGcorrect","size","colorCorrect","colorError","getColorHex","aCorrect","autoResizeText","t","timeoutFastJSON","clearTimeout","onServerFastJson","response","FormData","set","type","onClickHelp","getStringG","M","util","get_string"],"mappings":"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"}