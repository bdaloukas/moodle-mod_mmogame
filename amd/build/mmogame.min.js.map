{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class MmoGame {\n        kindSound = 0;\n        state = 0;\n        body;\n        minFontSize;\n        maxFontSize;\n        fontSize;\n        avatarTop;\n        colorsBackground;\n        buttonAvatarTop;\n        buttonAvatarHeight;\n        colorScore;\n        colorScore2;\n        definition;\n        colorDefinition;\n\n        /**\n         * Basic class for games.\n         *\n         * @module mmogame\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n        constructor() {\n            this.body = document.getElementsByTagName(\"body\")[0];\n            this.kindSound = window.localStorage.getItem('kindSound');\n            if (isNaN(this.kindSound)) {\n                this.kindSound = 0;\n            }\n            if (this.kindSound !== 0 && this.kindSound !== 1 && this.kindSound !== 2) {\n                this.kindSound = 0;\n            }\n\n            let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n            this.minFontSize = size;\n            this.maxFontSize = 2 * size;\n            this.fontSize = size;\n        }\n\n        hasHelp() {\n            return false;\n        }\n\n        removeBodyChilds() {\n            this.removeDivMessage();\n\n            while (this.body.firstChild) {\n                this.body.removeChild(this.body.lastChild);\n            }\n            this.area = undefined;\n        }\n\n        openGame() {\n            this.removeBodyChilds();\n            this.area = undefined;\n            this.computeSizes();\n        }\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n\n        createImage(parent, left, top, width, height, filename) {\n            let button = document.createElement(\"img\");\n\n            button.tabIndex = 0;\n            button.style.position = \"absolute\";\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.draggable = false;\n\n            if (width !== 0) {\n                button.style.width = width + \"px\";\n            }\n            if (height !== 0) {\n                button.style.height = height + \"px\";\n            }\n            button.style.fontSize = height + \"px\";\n            if (filename !== undefined && filename !== '') {\n                button.src = filename;\n            }\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        createCenterImageButton(parent, left, top, width, height, classname, filename) {\n            let button = document.createElement(\"img\");\n            button.classList.add(\"mmogame_imgbutton\");\n            button.style.position = \"absolute\";\n            button.draggable = false;\n\n            const img = new Image();\n            img.onload = function() {\n                if (this.width === 0 || this.height === 0) {\n                    this.width = this.height = 1;\n                }\n\n                if (this.width > 0 && this.height > 0) {\n                    let mul = Math.min(width / this.width, height / this.height);\n                    let w = Math.round(this.width * mul);\n                    let h = Math.round(this.height * mul);\n\n                    button.style.width = w + \"px\";\n                    button.style.height = h + \"px\";\n                    button.style.left = (left + width / 2 - w / 2) + \"px\";\n                    button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                    button.src = filename;\n                    button.innerHTML = filename;\n                    button.style.fontSize = height + \"px\";\n                }\n            };\n            if (filename !== undefined && filename !== \"\") {\n                img.style.left = left + \"px\";\n                img.style.top = top + \"px\";\n                img.style.visibility = 'hidden';\n                img.src = filename;\n            }\n            button.tabIndex = 0;\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        updateImageButton(button, left, top, width, height, filename) {\n            button.src = filename;\n        }\n\n        createDiv(parent, left, top, width, height) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n\n            parent.appendChild(div);\n\n            return div;\n        }\n\n        createDivColor(parent, left, top, width, height, color) {\n            let div = this.createDiv(parent, left, top, width, height);\n            div.style.background = this.getColorHex(color);\n\n            return div;\n        }\n\n        getMuteFile() {\n            if (this.kindSound === 0) {\n                return 'assets/sound-on-flat.png';\n            } else if (this.kindSound === 1) {\n                return 'assets/sound-off-flat.png';\n            } else if (this.kindSound === 2) {\n                return 'assets/speak.svg';\n            } else {\n                return 'assets/sound-on-flat.png';\n            }\n        }\n\n        playAudio(audio) {\n            if (this.kindSound !== 0 && audio !== null) {\n                if (audio.networkState === 1) {\n                    audio.play();\n                }\n            }\n        }\n\n        autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n            let minHeight = 0.9 * height;\n            let low = Math.max(1, minFontSize);\n            width = Math.round(width);\n            height = Math.round(height);\n            let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n            let fitSize = low;\n            let fitHeight = 0;\n            let newHeight = 0;\n            let newWidth = 0;\n\n            for (let i = 0; i <= 10; i++) {\n                let el = document.createElement(\"div\");\n                el.style.left = 0;\n                el.style.top = 0;\n                el.style.width = width + \"px\";\n                el.style.height = 0;\n                el.visibility = \"visible\";\n                if (!wrap) {\n                    el.style.whiteSpace = \"nowrap\";\n                }\n                el.innerHTML = item.innerHTML;\n                this.body.appendChild(el);\n\n                let fontSize = (low + up) / 2;\n\n                el.style.fontSize = fontSize + \"px\";\n                newHeight = el.scrollHeight;\n                newWidth = el.scrollWidth - 1;\n\n                this.body.removeChild(el);\n\n                if (newWidth > width || newHeight > height) {\n                    up = fontSize;\n                } else {\n                    low = fontSize;\n                    if (Math.abs(fitHeight - newHeight) <= 2) {\n                        break;\n                    }\n                    fitHeight = newHeight;\n                    fitSize = fontSize;\n                    if (newHeight > minHeight) {\n                        break;\n                    }\n                }\n            }\n            item.style.fontSize = fitSize + \"px\";\n\n            if (newWidth > width || newHeight > height) {\n                this.autoResizeTextBr(item);\n                newWidth = item.scrollWidth;\n                newHeight = item.scrollHeight;\n                this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                    minRatio);\n            } else {\n                return [item.scrollWidth - 1, item.scrollHeight];\n            }\n\n            let el = document.createElement(\"div\");\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"hidden\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n            el.style.fontSize = item.style.fontSize;\n            let size = [el.scrollWidth - 1, el.scrollHeight];\n            this.body.removeChild(el);\n\n            return size;\n        }\n\n        autoResizeTextBr(item) {\n            let s = item.innerHTML;\n            let change = false;\n            while (s.startsWith('<br>')) {\n                s = s.substring(4);\n                change = true;\n            }\n            let pos1 = s.indexOf('<br>');\n            for (; ;) {\n                let pos = s.indexOf('<br>', pos1 + 4);\n                if (pos < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos1 + 4, pos);\n                if (!s2.trim()) {\n                    s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                    change = true;\n                    pos = pos1;\n                }\n                pos1 = pos;\n            }\n\n            if (change) {\n                item.innerHTML = s;\n            }\n        }\n\n        autoResizeTextImage(item, subwidth, subheight, minRatio) {\n            if (subwidth === 0 && subheight === 0) {\n                return;\n            }\n            let s = item.innerHTML;\n\n            for (let pos = 0; ;) {\n                let pos2 = s.indexOf(\"<img \", pos);\n                if (pos2 < 0) {\n                    break;\n                }\n                let pos3 = s.indexOf(\">\", pos2);\n                if (pos3 < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos2, pos3) + \" \";\n\n                let width = 0;\n                let height = 0;\n                let posw = s2.indexOf(\"width=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                        width = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n\n                posw = s2.indexOf(\"height=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                        height = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n                if (width > 0 && height > 0) {\n                    let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                    let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                    let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                    s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n                }\n                s = s.slice(0, pos2) + s2 + s.slice(pos3);\n                pos = pos3;\n            }\n            item.innerHTML = s;\n        }\n\n        getUserGUID() {\n            let guid = window.localStorage.getItem('UserGUID');\n            if (guid === null || guid === '') {\n                guid = this.uuid4();\n                window.localStorage.setItem(\"UserGUID\", guid);\n            }\n\n            return guid;\n        }\n\n        pad(num, size) {\n            let s = num + \"\";\n            while (s.length < size) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        uuid4() {\n            const uuid = new Array(36);\n            const hexDigits = '0123456789abcdef'; // Lookup table for hexadecimal digits\n\n            for (let i = 0; i < 36; i++) {\n                uuid[i] = Math.floor(Math.random() * 16); // Generate random numbers for each position\n            }\n\n            // Insert dashes at predefined positions\n            uuid[8] = '-';\n            uuid[13] = '-';\n            uuid[18] = '-';\n            uuid[23] = '-';\n\n            // Set specific bits to comply with UUIDv4 standards\n            uuid[14] = 4; // The 13th position represents version 4 (0100 in binary)\n            // eslint-disable-next-line no-bitwise\n            uuid[19] = (uuid[19] & 0x3) | 0x8; // The 17th position must start with '10' in binary\n\n            // Convert numbers to hexadecimal without using toString\n            return uuid\n                .map((x) => (typeof x === 'string' ? x : hexDigits[x])) // Convert numeric values to hex using lookup table\n                .join('');\n        }\n\n        computeSizes() {\n            if (this.cIcons < 5 || this.cIcons === undefined) {\n                this.cIcons = 5;\n            }\n            this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n            this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n            this.padding = Math.round(this.iconSize / 10);\n            this.iconSize -= this.padding;\n        }\n\n        getIconSize() {\n            return this.iconSize;\n        }\n\n        getCopyrightHeight() {\n            return Math.round(this.getIconSize() / 3);\n        }\n\n        getPadding() {\n            return this.padding;\n        }\n\n        getColorHex(x) {\n            const hexDigits = '0123456789ABCDEF'; // Lookup table for hexadecimal digits\n            const hexArray = [];\n\n            for (let i = 0; i < 6; i++) {\n                // Extract the least significant nibble and find its hex representation\n                // eslint-disable-next-line no-bitwise\n                hexArray.unshift(hexDigits[x & 0xF]);\n                // eslint-disable-next-line no-bitwise\n                x >>= 4; // Shift right by 4 bits to process the next nibble\n            }\n\n            // Join the hex digits and prefix with '#'\n            return '#' + hexArray.join('');\n        }\n\n        getContrast(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256; // Blue.\n\n            return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        }\n\n        getColorGray(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256, // Blue.\n                yiq = (r * 299) + g * 587 + b * 114,\n                m = 255 * 299 + 255 * 587 + 255 * 114,\n                gray = Math.round(yiq * 255 / m);\n\n            return (gray * 0x10000) + (gray * 0x100) + gray;\n        }\n\n        getColorContrast(x) {\n            return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n        }\n\n        repairColors(colors) {\n\n            this.colors = colors;\n            let instance = this;\n            this.colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n\n            this.colorBackground = this.colors[0];\n            this.body.style.background = this.getColorHex(this.colorBackground);\n\n            return this.colors;\n        }\n\n        repairP(s) {\n            if (s === undefined) {\n                return \"\";\n            }\n\n            // Remove <p> tags and replace </p> with <br />\n            let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n            // Remove <br> or <br/> at the end of the string\n            s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n            // Remove the <ol><br></ol> sequence if it exists\n            let pos = s2.indexOf('<ol><br></ol>');\n            if (pos >= 0) {\n                s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n            }\n\n            return s2;\n        }\n\n        createDivScorePercent(left, top, num) {\n            let button = document.createElement(\"button\");\n            button.style.position = \"absolute\";\n            button.classList.add(\"mmogame_button\");\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.style.width = this.iconSize + \"px\";\n            button.style.height = this.iconSize + \"px\";\n            button.style.lineHeight = this.iconSize + \"px\";\n            button.style.textAlign = \"center\";\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n                button.title = this.getStringM('js_grade');\n            } else {\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '';\n            button.disabled = true;\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            if (num === 1) {\n                this.labelScore = div;\n                div.title = this.getStringM('js_grade');\n            } else {\n                this.labelScore2 = div;\n                div.title = this.getStringM('js_grade_opponent');\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_ranking_grade');\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n\n            let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n            div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = h + \"px\";\n            div.style.lineHeight = h + \"px\";\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_ranking_percent');\n            if (num === 1) {\n                this.labelScoreRankB = div;\n            }\n\n            label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n            div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n                this.iconSize / 2);\n            div.style.textAlign = \"center\";\n            div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = label.style.fontSize;\n            div.style.fontWeight = 'bold';\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_percent');\n            this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n            if (num === 1) {\n                this.labelScoreB = div;\n            }\n        }\n\n        createDivTimer(left, top, sizeIcon) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = sizeIcon + \"px\";\n            div.style.height = sizeIcon + \"px\";\n            div.style.whiteSpace = \"nowrap\";\n            div.style.lineHeight = sizeIcon + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n            div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n            div.name = \"timer\";\n            this.body.appendChild(div);\n            this.labelTimer = div;\n\n            div.innerHTML = '23:59';\n            this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n            div.innerHTML = '';\n            div.title = this.getStringM('js_question_time');\n        }\n\n        createButtonSound(left, top) {\n            this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n                this.getMuteFile());\n            this.buttonSound.alt = this.getStringM('js_sound');\n            let instance = this;\n            this.buttonSound.addEventListener(\"click\", function() {\n                instance.onClickSound(instance.buttonSound);\n            });\n\n            this.buttonSound.title = this.getStringM('js_sound');\n        }\n\n        onClickSound(btn) {\n            window.title = btn.src;\n            this.kindSound = (this.kindSound + 1) % 2;\n            window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n            btn.src = this.getMuteFile();\n        }\n\n        createButtonHelp(left, top) {\n            this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n            this.buttonHelp.alt = this.getStringM('js_help');\n        }\n\n        findbest(low, up, fn) {\n            if (low < 1) {\n                low = 1;\n            }\n\n            let prevSize;\n            let fitSize = low;\n            let testSize;\n            for (let i = 0; i <= 10; i++) {\n                prevSize = low;\n                testSize = (low + up) / 2;\n\n                let cmp = fn(testSize);\n                if (cmp <= 0) {\n                    fitSize = testSize;\n                    low = testSize;\n                } else {\n                    up = testSize;\n                }\n                if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                    break;\n                }\n            }\n\n            return fitSize;\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined) {\n                return;\n            }\n            if (this.timeclose === 0 || this.timestart === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n\n            let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n            if (dif <= 0) {\n                dif = 0;\n                this.sendTimeout();\n            }\n            const minutes = Math.floor(Math.abs(dif) / 60);\n            const seconds = Math.abs(dif) % 60;\n            const prefix = dif < 0 ? \"-\" : \"\";\n            this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n            if (dif === 0) {\n                return;\n            }\n\n            let instance = this;\n            setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        createDivMessage(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            this.createDivMessageDo(left, top, width, height, message, height);\n\n            this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n        }\n\n        createDivMessageStart(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            let height1 = height / 8;\n\n            this.createDivMessageDo(left, top, width, height, message, height1);\n\n            top += (height1 - this.divMessage.scrollHeight) / 2;\n            this.divMessage.style.top = top + \"px\";\n\n            if (this.divMessageHelp === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"left\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                let top = this.iconSize + 3 * this.padding + height1;\n                div.style.top = (top + this.padding) + \"px\";\n                div.style.height = (height - height1) + \"px\";\n                this.divMessageHelp = div;\n                this.body.appendChild(this.divMessageHelp);\n\n                this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n            }\n        }\n\n        removeDivMessage() {\n            if (this.divMessage !== undefined) {\n                this.body.removeChild(this.divMessage);\n                this.divMessage = undefined;\n            }\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n            if (this.divMessageBackground !== undefined) {\n                this.divMessageBackground.remove();\n                this.divMessageBackground = undefined;\n            }\n        }\n\n        disableButtons(buttons, disabled) {\n            for (let i = 0; i < buttons.length; i++) {\n                let btn = buttons[i];\n                if (btn !== undefined) {\n                    if (disabled) {\n                        btn.classList.add(\"mmogame_imgbutton_disabled\");\n                    } else {\n                        btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                    }\n                }\n            }\n        }\n\n        repairNickname(nickname) {\n            if (nickname === undefined) {\n                return '';\n            }\n\n            let s = nickname;\n            if (s !== '') {\n                while (s.indexOf('_') !== -1) {\n                    s = s.replace('_', ' ');\n                }\n            }\n\n            return s;\n        }\n\n        showScore(sumscore, rank, name, usercode, addscore, completedrank, percentcompleted) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n\n        showColorPalette(canvas, colors) {\n            let ctx = canvas.getContext(\"2d\");\n            let width = canvas.width;\n            let height = canvas.height;\n            let strip = width / 5;\n            let instance = this;\n\n            colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n            for (let i = 0; i < 5; i++) {\n                ctx.fillStyle = this.getColorHex(colors[i]);\n                ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n            }\n\n            ctx.strokeStyle = \"#FFFFFF\";\n            ctx.lineWidth = 1;\n            ctx.strokeRect(0, 0, width, height);\n        }\n\n        setColorsString(s) {\n            let a = [0x9B7ED9, 0x79F2F2, 0x67BF5A, 0xD0F252, 0xBF5B21];\n            if (s !== undefined && s.length >= 0) {\n                let b = s.split(\",\");\n                if (b.length === 5) {\n                    a = b;\n                    for (let i = 0; i < 5; i++) {\n                        a[i] = parseInt(a[i]);\n                    }\n                }\n            }\n            this.setColors(a);\n        }\n\n        computeDifClock(time, timeStart, timeClose) {\n            if (time !== undefined) {\n                this.difClock = ((new Date()).getTime() - time) / 1000;\n            }\n\n            this.computeTimeStartClose(timeStart, timeClose);\n        }\n\n        computeTimeStartClose(timeStart, timeClose) {\n            if (timeStart !== undefined) {\n                this.timestart = parseInt(timeStart) !== 0 ? parseInt(timeStart) + this.difClock : 0;\n                this.timeclose = parseInt(timeClose) !== 0 ? parseInt(timeClose) + this.difClock : 0;\n            } else {\n                this.timestart = 0;\n                this.timeclose = 0;\n            }\n        }\n\n        drawRadio(canvas, color1, color2) {\n            let ctx = canvas.getContext(\"2d\");\n            let size = canvas.width;\n            ctx.clearRect(0, 0, size, canvas.height);\n\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color1);\n            ctx.fill();\n\n            let checked = canvas.classList.contains(\"checked\");\n            if (checked) {\n                ctx.beginPath();\n                ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n                ctx.fillStyle = this.getColorHex(color2);\n                ctx.fill();\n            }\n        }\n\n        createRadiobox(parent, size, color1, color2, checked, disabled) {\n            let canvas = document.createElement('canvas');\n            canvas.style.position = \"absolute\";\n            canvas.width = size;\n            canvas.height = size;\n            parent.appendChild(canvas);\n            if (checked) {\n                canvas.classList.add(\"checked\");\n            }\n            if (disabled) {\n                canvas.classList.add(\"disabled\");\n            }\n\n            this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n            return canvas;\n        }\n\n        createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n            if (widthNickName === 0) {\n                widthNickName = this.iconSize;\n            }\n            if (heightNickName === 0) {\n                heightNickName = this.iconSize - this.buttonAvatarHeight;\n            }\n            if (this.buttonsAvatarLeft === undefined) {\n                this.buttonsAvatarLeft = [];\n            }\n            this.buttonsAvatarLeft[num] = left;\n\n            if (this.buttonsAvatarSrc === undefined) {\n                this.buttonsAvatarSrc = [];\n            }\n            this.buttonsAvatarSrc[num] = \"\";\n\n            if (this.nicknames === undefined) {\n                this.nicknames = [];\n            }\n            this.nicknames[num] = \"\";\n\n            if (this.buttonsAvatar === undefined) {\n                this.buttonsAvatar = [];\n            }\n            this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n            if (num === 2 && this.avatarTop !== undefined) {\n                this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n            }\n\n            if (this.divNicknames === undefined) {\n                this.divNicknames = [];\n            }\n            if (this.divNicknamesWidth === undefined) {\n                this.divNicknamesWidth = [];\n            }\n            if (this.divNicknamesHeight === undefined) {\n                this.divNicknamesHeight = [];\n            }\n            this.divNicknamesWidth[num] = widthNickName;\n            this.divNicknamesHeight[num] = heightNickName;\n\n            this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n        }\n\n        updateButtonsAvatar(num, avatar, nickname) {\n            if (avatar === undefined) {\n                avatar = \"\";\n            }\n            if (nickname === undefined) {\n                nickname = \"\";\n            }\n\n            if (avatar === \"\" && nickname === \"\") {\n                this.buttonsAvatar[num].style.visibility = 'hidden';\n                this.divNicknames[num].style.visibility = 'hidden';\n                return;\n            }\n\n            if (this.nicknames[num] !== nickname || nickname === \"\") {\n                this.nicknames[num] = nickname;\n                let s = nickname;\n\n                if (nickname.length === 0) {\n                    s = avatar;\n                    let pos = s.lastIndexOf(\"/\");\n                    if (pos >= 0) {\n                        s = s.slice(pos + 1);\n                    }\n                    pos = s.lastIndexOf(\".\");\n                    if (pos >= 0) {\n                        s = s.slice(0, pos);\n                    }\n                    const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                    s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n                }\n                s = this.repairNickname(s);\n                if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                    this.divNicknames[num].innerHTML = s;\n                    this.divNicknames[num].style.textAlign = \"center\";\n                    this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                    this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                        0, 0, 1);\n                }\n            }\n\n            if (avatar !== this.buttonsAvatarSrc[num]) {\n                this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                    this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n                this.buttonsAvatarSrc[num] = avatar;\n            }\n\n            this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n            this.buttonsAvatar[num].style.visibility = 'visible';\n            this.divNicknames[num].style.visibility = 'visible';\n        }\n\n        // Gate\n        gateOpen(mmogameid, pin, kinduser, auserid, url) {\n            this.url = url;\n            this.minFontSize *= 2;\n            this.maxFontSize *= 2;\n\n            this.mmogameid = mmogameid;\n            this.pin = pin;\n            this.auserid = auserid;\n            this.kinduser = kinduser;\n            this.gateComputeSizes();\n            this.areaTop = this.padding;\n\n            this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n            this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n            switch (kinduser) {\n                case 'moodle':\n                    if (localStorage.getItem(\"nickname\") !== null && localStorage.getItem(\"avatarid\") !== null\n                        && localStorage.getItem(\"paletteid\") !== null) {\n                        let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                        let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                        this.gatePlayGame(auserid, localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                        return;\n                    }\n                    break;\n                case 'guid':\n                    if (localStorage.getItem(\"auserid\") !== null && localStorage.getItem(\"nickname\") !== null\n                        && localStorage.getItem(\"avatarid\") !== null && localStorage.getItem(\"paletteid\") !== null) {\n                        let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                        let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                        this.gatePlayGame(localStorage.getItem(\"auserid\"), localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                        return;\n                    }\n                    //this.gatePlayGame(auserid, pin, 0, 0);\n                    break;\n            }\n\n            this.gateCreateScreen();\n        }\n\n        gatePlayGame(user, nickname, paletteid, avatarid) {\n            if (user === 0 && this.kinduser === 'guid') {\n                user = this.getUserGUID();\n            }\n            localStorage.setItem(\"auserid\", user);\n            localStorage.setItem(\"nickname\", nickname);\n            localStorage.setItem(\"paletteid\", paletteid);\n            localStorage.setItem(\"avatarid\", avatarid);\n\n            // Defining the parameters to be passed to the service\n            this.sendGetAttempt(user, nickname, paletteid, avatarid);\n        }\n\n        sendGetAttempt(user = '', nickname = '', paletteid = 0, avatarid = 0) {\n            let params = {\n                mmogameid: this.mmogameid,\n                kinduser: this.kinduser,\n                user: user,\n                nickname: nickname,\n                avatarid: avatarid,\n                colorpaletteid: paletteid,\n            };\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Calling the service through the Moodle AJAX API\n                let getAttempt = Ajax.call([{\n                    methodname: 'mmogametype_quiz_get_attempt',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAttempt[0].done(function(response) {\n                    instance.openGame();\n                    instance.colors = undefined;\n                    instance.onServerGetAttempt(JSON.parse(response));\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateCreateScreen() {\n            this.vertical = window.innerWidth < window.innerHeight;\n\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n            if (this.vertical) {\n                this.gateCreateScreenVertical();\n            } else {\n                this.gateCreateScreenHorizontal();\n            }\n        }\n\n        gateCreateScreenVertical() {\n            let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // A bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code') + \": \") + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n\n            bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n                this.getStringM('js_name') + \": \") + 2 * this.padding;\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Vertical\n            this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.gatePlayGame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n        }\n\n        gateCreateScreenHorizontal() {\n            let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const sName = this.getStringM('js_name') + \": \";\n            let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // B bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code')) + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n            let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n            bottom = this.gateCreateLabelEditHorizontal(0, bottom, newWidth - 2 * this.padding,\n                this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            // Button refresh color palettes\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n\n            // Button refresh avatars\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            // Avatar\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Horizontal\n            this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\",\n                function() {\n                    instance.gatePlayGame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                        instance.edtNickname.value, instance.paletteid, instance.avatarid);\n                });\n        }\n\n        gateComputeLabelSize(fontSize, aLabel) {\n            let maxWidth = 0;\n            let maxHeight = 0;\n\n            for (let i = 0; i < aLabel.length; i++) {\n                const label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.innerHTML = aLabel[i];\n                label.style.whiteSpace = \"nowrap\";\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                label.style.width = \"0px\";\n                label.style.height = \"0px\";\n                this.area.appendChild(label);\n\n                if (label.scrollWidth > maxWidth) {\n                    maxWidth = label.scrollWidth;\n                }\n\n                if (label.scrollHeight > maxHeight) {\n                    maxHeight = label.scrollHeight;\n                }\n                this.area.removeChild(label);\n            }\n\n            return [maxWidth, maxHeight];\n        }\n\n        gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            top += label.scrollHeight;\n\n            let leftEdit = left + 'px';\n            let div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return top + fontSize + this.padding;\n        }\n\n        gateShowAvatars(left, top, width, height, countX, avatarids, avatars) {\n            if (!avatars || avatars.length === 0) {\n                return; // Exit early if no avatars exist\n            }\n\n            this.avatar = undefined;\n            const count = avatars.length;\n            let leftOriginal = left;\n            let w = Math.round(this.padding / 2) + \"px\";\n            for (let i = 0; i < count; i++) {\n                let avatarImagePath = 'assets/avatars/' + avatars[i];\n                let btn = this.createCenterImageButton(\n                    this.area,\n                    left, top,\n                    this.iconSize - this.padding, this.iconSize - this.padding,\n                    \"\",\n                    avatarImagePath\n                );\n                btn.classList.add(\"mmogame_avatar\");\n                let id = avatarids[i];\n                btn.addEventListener(\"click\", () => {\n                    this.gateUpdateAvatar(btn, id, w);\n                });\n\n                // Move left position after placing the button\n                left += this.iconSize;\n\n                // Reset left and move to the next row after filling countX buttons\n                if ((i + 1) % countX === 0) {\n                    top += this.iconSize;\n                    left = leftOriginal;\n                }\n            }\n        }\n\n        gateSendGetColorsAvatarsVertical(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                         gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n            let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n            let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n            let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n            let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n            if (!updateColors) {\n                countXcolors = countXcolors = 0;\n            }\n            if (!updateAvatars) {\n                countXavatars = countYavatars = 0;\n            }\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Defining the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.auserid,\n                    avatars: countXavatars * countYavatars,\n                    colorpalettes: countXcolors * countYcolors,\n                };\n\n                // Calling the service through the Moodle AJAX API\n                let getAssets = Ajax.call([{\n                    methodname: 'mod_mmogame_get_assets',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAssets[0].done(function(response) {\n                    if (updateColors) {\n                        instance.gateShowColorPalettes(leftColors, topColors, gridWidthColors,\n                            gridHeightColors, countXcolors, countYcolors, response.colorpaletteids, response.colorpalettes);\n                    }\n                    if (updateAvatars) {\n                        instance.gateShowAvatars(leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars,\n                            response.avatarids, response.avatars);\n                    }\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateShowColorPalettes(left, top, width, height, countX, countY, colorpaletteids, colorpalettes) {\n            let i = 0; // Counter for color palettes\n            const count = colorpalettes.length;\n            this.canvasColor = undefined;\n            const canvasSize = this.iconSize - this.padding * 3 / 2;\n            const parsedPalettes = colorpalettes.map(palette =>\n                palette.split(\",\").map(value => parseInt(value, 10) || 0)\n            );\n            for (let iy = 0; iy < countY; iy++) {\n                for (let ix = 0; ix < countX; ix++) {\n                    // Check if we exceed available palettes or encounter invalid data\n                    if (i >= count || !parsedPalettes[i] || !colorpaletteids[i]) {\n                        i++; // Increment and continue if invalid\n                        continue;\n                    }\n\n                    // Create a new canvas element\n                    let canvas = document.createElement('canvas');\n                    canvas.style.position = \"absolute\";\n                    canvas.style.left = `${left + ix * this.iconSize}px`;\n                    canvas.style.top = `${top + iy * this.iconSize}px`;\n                    canvas.width = canvasSize;\n                    canvas.height = canvasSize;\n                    canvas.style.cursor = 'pointer';\n                    canvas.classList.add(\"mmogame_color\");\n\n                    // Append canvas to the area\n                    this.area.appendChild(canvas);\n\n                    // Render the color palette on the canvas\n                    this.showColorPalette(canvas, parsedPalettes[i]);\n\n                    // Get the palette ID and attach a click event listener\n                    let id = colorpaletteids[i];\n                    canvas.addEventListener(\"click\", () => {\n                        this.gateUpdateColorPalette(canvas, id);\n                    });\n\n                    i++;\n                }\n            }\n            this.area.classList.add(\"palette\");\n        }\n\n        gateUpdateColorPalette(canvas, id) {\n            if (this.canvasColor !== undefined) {\n                this.canvasColor.style.borderStyle = \"none\";\n            }\n            this.canvasColor = canvas;\n            canvas.style.borderStyle = \"outset\";\n            let w = Math.round(this.padding / 2) + \"px\";\n            canvas.style.borderLeftWidth = w;\n            canvas.style.borderTopWidth = w;\n            canvas.style.borderRightWidth = w;\n            canvas.style.borderBottomWidth = w;\n\n            this.paletteid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateAvatar(avatar, id, w) {\n            if (this.avatar !== undefined) {\n                this.avatar.style.borderStyle = \"none\";\n            }\n            this.avatar = avatar;\n            avatar.style.borderStyle = \"outset\";\n\n            avatar.style.borderLeftWidth = w;\n            avatar.style.borderTopWidth = w;\n            avatar.style.borderRightWidth = w;\n            avatar.style.borderBottomWidth = w;\n\n            this.avatarid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateSubmit() {\n            let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n            let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode\n                && this.edtNickname.value.length > 0;\n\n            this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n        }\n\n        gateComputeSizes() {\n            this.computeSizes();\n            this.iconSize = Math.round(0.8 * this.iconSize);\n            this.padding = Math.round(0.8 * this.padding);\n        }\n\n        getStringM(name) {\n            return M.util.get_string(name, 'mmogame');\n        }\n\n        gateCreateLabelEditHorizontal(left, top, width, fontSize, labelWidth, title) {\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n            let leftEdit = (left + labelWidth + this.padding);\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = (width - leftEdit - this.padding) + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return ret;\n        }\n\n        createDivMessageDo(left, top, width, height, message, heightmessage) {\n            if (this.divMessageBackground === undefined) {\n                let div = this.createDiv(this.divMessageBackground, left, top, width, height);\n                div.style.background = this.getColorHex(this.colorDefinition);\n                this.divMessageBackground = div;\n            }\n\n            if (this.divMessage === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"center\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.background = this.getColorHex(this.colorDefinition);\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                this.divMessage = div;\n            }\n            this.divMessage.innerHTML = message;\n            this.body.appendChild(this.divMessage);\n            this.autoResizeText(this.divMessage, width, heightmessage, false, this.minFontSize, this.maxFontSize, 0.5);\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","window","localStorage","getItem","isNaN","this","size","parseFloat","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","firstChild","removeChild","lastChild","area","undefined","openGame","computeSizes","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","style","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","getUserGUID","guid","uuid4","setItem","pad","length","uuid","Array","floor","random","map","x","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","hexArray","unshift","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairP","createDivScorePercent","lineHeight","textAlign","border","boxShadow","colorScore","title","getStringM","colorScore2","disabled","labelScore","labelScore2","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","toString","createButtonHelp","buttonHelp","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","id","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","message","divMessageHelp","areaTop","createDivMessageDo","divMessage","createDivMessageStart","height1","showHelpScreen","divMessageBackground","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","setColorsString","split","setColors","computeDifClock","time","timeStart","timeClose","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","updateButtonsAvatar","avatar","lastIndexOf","pop","colorsBackground","buttonAvatarTop","gateOpen","mmogameid","pin","kinduser","auserid","url","gateComputeSizes","areaWidth","areaHeight","avatarid","paletteid","gatePlayGame","gateCreateScreen","user","sendGetAttempt","params","colorpaletteid","require","Ajax","call","methodname","args","done","response","onServerGetAttempt","JSON","parse","fail","error","vertical","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateLabelEditVertical","edtCode","edt","gateUpdateSubmit","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatarsVertical","bottom2","btnSubmit","value","sName","sizeLabel","gateCreateLabelEditHorizontal","aLabel","labelWidth","align","leftEdit","type","autofocus","gateShowAvatars","countX","avatarids","avatars","count","leftOriginal","avatarImagePath","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","colorpalettes","gateShowColorPalettes","colorpaletteids","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","cursor","gateUpdateColorPalette","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string","heightmessage"],"mappings":"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"}