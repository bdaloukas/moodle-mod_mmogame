{"version":3,"file":"mmogametypequizalone.min.js","sources":["../src/mmogametypequizalone.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mmogametype_quiz/mmogametypequiz'],\n    function(MmoGameTypeQuiz) {\n    return class MmoGameTypeQuizAlone extends MmoGameTypeQuiz {\n\n        // Score variables.\n        player;\n\n        constructor() {\n            super();\n            this.cIcons = this.hasHelp() ? 5 : 4;\n            this.type = 'alone';\n        }\n\n        createIconBar() {\n            let i = 0;\n            const step = this.iconSize + this.padding;\n\n            const nicknameHeight = Math.round(this.iconSize / 3);\n\n            const fragment = document.createDocumentFragment(); // Batch DOM updates\n\n            const [nickname, avatar] = this.createNicknameAvatar(fragment,\n                'mmogame-quiz-alone',\n                Math.round(this.padding + (i++) * step),\n                this.padding,\n                2 * this.iconSize + this.padding,\n                nicknameHeight,\n                this.padding + nicknameHeight,\n                this.iconSize);\n\n            this.player = this.createDivScorePercent(fragment,\n                'mmogame-quiz-alone',\n                this.padding + (i++) * step,\n                this.padding + nicknameHeight,\n                true,\n                this.colorScore);\n            this.player.avatarElement = avatar;\n            this.player.nicknameElement = nickname;\n            this.player.cacheAvatar = '';\n            this.player.cacheNickname = '';\n            this.player.lblScore.title = this.getStringM('js_grade');\n            this.player.lblRank.title = this.getStringM('js_ranking_grade');\n\n            this.createButtonSound(fragment, this.padding + (i++) * step,\n                this.padding + nicknameHeight, this.iconSize);\n            if (this.hasHelp()) {\n                const button = this.createButtonHelp(fragment, this.padding + (i++) * step, this.padding);\n                button.addEventListener(\"click\", () => this.onClickHelp());\n            }\n            this.createArea(2 * this.padding + this.iconSize + nicknameHeight, 0);\n\n            this.body.appendChild(fragment); // Batch insert into DOM\n        }\n\n        processSetAnswer(json) {\n            this.correct = json.correct;\n\n            if (json.correct !== undefined) {\n                if (this.qtype === \"multichoice\") {\n                    this.onServerAnswerMultichoice(json);\n                }\n            }\n\n            this.disableInput();\n\n            if (this.aItemAnswer !== undefined && json.correct !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                }\n            }\n\n            this.createNextButton(this.areaRect.width - this.iconSize - this.padding, this.stripTop);\n\n            this.showScore(json);\n        }\n\n        /**\n         * Creates the game screen layout based on the current state.\n         *\n         * @param {Object} json - The game data used to build the screen.\n         * @param {boolean} disabled - Determines whether user input should be disabled.\n         */\n        createScreen(json, disabled) {\n            if (this.endofgame) {\n                // Display end-of-game message and final score\n                this.createDivMessage('mmogame-quiz-alone-endofgame', this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            let child;\n            while ((child = this.area.firstChild)) {\n                this.area.removeChild(child);\n            }\n\n            // Render the screen layout based on orientation (vertical or horizontal)\n            if (this.isVertical) {\n                this.createScreenVertical(json, disabled);\n            } else {\n                this.createScreenHorizontal(json, disabled);\n            }\n\n            // Display the current score\n            this.showScore(json);\n        }\n\n        /**\n         * Creates a horizontal layout for the quiz screen.\n         *\n         * @param {object} json\n         * @param {boolean} disabled - Whether user input should be disabled.\n         */\n        createScreenHorizontal(json, disabled) {\n            const [width] = this.computeBestFontSize(json);\n\n            this.radioSize = Math.round(this.fontSize);\n            this.stripTop = this.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled);\n\n            this.createDefinition(0, 0, width - this.padding, this.stripTop - this.padding,\n                false, this.fontSize, json.definition);\n\n            // Adjust strip dimensions\n            this.stripLeft = width + this.padding;\n        }\n\n        createScreenVertical(json, disabled) {\n            this.computeBestFontSize(json);\n\n            this.radioSize = Math.round(this.fontSize);\n\n            const defSize = this.createDefinition(0, 0, this.areaRect.width, 0, false, this.fontSize, json.definition);\n            this.stripTop = this.createAnswer(0, defSize[1] + this.padding, this.areaRect.width, false, this.fontSize, disabled);\n\n            // Adjust strip position\n            this.stripLeft = 0;\n        }\n\n        processGetAttempt(json) {\n            // Calculate time difference and set up the clock\n            this.computeDifClock(json.time, json.timestart, json.timeclose);\n\n            if (parseInt(json.state) === 0) {\n                json.qtype = '';\n                if (json.colors) {\n                    this.setColorsString(json.colors);\n                    this.createIconBar();\n                }\n                this.showScore(json);\n                this.createDivMessageStart(this.getStringM('js_wait_to_start'));\n                return;\n            }\n\n            if (this.player === undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            // Update the window title if a name is provided\n            if (json.name) {\n                document.title = json.name;\n            }\n\n            // Handle error messages from the server\n            if (json.errorcode) {\n                this.createDivMessage('mmogame-error', json.errorcode);\n                return;\n            }\n\n            // Update game state and user-related data\n            this.state = parseInt(json.state, 10);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson, 10);\n\n            const nicknameWidth = 2 * this.iconSize + this.padding;\n            const nicknameHeight = this.iconSize / 3;\n            console.log(json)\n            this.updateNicknameAvatar(this.player, json.avatar, json.nickname, nicknameWidth, nicknameHeight);\n            this.attempt = json.attempt;\n\n            // Process question type and answers\n            this.qtype = json.qtype;\n            if (this.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = json.answerids;\n                json.answers.forEach((answer, index) => {\n                    this.answers[index] = this.repairP(answer); // Process each answer\n                });\n            }\n            this.answer = json.answer ?? undefined;\n\n            // Handle end-of-game scenarios\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            json.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            // A this.updateLabelTimer(); // Start or update the timer\n            this.sendFastJSON(); // Send fast JSON updates\n        }\n\n        showScore(json) {\n            super.showScore(this.player, json.sumscore, json.rank, json.percent, json.percentRank, true);\n            this.player.lblAddScore.innerHTML = json.addscore === undefined ? '' : json.addscore;\n            this.autoResizeText(this.player.lblAddScore, this.iconSize, this.player.heightLine3, true, 0, 0, 1);\n        }\n\n        showHelpScreen(div) {\n            div.innerHTML = `\n                <br>\n                <div>${this.getStringT('js_alone_help')}</div><br>\n\n                <table class=\"mmogame-table-help\">\n                    <tr>\n                        <td><img height=\"83\" src=\"assets/aduel/example2.png\" alt=\"\" /></td>\n                        <td>${this.getStringT('js_aduel_example2')}</td>\n                    </tr>\n                </table>\n            `;\n        }\n\n        onServerAnswerMultichoice(json) {\n            let foundCorrect = false;\n\n            let aCorrect = json.correct.split(\",\");\n            for (let i = 0; i < this.answersID.length; i++) {\n                if (this.answersID[i] === '') {\n                    continue;\n                }\n\n                const label = this.aItemLabel[i];\n\n                let iscorrect1;\n\n                const iscorrect = aCorrect.includes(this.answersID[i]);\n\n                if (this.aItemAnswer[i].classList.contains(\"checked\")) {\n                    iscorrect1 = aCorrect.includes(this.answersID[i]);\n                }\n                if (iscorrect1) {\n                    foundCorrect = true;\n                }\n\n                if (iscorrect === false && iscorrect1 === undefined) {\n                    continue;\n                }\n\n                const height = this.aItemLabel[i].scrollHeight;\n\n                const move = iscorrect1 !== undefined ? this.radioSize : 0;\n                const width = this.labelWidth - move;\n\n                if (move !== 0) {\n                    label.style.left = (parseInt(label.style.left) + move) + \"px\";\n                }\n                this.aItemLabel[i].style.width = width + \"px\";\n                this.autoResizeText(this.aItemLabel[i], width, height, true, this.minFontSize, this.maxFontSize, 0.5);\n\n                this.onServerAnswerMultichoiceShowCorrect(i, iscorrect1);\n            }\n\n            this.playAudio(foundCorrect ? this.audioYes : this.audioNo);\n        }\n\n        onServerAnswerMultichoiceShowCorrect(i, iscorrect1, iscorrect) {\n            if (iscorrect) {\n                this.aItemLabel[i].innerHTML = '<b><u>' + this.aItemLabel[i].innerHTML + '</b></u>';\n            }\n\n            if (iscorrect1 !== undefined) {\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, 'mmogame-quiz-aduel-correct-answer',\n                    this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.title = iscorrect1 ? this.getStringT('js_correct_answer') : this.getStringT('js_wrong_answer');\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect1, this.colorScore, this.colorScore);\n            }\n        }\n\n    };\n});"],"names":["define","MmoGameTypeQuiz","player","constructor","super","this","cIcons","hasHelp","type","createIconBar","i","step","iconSize","padding","nicknameHeight","Math","round","fragment","document","createDocumentFragment","nickname","avatar","createNicknameAvatar","createDivScorePercent","colorScore","avatarElement","nicknameElement","cacheAvatar","cacheNickname","lblScore","title","getStringM","lblRank","createButtonSound","createButtonHelp","addEventListener","onClickHelp","createArea","body","appendChild","processSetAnswer","json","correct","undefined","qtype","onServerAnswerMultichoice","disableInput","aItemAnswer","length","classList","add","createNextButton","areaRect","width","stripTop","showScore","createScreen","disabled","endofgame","createDivMessage","child","area","firstChild","removeChild","isVertical","createScreenVertical","createScreenHorizontal","computeBestFontSize","radioSize","fontSize","createAnswer","createDefinition","definition","stripLeft","defSize","processGetAttempt","computeDifClock","time","timestart","timeclose","parseInt","state","colors","setColorsString","createDivMessageStart","name","errorcode","fastjson","timefastjson","nicknameWidth","console","log","updateNicknameAvatar","attempt","answers","answersID","answerids","forEach","answer","index","repairP","sendFastJSON","sumscore","rank","percent","percentRank","lblAddScore","innerHTML","addscore","autoResizeText","heightLine3","showHelpScreen","div","getStringT","foundCorrect","aCorrect","split","label","aItemLabel","iscorrect1","iscorrect","includes","contains","height","scrollHeight","move","labelWidth","style","left","minFontSize","maxFontSize","onServerAnswerMultichoiceShowCorrect","playAudio","audioYes","audioNo","t","top","createDiv","aItemCorrectX","getSVGcorrect"],"mappings":"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"}