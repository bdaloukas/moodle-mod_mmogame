{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class MmoGame {\n        kindSound = 0;\n        state = 0;\n        body;\n        minFontSize;\n        maxFontSize;\n        fontSize;\n        avatarTop;\n        colorsBackground;\n        buttonAvatarTop;\n        buttonAvatarHeight;\n        colorScore;\n        colorScore2;\n        definition;\n        colorDefinition;\n\n        /**\n         * Basic class for games.\n         *\n         * @module mmogame\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n        constructor() {\n            this.body = document.getElementsByTagName(\"body\")[0];\n            this.kindSound = 0;\n\n            let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n            this.minFontSize = size;\n            this.maxFontSize = 2 * size;\n            this.fontSize = size;\n        }\n\n        hasHelp() {\n            return false;\n        }\n\n        removeBodyChilds() {\n            this.removeDivMessage();\n\n            while (this.body.firstChild) {\n                this.body.removeChild(this.body.lastChild);\n            }\n            this.area = undefined;\n        }\n\n        openGame() {\n            this.removeBodyChilds();\n            this.area = undefined;\n            this.computeSizes();\n        }\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n\n        createImage(parent, left, top, width, height, filename) {\n            let button = document.createElement(\"img\");\n\n            button.tabIndex = 0;\n            button.style.position = \"absolute\";\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.draggable = false;\n\n            if (width !== 0) {\n                button.style.width = width + \"px\";\n            }\n            if (height !== 0) {\n                button.style.height = height + \"px\";\n            }\n            button.style.fontSize = height + \"px\";\n            if (filename !== undefined && filename !== '') {\n                button.src = filename;\n            }\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        createCenterImageButton(parent, left, top, width, height, classname, filename) {\n            let button = document.createElement(\"img\");\n            button.classList.add(\"mmogame_imgbutton\");\n            button.style.position = \"absolute\";\n            button.draggable = false;\n\n            const img = new Image();\n            img.onload = function() {\n                if (this.width === 0 || this.height === 0) {\n                    this.width = this.height = 1;\n                }\n\n                if (this.width > 0 && this.height > 0) {\n                    let mul = Math.min(width / this.width, height / this.height);\n                    let w = Math.round(this.width * mul);\n                    let h = Math.round(this.height * mul);\n\n                    button.style.width = w + \"px\";\n                    button.style.height = h + \"px\";\n                    button.style.left = (left + width / 2 - w / 2) + \"px\";\n                    button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                    button.src = filename;\n                    button.innerHTML = filename;\n                    button.style.fontSize = height + \"px\";\n                }\n            };\n            if (filename !== undefined && filename !== \"\") {\n                img.style.left = left + \"px\";\n                img.style.top = top + \"px\";\n                img.style.visibility = 'hidden';\n                img.src = filename;\n            }\n            button.tabIndex = 0;\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        updateImageButton(button, left, top, width, height, filename) {\n            button.src = filename;\n        }\n\n        createDiv(parent, left, top, width, height) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n\n            parent.appendChild(div);\n\n            return div;\n        }\n\n        createDivColor(parent, left, top, width, height, color) {\n            let div = this.createDiv(parent, left, top, width, height);\n            div.style.background = this.getColorHex(color);\n\n            return div;\n        }\n\n        getMuteFile() {\n            if (this.kindSound === 0) {\n                return 'assets/sound-on-flat.png';\n            } else if (this.kindSound === 1) {\n                return 'assets/sound-off-flat.png';\n            } else if (this.kindSound === 2) {\n                return 'assets/speak.svg';\n            } else {\n                return 'assets/sound-on-flat.png';\n            }\n        }\n\n        playAudio(audio) {\n            if (this.kindSound !== 0 && audio !== null) {\n                if (audio.networkState === 1) {\n                    audio.play();\n                }\n            }\n        }\n\n        autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n            let minHeight = 0.9 * height;\n            let low = Math.max(1, minFontSize);\n            width = Math.round(width);\n            height = Math.round(height);\n            let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n            let fitSize = low;\n            let fitHeight = 0;\n            let newHeight = 0;\n            let newWidth = 0;\n\n            for (let i = 0; i <= 10; i++) {\n                let el = document.createElement(\"div\");\n                el.style.left = 0;\n                el.style.top = 0;\n                el.style.width = width + \"px\";\n                el.style.height = 0;\n                el.visibility = \"visible\";\n                if (!wrap) {\n                    el.style.whiteSpace = \"nowrap\";\n                }\n                el.innerHTML = item.innerHTML;\n                this.body.appendChild(el);\n\n                let fontSize = (low + up) / 2;\n\n                el.style.fontSize = fontSize + \"px\";\n                newHeight = el.scrollHeight;\n                newWidth = el.scrollWidth - 1;\n\n                this.body.removeChild(el);\n\n                if (newWidth > width || newHeight > height) {\n                    up = fontSize;\n                } else {\n                    low = fontSize;\n                    if (Math.abs(fitHeight - newHeight) <= 2) {\n                        break;\n                    }\n                    fitHeight = newHeight;\n                    fitSize = fontSize;\n                    if (newHeight > minHeight) {\n                        break;\n                    }\n                }\n            }\n            item.style.fontSize = fitSize + \"px\";\n\n            if (newWidth > width || newHeight > height) {\n                this.autoResizeTextBr(item);\n                newWidth = item.scrollWidth;\n                newHeight = item.scrollHeight;\n                this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                    minRatio);\n            } else {\n                return [item.scrollWidth - 1, item.scrollHeight];\n            }\n\n            let el = document.createElement(\"div\");\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"hidden\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n            el.style.fontSize = item.style.fontSize;\n            let size = [el.scrollWidth - 1, el.scrollHeight];\n            this.body.removeChild(el);\n\n            return size;\n        }\n\n        autoResizeTextBr(item) {\n            let s = item.innerHTML;\n            let change = false;\n            while (s.startsWith('<br>')) {\n                s = s.substring(4);\n                change = true;\n            }\n            let pos1 = s.indexOf('<br>');\n            for (; ;) {\n                let pos = s.indexOf('<br>', pos1 + 4);\n                if (pos < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos1 + 4, pos);\n                if (!s2.trim()) {\n                    s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                    change = true;\n                    pos = pos1;\n                }\n                pos1 = pos;\n            }\n\n            if (change) {\n                item.innerHTML = s;\n            }\n        }\n\n        autoResizeTextImage(item, subwidth, subheight, minRatio) {\n            if (subwidth === 0 && subheight === 0) {\n                return;\n            }\n            let s = item.innerHTML;\n\n            for (let pos = 0; ;) {\n                let pos2 = s.indexOf(\"<img \", pos);\n                if (pos2 < 0) {\n                    break;\n                }\n                let pos3 = s.indexOf(\">\", pos2);\n                if (pos3 < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos2, pos3) + \" \";\n\n                let width = 0;\n                let height = 0;\n                let posw = s2.indexOf(\"width=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                        width = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n\n                posw = s2.indexOf(\"height=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                        height = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n                if (width > 0 && height > 0) {\n                    let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                    let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                    let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                    s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n                }\n                s = s.slice(0, pos2) + s2 + s.slice(pos3);\n                pos = pos3;\n            }\n            item.innerHTML = s;\n        }\n\n        pad(num, size) {\n            let s = num + \"\";\n            while (s.length < size) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        uuid4() {\n            const uuid = new Array(36);\n            const hexDigits = '0123456789abcdef'; // Lookup table for hexadecimal digits\n\n            for (let i = 0; i < 36; i++) {\n                uuid[i] = Math.floor(Math.random() * 16); // Generate random numbers for each position\n            }\n\n            // Insert dashes at predefined positions\n            uuid[8] = '-';\n            uuid[13] = '-';\n            uuid[18] = '-';\n            uuid[23] = '-';\n\n            // Set specific bits to comply with UUIDv4 standards\n            uuid[14] = 4; // The 13th position represents version 4 (0100 in binary)\n            // eslint-disable-next-line no-bitwise\n            uuid[19] = (uuid[19] & 0x3) | 0x8; // The 17th position must start with '10' in binary\n\n            // Convert numbers to hexadecimal without using toString\n            return uuid\n                .map((x) => (typeof x === 'string' ? x : hexDigits[x])) // Convert numeric values to hex using lookup table\n                .join('');\n        }\n\n        computeSizes() {\n            if (this.cIcons < 5 || this.cIcons === undefined) {\n                this.cIcons = 5;\n            }\n            this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n            this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n            this.padding = Math.round(this.iconSize / 10);\n            this.iconSize -= this.padding;\n        }\n\n        getIconSize() {\n            return this.iconSize;\n        }\n\n        getCopyrightHeight() {\n            return Math.round(this.getIconSize() / 3);\n        }\n\n        getPadding() {\n            return this.padding;\n        }\n\n        getColorHex(x) {\n            const hexDigits = '0123456789ABCDEF'; // Lookup table for hexadecimal digits\n            const hexArray = [];\n\n            for (let i = 0; i < 6; i++) {\n                // Extract the least significant nibble and find its hex representation\n                // eslint-disable-next-line no-bitwise\n                hexArray.unshift(hexDigits[x & 0xF]);\n                // eslint-disable-next-line no-bitwise\n                x >>= 4; // Shift right by 4 bits to process the next nibble\n            }\n\n            // Join the hex digits and prefix with '#'\n            return '#' + hexArray.join('');\n        }\n\n        getContrast(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256; // Blue.\n\n            return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        }\n\n        getColorGray(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256, // Blue.\n                yiq = (r * 299) + g * 587 + b * 114,\n                m = 255 * 299 + 255 * 587 + 255 * 114,\n                gray = Math.round(yiq * 255 / m);\n\n            return (gray * 0x10000) + (gray * 0x100) + gray;\n        }\n\n        getColorContrast(x) {\n            return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n        }\n\n        repairColors(colors) {\n\n            this.colors = colors;\n            let instance = this;\n            this.colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n\n            this.colorBackground = this.colors[0];\n            this.body.style.background = this.getColorHex(this.colorBackground);\n\n            return this.colors;\n        }\n\n        repairP(s) {\n            if (s === undefined) {\n                return \"\";\n            }\n\n            // Remove <p> tags and replace </p> with <br />\n            let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n            // Remove <br> or <br/> at the end of the string\n            s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n            // Remove the <ol><br></ol> sequence if it exists\n            let pos = s2.indexOf('<ol><br></ol>');\n            if (pos >= 0) {\n                s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n            }\n\n            return s2;\n        }\n\n        createDivScore(left, top, num) {\n            let button = document.createElement(\"button\");\n            button.style.position = \"absolute\";\n            button.classList.add(\"mmogame_button\");\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.style.width = this.iconSize + \"px\";\n            button.style.height = this.iconSize + \"px\";\n            button.style.lineHeight = this.iconSize + \"px\";\n            button.style.textAlign = \"center\";\n            button.style.borderRadius = this.iconSize + \"px\";\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            button.title = this.getStringM('js_grade');\n            button.alt = this.getStringM('js_grade');\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n            } else {\n                this.buttonScore2 = button;\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '100 %';\n            this.autoResizeText(button, this.iconSize, this.iconSize, false, 0, 0, 1);\n            button.innerHTML = '';\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade');\n            if (num === 1) {\n                this.labelScore = div;\n            } else {\n                this.labelScore2 = div;\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            button.disabled = true;\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n        }\n\n        createDivScorePercent(left, top, num) {\n            let button = document.createElement(\"button\");\n            button.style.position = \"absolute\";\n            button.classList.add(\"mmogame_button\");\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.style.width = this.iconSize + \"px\";\n            button.style.height = this.iconSize + \"px\";\n            button.style.lineHeight = this.iconSize + \"px\";\n            button.style.textAlign = \"center\";\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n                button.title = this.getStringM('js_grade');\n            } else {\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '';\n            button.disabled = true;\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            if (num === 1) {\n                this.labelScore = div;\n                div.title = this.getStringM('js_grade');\n            } else {\n                this.labelScore2 = div;\n                div.title = this.getStringM('js_grade_opponent');\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_ranking_grade');\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n\n            let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n            div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = h + \"px\";\n            div.style.lineHeight = h + \"px\";\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_ranking_percent');\n            if (num === 1) {\n                this.labelScoreRankB = div;\n            }\n\n            label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n            div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n                this.iconSize / 2);\n            div.style.textAlign = \"center\";\n            div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = label.style.fontSize;\n            div.style.fontWeight = 'bold';\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_percent');\n            this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n            if (num === 1) {\n                this.labelScoreB = div;\n            }\n        }\n\n        createDivTimer(left, top, sizeIcon) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = sizeIcon + \"px\";\n            div.style.height = sizeIcon + \"px\";\n            div.style.whiteSpace = \"nowrap\";\n            div.style.lineHeight = sizeIcon + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n            div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n            div.name = \"timer\";\n            this.body.appendChild(div);\n            this.labelTimer = div;\n\n            div.innerHTML = '23:59';\n            this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n            div.innerHTML = '';\n            div.title = this.getStringM('js_question_time');\n        }\n\n        createButtonSound(left, top) {\n            this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n                this.getMuteFile());\n            this.buttonSound.alt = this.getStringM('js_sound');\n            let instance = this;\n            this.buttonSound.addEventListener(\"click\", function() {\n                instance.onClickSound(instance.buttonSound);\n            });\n\n            this.buttonSound.title = this.getStringM('js_sound');\n        }\n\n        onClickSound(btn) {\n            window.title = btn.src;\n            this.kindSound = (this.kindSound + 1) % 2;\n            window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n            btn.src = this.getMuteFile();\n        }\n\n        createButtonHelp(left, top) {\n            this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n            this.buttonHelp.alt = this.getStringM('js_help');\n        }\n\n        findbest(low, up, fn) {\n            if (low < 1) {\n                low = 1;\n            }\n\n            let prevSize;\n            let fitSize = low;\n            let testSize;\n            for (let i = 0; i <= 10; i++) {\n                prevSize = low;\n                testSize = (low + up) / 2;\n\n                let cmp = fn(testSize);\n                if (cmp <= 0) {\n                    fitSize = testSize;\n                    low = testSize;\n                } else {\n                    up = testSize;\n                }\n                if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                    break;\n                }\n            }\n\n            return fitSize;\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined) {\n                return;\n            }\n            if (this.timeclose === 0 || this.timestart === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n\n            let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n            if (dif <= 0) {\n                dif = 0;\n                this.sendTimeout();\n            }\n            const minutes = Math.floor(Math.abs(dif) / 60);\n            const seconds = Math.abs(dif) % 60;\n            const prefix = dif < 0 ? \"-\" : \"\";\n            this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n            if (dif === 0) {\n                return;\n            }\n\n            let instance = this;\n            setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        createDivMessage(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            this.createDivMessageDo(left, top, width, height, message, height);\n\n            this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n        }\n\n        createDivMessageStart(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            let height1 = height / 8;\n\n            this.createDivMessageDo(left, top, width, height, message, height1);\n\n            top += (height1 - this.divMessage.scrollHeight) / 2;\n            this.divMessage.style.top = top + \"px\";\n\n            if (this.divMessageHelp === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"left\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                let top = this.iconSize + 3 * this.padding + height1;\n                div.style.top = (top + this.padding) + \"px\";\n                div.style.height = (height - height1) + \"px\";\n                this.divMessageHelp = div;\n                this.body.appendChild(this.divMessageHelp);\n\n                this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n            }\n        }\n\n        removeDivMessage() {\n            if (this.divMessage !== undefined) {\n                this.body.removeChild(this.divMessage);\n                this.divMessage = undefined;\n            }\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n            if (this.divMessageBackground !== undefined) {\n                this.divMessageBackground.remove();\n                this.divMessageBackground = undefined;\n            }\n        }\n\n        disableButtons(buttons, disabled) {\n            for (let i = 0; i < buttons.length; i++) {\n                let btn = buttons[i];\n                if (btn !== undefined) {\n                    if (disabled) {\n                        btn.classList.add(\"mmogame_imgbutton_disabled\");\n                    } else {\n                        btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                    }\n                }\n            }\n        }\n\n        repairNickname(nickname) {\n            if (nickname === undefined) {\n                return '';\n            }\n\n            let s = nickname;\n            if (s !== '') {\n                while (s.indexOf('_') !== -1) {\n                    s = s.replace('_', ' ');\n                }\n            }\n\n            return s;\n        }\n\n        showScore(sumscore, rank, name, usercode, addscore, completedrank, percentcompleted) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n\n        showColorPalette(canvas, colors) {\n            let ctx = canvas.getContext(\"2d\");\n            let width = canvas.width;\n            let height = canvas.height;\n            let strip = width / 5;\n            let instance = this;\n\n            colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n            for (let i = 0; i < 5; i++) {\n                ctx.fillStyle = this.getColorHex(colors[i]);\n                ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n            }\n\n            ctx.strokeStyle = \"#FFFFFF\";\n            ctx.lineWidth = 1;\n            ctx.strokeRect(0, 0, width, height);\n        }\n\n        setColorsString(s) {\n            let a = [0x9B7ED9, 0x79F2F2, 0x67BF5A, 0xD0F252, 0xBF5B21];\n            if (s !== undefined && s.length >= 0) {\n                let b = s.split(\",\");\n                if (b.length === 5) {\n                    a = b;\n                    for (let i = 0; i < 5; i++) {\n                        a[i] = parseInt(a[i]);\n                    }\n                }\n            }\n            this.setColors(a);\n        }\n\n        computeDifClock(time, timeStart, timeClose) {\n            if (time !== undefined) {\n                this.difClock = ((new Date()).getTime() - time) / 1000;\n            }\n\n            this.computeTimeStartClose(timeStart, timeClose);\n        }\n\n        computeTimeStartClose(timeStart, timeClose) {\n            if (timeStart !== undefined) {\n                this.timestart = parseInt(timeStart) !== 0 ? parseInt(timeStart) + this.difClock : 0;\n                this.timeclose = parseInt(timeClose) !== 0 ? parseInt(timeClose) + this.difClock : 0;\n            } else {\n                this.timestart = 0;\n                this.timeclose = 0;\n            }\n        }\n\n        drawRadio(canvas, color1, color2) {\n            let ctx = canvas.getContext(\"2d\");\n            let size = canvas.width;\n            ctx.clearRect(0, 0, size, canvas.height);\n\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color1);\n            ctx.fill();\n\n            let checked = canvas.classList.contains(\"checked\");\n            if (checked) {\n                ctx.beginPath();\n                ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n                ctx.fillStyle = this.getColorHex(color2);\n                ctx.fill();\n            }\n        }\n\n        createRadiobox(parent, size, color1, color2, checked, disabled) {\n            let canvas = document.createElement('canvas');\n            canvas.style.position = \"absolute\";\n            canvas.width = size;\n            canvas.height = size;\n            parent.appendChild(canvas);\n            if (checked) {\n                canvas.classList.add(\"checked\");\n            }\n            if (disabled) {\n                canvas.classList.add(\"disabled\");\n            }\n\n            this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n            return canvas;\n        }\n\n        createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n            if (widthNickName === 0) {\n                widthNickName = this.iconSize;\n            }\n            if (heightNickName === 0) {\n                heightNickName = this.iconSize - this.buttonAvatarHeight;\n            }\n            if (this.buttonsAvatarLeft === undefined) {\n                this.buttonsAvatarLeft = [];\n            }\n            this.buttonsAvatarLeft[num] = left;\n\n            if (this.buttonsAvatarSrc === undefined) {\n                this.buttonsAvatarSrc = [];\n            }\n            this.buttonsAvatarSrc[num] = \"\";\n\n            if (this.nicknames === undefined) {\n                this.nicknames = [];\n            }\n            this.nicknames[num] = \"\";\n\n            if (this.buttonsAvatar === undefined) {\n                this.buttonsAvatar = [];\n            }\n            this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n            if (num === 2 && this.avatarTop !== undefined) {\n                this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n            }\n\n            if (this.divNicknames === undefined) {\n                this.divNicknames = [];\n            }\n            if (this.divNicknamesWidth === undefined) {\n                this.divNicknamesWidth = [];\n            }\n            if (this.divNicknamesHeight === undefined) {\n                this.divNicknamesHeight = [];\n            }\n            this.divNicknamesWidth[num] = widthNickName;\n            this.divNicknamesHeight[num] = heightNickName;\n\n            this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n        }\n\n        updateButtonsAvatar(num, avatar, nickname) {\n            if (avatar === undefined) {\n                avatar = \"\";\n            }\n            if (nickname === undefined) {\n                nickname = \"\";\n            }\n\n            if (avatar === \"\" && nickname === \"\") {\n                this.buttonsAvatar[num].style.visibility = 'hidden';\n                this.divNicknames[num].style.visibility = 'hidden';\n                return;\n            }\n\n            if (this.nicknames[num] !== nickname || nickname === \"\") {\n                this.nicknames[num] = nickname;\n                let s = nickname;\n\n                if (nickname.length === 0) {\n                    s = avatar;\n                    let pos = s.lastIndexOf(\"/\");\n                    if (pos >= 0) {\n                        s = s.slice(pos + 1);\n                    }\n                    pos = s.lastIndexOf(\".\");\n                    if (pos >= 0) {\n                        s = s.slice(0, pos);\n                    }\n                    const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                    s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n                }\n                s = this.repairNickname(s);\n                if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                    this.divNicknames[num].innerHTML = s;\n                    this.divNicknames[num].style.textAlign = \"center\";\n                    this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                    this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                        0, 0, 1);\n                }\n            }\n\n            if (avatar !== this.buttonsAvatarSrc[num]) {\n                this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                    this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n                this.buttonsAvatarSrc[num] = avatar;\n            }\n\n            this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n            this.buttonsAvatar[num].style.visibility = 'visible';\n            this.divNicknames[num].style.visibility = 'visible';\n        }\n\n        gateOpen(mmogameid, pin, kinduser, user, url) {\n            this.url = url;\n            this.minFontSize *= 2;\n            this.maxFontSize *= 2;\n\n            this.mmogameid = mmogameid;\n            this.pin = pin;\n            this.kinduser = kinduser;\n            this.user = user;\n            this.gateComputeSizes();\n\n            this.areaTop = this.padding;\n            this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n            this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n            let instance = this;\n            this.getOptions().then(function(options) {\n                if (!options.hasOwnProperty('kindsound')) {\n                    options.kindsound = 0;\n                }\n                instance.kindSound = options.kindSound === 1 || options.kindSound === 2 ? options.kindSound : 0;\n\n                if (!options.hasOwnProperty('nickname')) {\n                    options.nickname = '';\n                }\n                options.avatarid = options.hasOwnProperty('avatarid') && options.avatarid !== undefined ? options.avatarid : 0;\n                options.paletteid = options.hasOwnProperty('paletteid') ? options.paletteid : 0;\n\n                switch (kinduser) {\n                    case 'moodle':\n                        if (options.nickname !== '' && options.avatarid !== 0 && options.paletteid !== 0) {\n                            instance.gatePlayGame(false, user, options.nickname, options.paletteid, options.avatarid);\n                            return true;\n                        }\n                        break;\n                    case 'guid':\n                        if (!options.hasOwnProperty('userGUID')) {\n                            options.userGUID = '';\n                        }\n                        if (options.userGUID.length >= 10 && options.nickname !== '' && options.avatarid !== 0 &&\n                            options.paletteid !== 0) {\n                            instance.gatePlayGame(false, options.userGUID, options.nickname, options.paletteid, options.avatarid);\n                            return true;\n                        }\n                        break;\n                }\n                instance.gateCreateScreen();\n                return true;\n            }).catch(error => {\n                instance.showError(error.message);\n                return false;\n            });\n        }\n\n        gatePlayGame(save, user, nickname, paletteid, avatarid) {\n            if (!save) {\n                this.callGetAttempt({user: user, nickname: nickname, paletteid: paletteid, avatarid: avatarid, firstcall: true});\n                return;\n            }\n\n            let options = {nickname: nickname, avatarid: avatarid, paletteid: paletteid};\n            if (this.kinduser === 'guid') {\n                options.userGUID = (user === '' ? this.uuid4() : user);\n            }\n\n            let instance = this;\n            this.saveOptions(options)\n                .then(function() {\n                    instance.callGetAttempt({user: user, nickname: nickname, paletteid: paletteid, avatarid: avatarid});\n                    return true;\n                })\n                .catch(error => {\n                    instance.showError(error.message);\n                    return false;\n                });\n        }\n\n        callGetAttempt(params) {\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                let params2 = {mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser, user: params.user};\n                if (params.firstcall) {\n                    params2.nickname = params.nickname;\n                    params2.paletteid = params.paletteid;\n                    params2.avatarid = params.avatarid;\n                }\n                // Calling the service through the Moodle AJAX API\n                let getAttempt = Ajax.call([{\n                    methodname: 'mmogametype_quiz_get_attempt',\n                    args: {\n                        mmogameid: instance.mmogameid,\n                        kinduser: instance.kinduser,\n                        user: params.user,\n                        nickname: params.nickname,\n                        avatarid: params.avatarid,\n                        colorpaletteid: params.paletteid\n                    },\n                }]);\n\n                // Handling the response\n                getAttempt[0].done(function(response) {\n                    if (params.firstcall) {\n                        instance.openGame();\n                        instance.colors = undefined;\n                    }\n                    instance.processGetAttempt(JSON.parse(response));\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateCreateScreen() {\n            this.vertical = window.innerWidth < window.innerHeight;\n\n            this.createArea();\n\n            if (this.vertical) {\n                this.gateCreateScreenVertical();\n            } else {\n                this.gateCreateScreenHorizontal();\n            }\n        }\n\n        gateCreateScreenVertical() {\n            let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // A bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code') + \": \") + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n\n            bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n                this.getStringM('js_name') + \": \") + 2 * this.padding;\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Vertical\n            this.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.gatePlayGame(true, instance.edtCode === undefined ? instance.user : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n        }\n\n        gateCreateScreenHorizontal() {\n            let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const sName = this.getStringM('js_name') + \": \";\n            let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // B bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code')) + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n            let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n            bottom = this.gateCreateLabelEditHorizontal(0, bottom, newWidth - 2 * this.padding,\n                this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            // Button refresh color palettes\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n\n            // Button refresh avatars\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            // Avatar\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Horizontal\n            this.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\",\n                function() {\n                    instance.gatePlayGame(true, instance.edtCode === undefined ? instance.user : instance.edtCode.value,\n                        instance.edtNickname.value, instance.paletteid, instance.avatarid);\n                });\n        }\n\n        gateComputeLabelSize(fontSize, aLabel) {\n            let maxWidth = 0;\n            let maxHeight = 0;\n\n            for (let i = 0; i < aLabel.length; i++) {\n                const label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.innerHTML = aLabel[i];\n                label.style.whiteSpace = \"nowrap\";\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                label.style.width = \"0px\";\n                label.style.height = \"0px\";\n                this.area.appendChild(label);\n\n                if (label.scrollWidth > maxWidth) {\n                    maxWidth = label.scrollWidth;\n                }\n\n                if (label.scrollHeight > maxHeight) {\n                    maxHeight = label.scrollHeight;\n                }\n                this.area.removeChild(label);\n            }\n\n            return [maxWidth, maxHeight];\n        }\n\n        gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            top += label.scrollHeight;\n\n            let leftEdit = left + 'px';\n            let div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return top + fontSize + this.padding;\n        }\n\n        gateShowAvatars(left, top, width, height, countX, avatarids, avatars) {\n            if (!avatars || avatars.length === 0) {\n                return; // Exit early if no avatars exist\n            }\n\n            this.avatar = undefined;\n            const count = avatars.length;\n            let leftOriginal = left;\n            let w = Math.round(this.padding / 2) + \"px\";\n            for (let i = 0; i < count; i++) {\n                let avatarImagePath = 'assets/avatars/' + avatars[i];\n                let btn = this.createCenterImageButton(\n                    this.area,\n                    left, top,\n                    this.iconSize - this.padding, this.iconSize - this.padding,\n                    \"\",\n                    avatarImagePath\n                );\n                btn.classList.add(\"mmogame_avatar\");\n                let id = avatarids[i];\n                btn.addEventListener(\"click\", () => {\n                    this.gateUpdateAvatar(btn, id, w);\n                });\n\n                // Move left position after placing the button\n                left += this.iconSize;\n\n                // Reset left and move to the next row after filling countX buttons\n                if ((i + 1) % countX === 0) {\n                    top += this.iconSize;\n                    left = leftOriginal;\n                }\n            }\n        }\n\n        gateSendGetColorsAvatars(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                         gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n            let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n            let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n            let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n            let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n            if (!updateColors) {\n                countXcolors = countXcolors = 0;\n            }\n            if (!updateAvatars) {\n                countXavatars = countYavatars = 0;\n            }\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Defining the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    avatars: countXavatars * countYavatars,\n                    colorpalettes: countXcolors * countYcolors,\n                };\n\n                // Calling the service through the Moodle AJAX API\n                let getAssets = Ajax.call([{\n                    methodname: 'mod_mmogame_get_assets',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAssets[0].done(function(response) {\n                    if (updateColors) {\n                        instance.gateShowColorPalettes(leftColors, topColors, gridWidthColors,\n                            gridHeightColors, countXcolors, countYcolors, response.colorpaletteids, response.colorpalettes);\n                    }\n                    if (updateAvatars) {\n                        instance.gateShowAvatars(leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars,\n                            response.avatarids, response.avatars);\n                    }\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateShowColorPalettes(left, top, width, height, countX, countY, colorpaletteids, colorpalettes) {\n            let i = 0; // Counter for color palettes\n            const count = colorpalettes.length;\n            this.canvasColor = undefined;\n            const canvasSize = this.iconSize - this.padding * 3 / 2;\n            const parsedPalettes = colorpalettes.map(palette =>\n                palette.split(\",\").map(value => parseInt(value, 10) || 0)\n            );\n            for (let iy = 0; iy < countY; iy++) {\n                for (let ix = 0; ix < countX; ix++) {\n                    // Check if we exceed available palettes or encounter invalid data\n                    if (i >= count || !parsedPalettes[i] || !colorpaletteids[i]) {\n                        i++; // Increment and continue if invalid\n                        continue;\n                    }\n\n                    // Create a new canvas element\n                    let canvas = document.createElement('canvas');\n                    canvas.style.position = \"absolute\";\n                    canvas.style.left = `${left + ix * this.iconSize}px`;\n                    canvas.style.top = `${top + iy * this.iconSize}px`;\n                    canvas.width = canvasSize;\n                    canvas.height = canvasSize;\n                    canvas.style.cursor = 'pointer';\n                    canvas.classList.add(\"mmogame_color\");\n\n                    // Append canvas to the area\n                    this.area.appendChild(canvas);\n\n                    // Render the color palette on the canvas\n                    this.showColorPalette(canvas, parsedPalettes[i]);\n\n                    // Get the palette ID and attach a click event listener\n                    let id = colorpaletteids[i];\n                    canvas.addEventListener(\"click\", () => {\n                        this.gateUpdateColorPalette(canvas, id);\n                    });\n\n                    i++;\n                }\n            }\n            this.area.classList.add(\"palette\");\n        }\n\n        gateUpdateColorPalette(canvas, id) {\n            if (this.canvasColor !== undefined) {\n                this.canvasColor.style.borderStyle = \"none\";\n            }\n            this.canvasColor = canvas;\n            canvas.style.borderStyle = \"outset\";\n            let w = Math.round(this.padding / 2) + \"px\";\n            canvas.style.borderLeftWidth = w;\n            canvas.style.borderTopWidth = w;\n            canvas.style.borderRightWidth = w;\n            canvas.style.borderBottomWidth = w;\n\n            this.paletteid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateAvatar(avatar, id, w) {\n            if (this.avatar !== undefined) {\n                this.avatar.style.borderStyle = \"none\";\n            }\n            this.avatar = avatar;\n            avatar.style.borderStyle = \"outset\";\n\n            avatar.style.borderLeftWidth = w;\n            avatar.style.borderTopWidth = w;\n            avatar.style.borderRightWidth = w;\n            avatar.style.borderBottomWidth = w;\n\n            this.avatarid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateSubmit() {\n            let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n            let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode\n                && this.edtNickname.value.length > 0;\n\n            this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n        }\n\n        gateComputeSizes() {\n            this.computeSizes();\n            this.iconSize = Math.round(0.8 * this.iconSize);\n            this.padding = Math.round(0.8 * this.padding);\n        }\n\n        getStringM(name) {\n            return M.util.get_string(name, 'mmogame');\n        }\n\n        gateCreateLabelEditHorizontal(left, top, width, fontSize, labelWidth, title) {\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n            let leftEdit = (left + labelWidth + this.padding);\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = (width - leftEdit - this.padding) + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return ret;\n        }\n\n        createDivMessageDo(left, top, width, height, message, heightmessage) {\n            if (this.divMessageBackground === undefined) {\n                let div = this.createDiv(this.body, left, top, width, height);\n                div.style.background = this.getColorHex(this.colorDefinition);\n                this.divMessageBackground = div;\n            }\n\n            if (this.divMessage === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"center\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.background = this.getColorHex(this.colorDefinition);\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                this.divMessage = div;\n            }\n            this.divMessage.innerHTML = message;\n            this.body.appendChild(this.divMessage);\n            this.autoResizeText(this.divMessage, width, heightmessage, false, this.minFontSize, this.maxFontSize, 0.5);\n        }\n\n        getOptions() {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4); // Άνοιγμα της βάσης δεδομένων\n\n                request.onupgradeneeded = function(event) {\n                    let db = event.target.result;\n                    // Δημιουργία του object store \"options\" αν δεν υπάρχει\n                    if (!db.objectStoreNames.contains(\"options\")) {\n                        db.createObjectStore(\"options\", {keyPath: \"name\"});\n                    }\n                };\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readonly\"); // Δημιουργία συναλλαγής ανάγνωσης\n                    let store = transaction.objectStore(\"options\");\n\n                    let getAllRequest = store.getAll(); // Διαβάζει όλες τις εγγραφές από το object store\n\n                    getAllRequest.onsuccess = function(event) {\n                        let records = event.target.result; // Όλες οι εγγραφές από το object store\n                        if (records.length > 0) {\n                            // Μετατροπή σε object με τα name ως κλειδιά\n                            let optionsObject = {};\n                            records.forEach(record => {\n                                optionsObject[record.name] = record.value;\n                            });\n                            resolve(optionsObject); // Επιστροφή του αντικειμένου\n                        } else {\n                            resolve({}); // Επιστροφή άδειου αντικειμένου αν δεν υπάρχουν εγγραφές\n                        }\n                    };\n\n                    getAllRequest.onerror = function() {\n                        reject(new Error(\"Failed to read options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    resolve({});\n                };\n            });\n        }\n\n        saveOptions(optionsObject) {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4);\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readwrite\"); // Δημιουργία συναλλαγής για εγγραφή\n                    let store = transaction.objectStore(\"options\");\n\n                    // Για κάθε ζεύγος name-value στο αντικείμενο, το αποθηκεύουμε στην IndexedDB\n                    for (let name in optionsObject) {\n                        if (optionsObject.hasOwnProperty(name)) {\n                            let value = optionsObject[name];\n                            store.put({name: name, value: value});\n                        }\n                    }\n\n                    // Επιτυχής ολοκλήρωση της συναλλαγής\n                    transaction.oncomplete = function() {\n                        resolve();\n                    };\n\n                    transaction.onerror = function() {\n                        reject(new Error(\"Failed to save options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    reject(new Error(\"Failed to open database\"));\n                };\n            });\n        }\n\n        showError(message) {\n            this.createDivMessage(message);\n        }\n\n        createArea() {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n        }\n\n        clearDB(url) {\n            let options = {nickname: ''};\n            this.saveOptions(options)\n                .then(function() {\n                    window.location.href = url;\n                    return true;\n                })\n                .catch(() => {\n                    return false;\n                });\n\n        }\n\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","size","parseFloat","window","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","this","firstChild","removeChild","lastChild","area","undefined","openGame","computeSizes","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","style","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","pad","length","uuid4","uuid","Array","floor","random","map","x","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","hexArray","unshift","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairP","createDivScore","lineHeight","textAlign","borderRadius","border","boxShadow","title","getStringM","colorScore","buttonScore2","colorScore2","labelScore","labelScore2","disabled","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","createDivScorePercent","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","localStorage","setItem","toString","createButtonHelp","buttonHelp","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","id","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","message","divMessageHelp","areaTop","createDivMessageDo","divMessage","createDivMessageStart","height1","showHelpScreen","divMessageBackground","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","setColorsString","split","setColors","computeDifClock","time","timeStart","timeClose","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","updateButtonsAvatar","avatar","lastIndexOf","pop","colorsBackground","buttonAvatarTop","gateOpen","mmogameid","pin","kinduser","user","url","gateComputeSizes","areaWidth","areaHeight","getOptions","then","options","hasOwnProperty","kindsound","avatarid","paletteid","gatePlayGame","userGUID","gateCreateScreen","catch","error","showError","save","callGetAttempt","firstcall","saveOptions","params","require","Ajax","params2","call","methodname","args","colorpaletteid","done","response","processGetAttempt","JSON","parse","fail","vertical","createArea","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateLabelEditVertical","edtCode","edt","gateUpdateSubmit","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatars","bottom2","btnSubmit","value","sName","sizeLabel","gateCreateLabelEditHorizontal","aLabel","labelWidth","align","leftEdit","type","autofocus","gateShowAvatars","countX","avatarids","avatars","count","leftOriginal","avatarImagePath","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","colorpalettes","gateShowColorPalettes","colorpaletteids","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","cursor","gateUpdateColorPalette","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string","heightmessage","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","createObjectStore","keyPath","onsuccess","getAllRequest","transaction","objectStore","getAll","records","optionsObject","forEach","record","onerror","Error","store","put","oncomplete","clearDB","location","href"],"mappings":"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"}