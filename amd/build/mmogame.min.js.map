{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n//import * as Str from '/core/str';\n\ndefine([''], function() {\n    return class mmoGame {\n    kindSound = 0;\n    state = 0;\n    body;\n    minFontSize;\n    maxFontSize;\n    fontSize;\n    avatarTop;\n    colorsBackground;\n    buttonAvatarTop;\n    buttonAvatarHeight;\n    colorScore;\n    colorScore2;\n    definition;\n    colorDefinition;\n    /**\n     * Basic class for games.\n     *\n     * @module mmogame\n     * @copyright 2024 Vasilis Daloukas\n     * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n     */\n    constructor() {\n        this.body = document.getElementsByTagName(\"body\")[0];\n        this.kindSound = window.localStorage.getItem('kindSound');\n        if (isNaN(this.kindSound)) {\n            this.kindSound = 0;\n        }\n        if (this.kindSound !== 0 && this.kindSound !== 1 && this.kindSound !== 2) {\n            this.kindSound = 0;\n        }\n\n        let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n        this.minFontSize = size;\n        this.maxFontSize = 2 * size;\n        this.fontSize = size;\n    }\n\n    hasHelp() {\n        return false;\n    }\n\n    removeBodyChilds() {\n        this.removeDivMessage();\n\n        while (this.body.firstChild) {\n            this.body.removeChild(this.body.lastChild);\n        }\n        this.area = undefined;\n    }\n\n    openGame(url, id, pin, auserid, kinduser, callOnAfterOpenGame) {\n        this.removeBodyChilds();\n        this.area = undefined;\n\n        this.game = [];\n\n        this.url = url;\n        this.mmogameid = id;\n        this.pin = pin;\n        this.kinduser = kinduser;\n        if (this.kinduser === undefined || this.kinduser === \"\") {\n            this.kinduser = \"usercode\";\n        }\n        this.auserid = auserid;\n        if (this.auserid === 0 && this.kinduser === 'guid') {\n            this.auserid = this.getUserGUID();\n        }\n\n        this.computeSizes();\n        if (!callOnAfterOpenGame) {\n            return;\n        }\n        if (this.kinduser === undefined) {\n            this.onAfterOpenGame();\n        } else {\n            this.onAfterOpenGame();\n        }\n    }\n\n    createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n        let button = document.createElement(\"img\");\n        if (alt !== undefined && alt !== '') {\n            button.alt = alt;\n        }\n\n        button.classList.add(\"mmogame_imgbutton\");\n        button.tabIndex = 0;\n        button.setAttribute(\"role\", \"button\");\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    createImage(parent, left, top, width, height, filename) {\n        let button = document.createElement(\"img\");\n\n        button.tabIndex = 0;\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    createCenterImageButton(parent, left, top, width, height, classname, filename) {\n        let button = document.createElement(\"img\");\n        button.classList.add(\"mmogame_imgbutton\");\n        button.style.position = \"absolute\";\n        button.draggable = false;\n\n        const img = new Image();\n        img.onload = function() {\n            if (this.width === 0 || this.height === 0) {\n                this.width = this.height = 1;\n            }\n\n            if (this.width > 0 && this.height > 0) {\n                let mul = Math.min(width / this.width, height / this.height);\n                let w = Math.round(this.width * mul);\n                let h = Math.round(this.height * mul);\n\n                button.style.width = w + \"px\";\n                button.style.height = h + \"px\";\n                button.style.left = (left + width / 2 - w / 2) + \"px\";\n                button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                button.src = filename;\n                button.innerHTML = filename;\n                button.style.fontSize = height + \"px\";\n            }\n        };\n        if (filename !== undefined && filename !== \"\") {\n            img.style.left = left + \"px\";\n            img.style.top = top + \"px\";\n            img.style.visibility = 'hidden';\n            img.src = filename;\n        }\n        button.tabIndex = 0;\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    updateImageButton(button, left, top, width, height, filename) {\n        button.src = filename;\n    }\n\n    createDiv(parent, left, top, width, height) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = width + \"px\";\n        div.style.height = height + \"px\";\n\n        parent.appendChild(div);\n\n        return div;\n    }\n\n    createDivColor(parent, left, top, width, height, color) {\n        let div = this.createDiv(parent, left, top, width, height);\n        div.style.background = this.getColorHex(color);\n\n        return div;\n    }\n\n    getMuteFile() {\n        if (this.kindSound === 0) {\n            return 'assets/sound-on-flat.png';\n        } else if (this.kindSound === 1) {\n            return 'assets/sound-off-flat.png';\n        } else if (this.kindSound === 2) {\n            return 'assets/speak.svg';\n        } else {\n            return 'assets/sound-on-flat.png';\n        }\n    }\n\n    playAudio(audio) {\n        if (this.kindSound !== 0 && audio !== null) {\n            if (audio.networkState === 1) {\n                audio.play();\n            }\n        }\n    }\n\n    autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n        let minHeight = 0.9 * height;\n        let low = Math.max(1, minFontSize);\n        width = Math.round(width);\n        height = Math.round(height);\n        let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n        let fitSize = low;\n        let fitHeight = 0;\n        let newHeight = 0;\n        let newWidth = 0;\n\n        for (let i = 0; i <= 10; i++) {\n            let el = document.createElement(\"div\");\n            el.style.left = 0;\n            el.style.top = 0;\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"visible\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n\n            let fontSize = (low + up) / 2;\n\n            el.style.fontSize = fontSize + \"px\";\n            newHeight = el.scrollHeight;\n            newWidth = el.scrollWidth - 1;\n\n            this.body.removeChild(el);\n\n            if (newWidth > width || newHeight > height) {\n                up = fontSize;\n            } else {\n                low = fontSize;\n                if (Math.abs(fitHeight - newHeight) <= 2) {\n                    break;\n                }\n                fitHeight = newHeight;\n                fitSize = fontSize;\n                if (newHeight > minHeight) {\n                    break;\n                }\n            }\n        }\n        item.style.fontSize = fitSize + \"px\";\n\n        if (newWidth > width || newHeight > height) {\n            this.autoResizeTextBr(item);\n            newWidth = item.scrollWidth;\n            newHeight = item.scrollHeight;\n            this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                minRatio);\n        } else {\n            return [item.scrollWidth - 1, item.scrollHeight];\n        }\n\n        let el = document.createElement(\"div\");\n        el.style.width = width + \"px\";\n        el.style.height = 0;\n        el.visibility = \"hidden\";\n        if (!wrap) {\n            el.style.whiteSpace = \"nowrap\";\n        }\n        el.innerHTML = item.innerHTML;\n        this.body.appendChild(el);\n        el.style.fontSize = item.style.fontSize;\n        let size = [el.scrollWidth - 1, el.scrollHeight];\n        this.body.removeChild(el);\n\n        return size;\n    }\n\n    autoResizeTextBr(item) {\n        let s = item.innerHTML;\n        let change = false;\n        while (s.startsWith('<br>')) {\n            s = s.substring(4);\n            change = true;\n        }\n        let pos1 = s.indexOf('<br>');\n        for (; ;) {\n            let pos = s.indexOf('<br>', pos1 + 4);\n            if (pos < 0) {\n                break;\n            }\n            let s2 = s.substring(pos1 + 4, pos);\n            if (!s2.trim()) {\n                s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                change = true;\n                pos = pos1;\n            }\n            pos1 = pos;\n        }\n\n        if (change) {\n            item.innerHTML = s;\n        }\n    }\n\n    autoResizeTextImage(item, subwidth, subheight, minRatio) {\n        if (subwidth === 0 && subheight === 0) {\n            return;\n        }\n        let s = item.innerHTML;\n\n        for (let pos = 0; ;) {\n            let pos2 = s.indexOf(\"<img \", pos);\n            if (pos2 < 0) {\n                break;\n            }\n            let pos3 = s.indexOf(\">\", pos2);\n            if (pos3 < 0) {\n                break;\n            }\n            let s2 = s.substring(pos2, pos3) + \" \";\n\n            let width = 0;\n            let height = 0;\n            let posw = s2.indexOf(\"width=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                    width = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n\n            posw = s2.indexOf(\"height=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                    height = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n            if (width > 0 && height > 0) {\n                let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n            }\n            s = s.slice(0, pos2) + s2 + s.slice(pos3);\n            pos = pos3;\n        }\n        item.innerHTML = s;\n    }\n\n    getUserGUID() {\n        let guid = window.localStorage.getItem('UserGUID');\n        if (guid === null || guid === '') {\n            guid = this.uuid4();\n            window.localStorage.setItem(\"UserGUID\", guid);\n        }\n\n        return guid;\n    }\n\n    pad(num, size) {\n        let s = num + \"\";\n        while (s.length < size) {\n            s = \"0\" + s;\n        }\n        return s;\n    }\n\n    uuid4() {\n        const uuid = new Array(36);\n\n        for (let i = 0; i < 36; i++) {\n            uuid[i] = Math.floor(Math.random() * 16);\n        }\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n\n        return uuid.map((x) => x.toString(16)).join('');\n    }\n\n    computeSizes() {\n        if (this.cIcons < 5 || this.cIcons === undefined) {\n            this.cIcons = 5;\n        }\n        this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n        this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n        this.padding = Math.round(this.iconSize / 10);\n        this.iconSize -= this.padding;\n    }\n\n    getIconSize() {\n        return this.iconSize;\n    }\n\n    getCopyrightHeight() {\n        return Math.round(this.getIconSize() / 3);\n    }\n\n    getPadding() {\n        return this.padding;\n    }\n\n    getColorHex(x) {\n        return '#' + ('0000' + x.toString(16).toUpperCase()).slice(-6);\n    }\n\n    getContrast(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256; // Blue.\n\n        return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    }\n\n    getColorGray(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256, // Blue.\n            yiq = (r * 299) + g * 587 + b * 114,\n            m = 255 * 299 + 255 * 587 + 255 * 114,\n            gray = Math.round(yiq * 255 / m);\n\n        return (gray * 0x10000) + (gray * 0x100) + gray;\n    }\n\n    getColorContrast(x) {\n        return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n    }\n\n    repairColors(colors) {\n\n        this.colors = colors;\n        let instance = this;\n        this.colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n\n        this.colorBackground = this.colors[0];\n        this.body.style.background = this.getColorHex(this.colorBackground);\n\n        return this.colors;\n    }\n    repairHTML(s, mapFiles, mapFilesWidth, mapFilesHeight) {\n        if (s === undefined) {\n            return '';\n        }\n        while (s.slice(0, 4) === '<br>') {\n            s = s.slice(4).trim();\n        }\n        for (; ;) {\n            let pos = s.indexOf(\"@@GUID@@\");\n            if (pos < 0) {\n                break;\n            }\n            let pos2 = s.indexOf(\"\\\"\", pos);\n            if (pos2 > 0) {\n                let s2 = s.slice(pos2 + 1);\n                let posw = s2.indexOf(\"width=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n                posw = s2.indexOf(\"height=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n\n                let key = s.substring(pos + 8, pos2);\n                s2 = \" width=\\\"\" + mapFilesWidth.get(key) + \"\\\" \" + s2;\n                s2 = \" height=\\\"\" + mapFilesHeight.get(key) + \"\\\" \" + s2;\n\n                s = s.substring(0, pos) + \"data:image/png;base64, \" + mapFiles.get(key) + \"\\\"\" + s2;\n            }\n        }\n\n        return s;\n    }\n\n    repairP(s) {\n        if (s === undefined) {\n            return \"\";\n        }\n\n        // Remove <p> tags and replace </p> with <br />\n        let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n        // Remove <br> or <br/> at the end of the string\n        s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n        // Remove the <ol><br></ol> sequence if it exists\n        let pos = s2.indexOf('<ol><br></ol>');\n        if (pos >= 0) {\n            s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n        }\n\n        return s2;\n    }\n\n    createDivScorePercent(left, top, num) {\n        let button = document.createElement(\"button\");\n        button.style.position = \"absolute\";\n        button.classList.add(\"mmogame_button\");\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.style.width = this.iconSize + \"px\";\n        button.style.height = this.iconSize + \"px\";\n        button.style.lineHeight = this.iconSize + \"px\";\n        button.style.textAlign = \"center\";\n        button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n        button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n        if (num === 1) {\n            button.style.background = this.getColorHex(this.colorScore);\n            button.style.color = this.getColorContrast(this.colorScore);\n            button.title = this.getLangM('grade');\n        } else {\n            button.style.background = this.getColorHex(this.colorScore2);\n            button.style.color = this.getColorContrast(this.colorScore2);\n        }\n\n        this.body.appendChild(button);\n\n        button.innerHTML = '';\n        button.disabled = true;\n\n        let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n        div.style.lineHeight = (this.iconSize / 2) + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        if (num === 1) {\n            this.labelScore = div;\n            div.title = '[LANGM_GRADE]';\n        } else {\n            this.labelScore2 = div;\n            div.title = \"[LANGM_GRADE_OPONENT]\";\n        }\n\n        let h = this.iconSize / 3;\n        div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = '[LANGM_RANKING_GRADE]';\n        if (num === 1) {\n            this.labelScoreRank = div;\n        } else {\n            this.labelScoreRank2 = div;\n        }\n\n        div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = '[LANGM_GRADE_LAST_QUESTION]';\n        button.disabled = true;\n        if (num === 1) {\n            this.labelAddScore = div;\n        } else {\n            this.labelAddScore2 = div;\n        }\n\n        let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n        div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = h + \"px\";\n        div.style.lineHeight = h + \"px\";\n        div.style.color = label.style.color;\n        div.title = '[LANGM_RANKING_PERCENT].';\n        if (num === 1) {\n            this.labelScoreRankB = div;\n        }\n\n        label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n        div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n            this.iconSize / 2);\n        div.style.textAlign = \"center\";\n        div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = label.style.fontSize;\n        div.style.fontWeight = 'bold';\n        div.style.color = label.style.color;\n        div.title = '[LANGM_PERCENT]';\n        this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n        if (num === 1) {\n            this.labelScoreB = div;\n        }\n    }\n\n    createDivTimer(left, top, sizeIcon) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = sizeIcon + \"px\";\n        div.style.height = sizeIcon + \"px\";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.lineHeight = sizeIcon + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n        div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n        div.name = \"timer\";\n        this.body.appendChild(div);\n        this.labelTimer = div;\n\n        div.innerHTML = '23:59';\n        this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n        div.innerHTML = '';\n        div.title = this.getStringM('question_time');\n    }\n\n    createButtonSound(left, top) {\n        this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n            this.getMuteFile());\n        this.buttonSound.alt = this.getStringM('sound');\n        let instance = this;\n        this.buttonSound.addEventListener(\"click\", function() {\n            instance.onClickSound(instance.buttonSound);\n        });\n\n        this.buttonSound.title = this.getStringM('sound');\n    }\n\n    onClickSound(btn) {\n        window.title = btn.src;\n        this.kindSound = (this.kindSound + 1) % 2;\n        window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n        btn.src = this.getMuteFile();\n    }\n\n    createButtonHelp(left, top) {\n        this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n        this.buttonHelp.alt = this.getStringM('help');\n    }\n\n    readJsonFiles(json) {\n        this.mapFiles = new Map();\n        this.mapFilesWidth = new Map();\n        this.mapFilesHeight = new Map();\n        this.mapFiles.set(json.fileg1, json.filec1);\n        this.mapFilesWidth.set(json.fileg1, json.width1);\n        this.mapFilesHeight.set(json.fileg1, json.height1);\n    }\n\n    findbest(low, up, fn) {\n        if (low < 1) {\n            low = 1;\n        }\n\n        let prevSize;\n        let fitSize = low;\n        let testSize;\n        for (let i = 0; i <= 10; i++) {\n            prevSize = low;\n            testSize = (low + up) / 2;\n\n            let cmp = fn(testSize);\n            if (cmp <= 0) {\n                fitSize = testSize;\n                low = testSize;\n            } else {\n                up = testSize;\n            }\n            if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                break;\n            }\n        }\n\n        return fitSize;\n    }\n\n    createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n        width -= 2 * this.padding;\n        let div = document.createElement(\"div\");\n\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n\n        div.style.fontSize = fontSize + \"px\";\n        div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n        div.style.textAlign = \"left\";\n\n        if (onlyMetrics) {\n            this.body.appendChild(div);\n            let ret = [div.scrollWidth - 1, div.scrollHeight];\n            this.body.removeChild(div);\n            return ret;\n        }\n\n        div.style.background = this.getColorHex(this.colorDefinition);\n        div.style.color = this.getColorContrast(this.colorDefinition);\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.paddingLeft = this.padding + \"px\";\n        div.style.paddingRight = this.padding + \"px\";\n        div.id = \"definition\";\n\n        this.area.appendChild(div);\n        let height = div.scrollHeight + this.padding;\n        div.style.height = height + \"px\";\n\n        this.definitionHeight = height;\n        this.divDefinition = div;\n\n        return [div.scrollWidth - 1, div.scrollHeight];\n    }\n\n    updateLabelTimer() {\n        if (this.labelTimer === undefined) {\n            return;\n        }\n        if (this.timeclose === 0 || this.timestart === 0) {\n            this.labelTimer.innerHTML = '';\n            return;\n        }\n\n        let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n        if (dif <= 0) {\n            dif = 0;\n            this.sendTimeout();\n        }\n        this.labelTimer.innerHTML = (dif < 0 ? \"-\" : \"\") + Math.floor(dif / 60.0) + \":\" + (\"0\" + (dif % 60)).substr(-2);\n\n        if (dif === 0) {\n            return;\n        }\n\n        let instance = this;\n        setTimeout(function() {\n            instance.updateLabelTimer();\n        }, 500);\n    }\n\n    createDivMessage(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        if (this.divMessageBackground === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n            this.body.appendChild(this.divMessageBackground);\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n        this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n\n        this.autoResizeText(this.divMessage, width, height, false, this.minFontSize, this.maxFontSize, 0.5);\n    }\n\n    createDivMessageStart(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        let height1 = height / 8;\n\n        if (this.divMessageBackground === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n            this.body.appendChild(this.divMessageBackground);\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n\n        this.autoResizeText(this.divMessage, width, height1, false, this.minFontSize, this.maxFontSize, 0.5);\n        top += (height1 - this.divMessage.scrollHeight) / 2;\n        this.divMessage.style.top = top + \"px\";\n\n        if (this.divMessageHelp === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"left\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            let top = this.iconSize + 3 * this.padding + height1;\n            div.style.top = (top + this.padding) + \"px\";\n            div.style.height = (height - height1) + \"px\";\n            this.divMessageHelp = div;\n            this.body.appendChild(this.divMessageHelp);\n\n            this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n        }\n    }\n\n    removeDivMessage() {\n        if (this.divMessage !== undefined) {\n            this.body.removeChild(this.divMessage);\n            this.divMessage = undefined;\n        }\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n        if (this.divMessageBackground !== undefined) {\n            this.divMessageBackground.remove();\n            this.divMessageBackground = undefined;\n        }\n    }\n\n    disableButtons(buttons, disabled) {\n        for (let i = 0; i < buttons.length; i++) {\n            let btn = buttons[i];\n            if (btn !== undefined) {\n                if (disabled) {\n                    btn.classList.add(\"mmogame_imgbutton_disabled\");\n                } else {\n                    btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                }\n            }\n        }\n    }\n\n    repairNickname(nickname) {\n        if (nickname === undefined) {\n            return '';\n        }\n\n        let s = nickname;\n        if (s !== '') {\n            while (s.indexOf('_') !== -1) {\n                s = s.replace('_', ' ');\n            }\n        }\n\n        return s;\n    }\n\n    showScore(json) {\n        let s = json.sumscore === undefined ? '' : '<b>' + json.sumscore + '</b>';\n        if (this.labelScore.innerHTML !== s) {\n            this.labelScore.innerHTML = s;\n            let w = this.iconSize - 2 * this.padding;\n            this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRank.innerHTML !== json.rank) {\n            this.labelScoreRank.innerHTML = json.rank !== undefined ? json.rank : '';\n            this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        if (json.name !== undefined) {\n            window.document.title = (json.usercode !== undefined ? json.usercode : \"\") + \" \" + json.name;\n        }\n\n        s = json.addscore === undefined ? '' : json.addscore;\n        if (this.labelAddScore.innerHTML !== s) {\n            this.labelAddScore.innerHTML = s;\n            this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRankB.innerHTML !== json.completedrank) {\n            this.labelScoreRankB.innerHTML = json.completedrank !== undefined ? json.completedrank : '';\n            this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        s = json.percentcompleted !== undefined ? Math.round(100 * json.percentcompleted) + '%' : '';\n        if (this.labelScoreB.innerHTML !== s) {\n            this.labelScoreB.innerHTML = s;\n            this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n    }\n\n    createDivName(left, top, labelWidth, inpWidth, label, value) {\n        let div = this.createDiv(this.area, left, top, labelWidth, this.iconSize);\n        div.innerHTML = label + \": \";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.textAlign = \"right\";\n        div.style.color = this.getColorContrast(this.colorBackground);\n        this.autoResizeText(div, labelWidth, this.areaHeight, false, this.minFontSize, this.maxFontSize, 1);\n\n        let divInp = document.createElement(\"input\");\n        divInp.style.position = \"absolute\";\n        divInp.style.width = inpWidth + \"px\";\n        divInp.style.type = \"text\";\n        divInp.style.fontSize = div.style.fontSize;\n        divInp.value = value;\n        divInp.style.left = (left + labelWidth + this.padding) + \"px\";\n        divInp.style.top = top + \"px\";\n        divInp.autofocus = true;\n        divInp.style.background = this.getColorHex(this.colorBackground);\n        divInp.style.color = this.getColorContrast(this.colorBackground);\n        this.area.appendChild(divInp);\n        divInp.autofocus = true;\n        let instance = this;\n        divInp.addEventListener(\"keydown\", function() {\n            if (event.key === \"Enter\") {\n                instance.sendSetAvatar(divInp.value, -1);\n            }\n        });\n\n        return divInp;\n    }\n\n    createCheckbox(parent, left, top, width, height, value) {\n        let checkbox = document.createElement('input');\n        checkbox.type = \"checkbox\";\n        checkbox.value = value;\n        checkbox.style.position = \"absolute\";\n        checkbox.style.left = left + \"px\";\n        checkbox.style.top = top + \"px\";\n        checkbox.style.width = width + \"px\";\n        checkbox.style.height = height + \"px\";\n\n        parent.appendChild(checkbox);\n\n        return checkbox;\n    }\n\n    showColorPalette(canvas, colors) {\n        let ctx = canvas.getContext(\"2d\");\n        let width = canvas.width;\n        let height = canvas.height;\n        let strip = width / 5;\n        let instance = this;\n\n        colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n        for (let i = 0; i < 5; i++) {\n            ctx.fillStyle = this.getColorHex(colors[i]);\n            ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n        }\n\n        ctx.strokeStyle = \"#FFFFFF\";\n        ctx.lineWidth = 1;\n        ctx.strokeRect(0, 0, width, height);\n    }\n\n    sendSetAvatar(nickname, avatarid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                let json = JSON.parse(this.responseText);\n                instance.updateButtonsAvatar(1, json.avatar);\n                instance.sendGetAttempt();\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setavatar\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, 'avatarid': avatarid, 'nickname': nickname\n        });\n        xmlhttp.send(data);\n    }\n\n    sendSetColorPalette(colorpaletteid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.colors = undefined;\n                instance.openGame(instance.url, instance.mmogameid, instance.pin, instance.auserid, instance.kinduser);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setcolorpalette\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, \"id\": colorpaletteid\n        });\n        xmlhttp.send(data);\n    }\n\n    computeDifClock(json) {\n        if (json.time !== undefined) {\n            this.difClock = ((new Date()).getTime() - json.time) / 1000;\n        }\n\n        this.computeTimeStartClose(json);\n    }\n\n    computeTimeStartClose(json) {\n        if (json.timestart !== undefined) {\n            this.timestart = parseInt(json.timestart) !== 0 ? parseInt(json.timestart) + this.difClock : 0;\n            this.timeclose = parseInt(json.timeclose) !== 0 ? parseInt(json.timeclose) + this.difClock : 0;\n        } else {\n            this.timestart = 0;\n            this.timeclose = 0;\n        }\n    }\n\n    drawRadio(canvas, color1, color2) {\n        let ctx = canvas.getContext(\"2d\");\n        let size = canvas.width;\n        ctx.clearRect(0, 0, size, canvas.height);\n\n        ctx.beginPath();\n        ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.getColorHex(color1);\n        ctx.fill();\n\n        let checked = canvas.classList.contains(\"checked\");\n        if (checked) {\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color2);\n            ctx.fill();\n        }\n    }\n\n    createRadiobox(parent, size, color1, color2, checked, disabled) {\n        let canvas = document.createElement('canvas');\n        canvas.style.position = \"absolute\";\n        canvas.width = size;\n        canvas.height = size;\n        parent.appendChild(canvas);\n        if (checked) {\n            canvas.classList.add(\"checked\");\n        }\n        if (disabled) {\n            canvas.classList.add(\"disabled\");\n        }\n\n        this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n        return canvas;\n    }\n\n    createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n        if (widthNickName === 0) {\n            widthNickName = this.iconSize;\n        }\n        if (heightNickName === 0) {\n            heightNickName = this.iconSize - this.buttonAvatarHeight;\n        }\n        if (this.buttonsAvatarLeft === undefined) {\n            this.buttonsAvatarLeft = [];\n        }\n        this.buttonsAvatarLeft[num] = left;\n\n        if (this.buttonsAvatarSrc === undefined) {\n            this.buttonsAvatarSrc = [];\n        }\n        this.buttonsAvatarSrc[num] = \"\";\n\n        if (this.nicknames === undefined) {\n            this.nicknames = [];\n        }\n        this.nicknames[num] = \"\";\n\n        if (this.buttonsAvatar === undefined) {\n            this.buttonsAvatar = [];\n        }\n        this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n        if (num === 2 && this.avatarTop !== undefined) {\n            this.buttonsAvatar[num].title = this.getStringM('opponent');\n        }\n\n        if (this.divNicknames === undefined) {\n            this.divNicknames = [];\n        }\n        if (this.divNicknamesWidth === undefined) {\n            this.divNicknamesWidth = [];\n        }\n        if (this.divNicknamesHeight === undefined) {\n            this.divNicknamesHeight = [];\n        }\n        this.divNicknamesWidth[num] = widthNickName;\n        this.divNicknamesHeight[num] = heightNickName;\n\n        this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n    }\n\n    updateButtonsAvatar(num, avatar, nickname) {\n        if (avatar === undefined) {\n            avatar = \"\";\n        }\n        if (nickname === undefined) {\n            nickname = \"\";\n        }\n\n        if (avatar === \"\" && nickname === \"\") {\n            this.buttonsAvatar[num].style.visibility = 'hidden';\n            this.divNicknames[num].style.visibility = 'hidden';\n            return;\n        }\n\n        if (this.nicknames[num] !== nickname || nickname === \"\") {\n            this.nicknames[num] = nickname;\n            let s = nickname;\n\n            if (nickname.length === 0) {\n                s = avatar;\n                let pos = s.lastIndexOf(\"/\");\n                if (pos >= 0) {\n                    s = s.substr(pos + 1);\n                }\n                pos = s.lastIndexOf(\".\");\n                if (pos >= 0) {\n                    s = s.slice(0, pos);\n                }\n            }\n            s = this.repairNickname(s);\n            if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                this.divNicknames[num].innerHTML = s;\n                this.divNicknames[num].style.textAlign = \"center\";\n                this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                    0, 0, 1);\n            }\n        }\n\n        if (avatar !== this.buttonsAvatarSrc[num]) {\n            this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n            this.buttonsAvatarSrc[num] = avatar;\n        }\n\n        this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n        this.buttonsAvatar[num].style.visibility = 'visible';\n        this.divNicknames[num].style.visibility = 'visible';\n    }\n\n    // Gate\n    gateOpen(mmogameid, pin, auserid, kinduser) {\n        this.minFontSize *= 2;\n        this.maxFontSize *= 2;\n\n        //this.url = url;\n        this.mmogameid = mmogameid;\n        this.pin = pin;\n        this.auserid = auserid;\n        this.kinduser = kinduser;\n        this.gateComputeSizes();\n        this.areaTop = this.padding;\n\n        this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n        this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n        switch (kinduser) {\n            case 'moodle':\n                if (localStorage.getItem(\"nickname\") !== null && localStorage.getItem(\"avatarid\") !== null\n                    && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlaygame(auserid, localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n            case 'guid':\n                if (localStorage.getItem(\"auserid\") !== null && localStorage.getItem(\"nickname\") !== null\n                    && localStorage.getItem(\"avatarid\") !== null && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlaygame(localStorage.getItem(\"auserid\"), localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n        }\n\n        this.gateCreateScreen();\n    }\n\n    gatePlaygame(auserid, nickname, paletteid, avatarid) {\n        if (auserid === 0 && this.kinduser === 'guid') {\n            auserid = this.getUserGUID();\n        }\n        localStorage.setItem(\"auserid\", auserid);\n        localStorage.setItem(\"nickname\", nickname);\n        localStorage.setItem(\"paletteid\", paletteid);\n        localStorage.setItem(\"avatarid\", avatarid);\n\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.gateOnServerGetAttempt(JSON.parse(this.responseText), auserid);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let d = {\n            \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n            \"user\": auserid, \"nickname\": nickname, \"paletteid\": paletteid, \"avatarid\": avatarid\n        };\n        if (this.helpurl === undefined) {\n            d.helpurl = 1;\n        }\n        let data = JSON.stringify(d);\n        xmlhttp.send(data);\n    }\n\n    gateOnServerGetAttempt(json, auserid) {\n        if (json.errorcode !== undefined) {\n            return;\n        }\n\n        this.openGame(this.url, this.mmogameid, this.pin, auserid, this.kinduser, false);\n        this.onServerGetAttempt(json);\n    }\n\n    gateCreateScreen() {\n        this.vertical = window.innerWidth < window.innerHeight;\n\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n        this.removeDivMessage();\n\n        this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n        if (this.vertical) {\n            this.gateCreateScreenVertical();\n        } else {\n            this.gateCreateScreenHorizontal();\n        }\n    }\n\n    gateCreateScreenVertical() {\n        let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, ['[LANGM_CODE]: ', '[LANGM_NAME]: ', '[LANGM_PALETTE]']);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n        bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n            this.getStringM('name') + \": \") + 2 * this.padding;\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = \"[LANGM_PALETTE]\";\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = \"[LANGM_AVATARS]\";\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Vertical\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\", function() {\n            instance.gatePlaygame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                instance.edtNickname.value, instance.paletteid, instance.avatarid);\n        });\n    }\n\n    gateCreateScreenHorizontal() {\n        let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, ['[LANGM_CODE]: ', '[LANGM_NAME]: ', '[LANGM_PALETTE]']);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n        let sizeLabel = this.gateComputeLabelSize(this.fontSize, ['[LANGM_NAME]: ']);\n        bottom = this.gateCreateLabelEdit(0, bottom, newWidth - 2 * this.padding, this.fontSize, sizeLabel[0], \"[LANGM_NAME]: \");\n\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = \"[LANGM_PALETTE]\";\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = \"[LANGM_AVATARS]\";\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        // Avatar\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Horizontal\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\",\n            function() {\n                instance.gatePlaygame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n    }\n\n    gateComputeLabelSize(fontSize, aLabel) {\n        let maxWidth = 0;\n        let maxHeight = 0;\n\n        for (let i = 0; i < aLabel.length; i++) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = aLabel[i];\n            label.style.whiteSpace = \"nowrap\";\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n            label.style.width = \"0px\";\n            label.style.height = \"0px\";\n            this.area.appendChild(label);\n\n            if (label.scrollWidth > maxWidth) {\n                maxWidth = label.scrollWidth;\n            }\n\n            if (label.scrollHeight > maxHeight) {\n                maxHeight = label.scrollHeight;\n            }\n            this.area.removeChild(label);\n        }\n\n        return [maxWidth, maxHeight];\n    }\n\n    gateCreateLabelEdit(left, top, width, fontSize, labelWidth, title) {\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n        let leftEdit = (left + labelWidth + this.padding);\n        const div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = (width - leftEdit - this.padding) + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return ret;\n    }\n\n    gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n        const label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        top += label.scrollHeight;\n\n        let leftEdit = left + 'px';\n        let div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return top + fontSize + this.padding;\n    }\n\n    gateCreateCode(left, top, width, fontSize, labelWidth) {\n        return this.gateCreateLabelEdit(left, top, width, fontSize, labelWidth, \"[LANGM_CODE]: \");\n    }\n\n    gateShowAvatars(json, left, top, width, height, countX) {\n        this.avatar = undefined;\n        let leftOriginal = left;\n        let instance = this;\n        let w = Math.round(this.padding / 2) + \"px\";\n        for (let i = 0; i < json.countavatars; i++) {\n            let btn = this.createCenterImageButton(this.area, left, top, this.iconSize - this.padding,\n                this.iconSize - this.padding, \"\", 'assets/avatars/' + json['avatar' + (i + 1)]);\n            btn.classList.add(\"mmogame_avatar\");\n            let id = json['avatarid' + (i + 1)];\n            btn.addEventListener(\"click\",\n                function() {\n                    instance.gateUpdateAvatar(btn, id, w);\n                }\n            );\n\n            left += this.iconSize;\n\n            if ((i + 1) % countX === 0) {\n                top += this.iconSize;\n                left = leftOriginal;\n            }\n        }\n    }\n\n    gateSendGetColorsAvatarsVertical(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                     gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n        let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n        let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n        let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n        let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n        if (!updateColors) {\n            countXcolors = countXcolors = 0;\n        }\n        if (!updateAvatars) {\n            countXavatars = countYavatars = 0;\n        }\n        alert(\"service\");\n        let instance = this;\n        require(['core/ajax'], function(Ajax) {\n            // Defining the parameters to be passed to the service\n            let params = {\n                mmogameid: instance.mmogameid,\n                kinduser: instance.kinduser,\n                user: instance.auserid,\n                avatars: countXavatars * countYavatars,\n                colorpalettes: countXcolors * countYcolors,\n            };\n\n            // Calling the service through the Moodle AJAX API\n            let getAssets = Ajax.call([{\n                methodname: 'mod_mmogame_get_assets',\n                args: params\n            }]);\n\n            // Handling the response\n            getAssets[0].done(function(response) {\n\n                 return JSON.parse(response);\n                 //console.log(response);\n            }).fail(function(error) {\n                return error;\n            });\n        });\n    }\n\n    gateShowColorPalettes(json, left, top, width, height, countX, countY) {\n        let instance = this;\n        let i = 0;\n        this.canvasColor = undefined;\n        for (let iy = 0; iy < countY; iy++) {\n            for (let ix = 0; ix < countX; ix++) {\n                i++;\n                if (i > json.count) {\n                    break;\n                }\n                let a = json[\"palette\" + i];\n                if (a === undefined) {\n                    break;\n                }\n                let canvas = document.createElement('canvas');\n                canvas.style.position = \"absolute\";\n                canvas.style.left = (left + (ix % countX) * this.iconSize) + \"px\";\n                canvas.style.top = (top + iy * this.iconSize) + \"px\";\n                canvas.width = this.iconSize - this.padding * 3 / 2;\n                canvas.height = this.iconSize - this.padding * 3 / 2;\n                canvas.style.cursor = 'pointer';\n                canvas.classList.add(\"mmogame_color\");\n                this.area.appendChild(canvas);\n                for (let j = 0; j < a.length; j++) {\n                    a[j] = parseInt(a[j]);\n                }\n                this.showColorPalette(canvas, a);\n                let id = json['paletteid' + i];\n\n                canvas.addEventListener(\"click\", function() {\n                    instance.gateUpdateColorPalete(canvas, id);\n                });\n            }\n        }\n        this.area.classList.add(\"palete\");\n    }\n\n    gateUpdateColorPalete(canvas, id) {\n        if (this.canvasColor !== undefined) {\n            this.canvasColor.style.borderStyle = \"none\";\n        }\n        this.canvasColor = canvas;\n        canvas.style.borderStyle = \"outset\";\n        let w = Math.round(this.padding / 2) + \"px\";\n        canvas.style.borderLeftWidth = w;\n        canvas.style.borderTopWidth = w;\n        canvas.style.borderRightWidth = w;\n        canvas.style.borderBottomWidth = w;\n\n        this.paletteid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateAvatar(avatar, id, w) {\n        if (this.avatar !== undefined) {\n            this.avatar.style.borderStyle = \"none\";\n        }\n        this.avatar = avatar;\n        avatar.style.borderStyle = \"outset\";\n\n        avatar.style.borderLeftWidth = w;\n        avatar.style.borderTopWidth = w;\n        avatar.style.borderRightWidth = w;\n        avatar.style.borderBottomWidth = w;\n\n        this.avatarid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateSubmit() {\n        let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n        let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode && this.edtNickname.value.length > 0;\n\n        this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n    }\n\n    gateComputeSizes() {\n        this.computeSizes();\n        this.iconSize = Math.round(0.8 * this.iconSize);\n        this.padding = Math.round(0.8 * this.padding);\n    }\n\n        getStringM( name) {\n            //return Str( name, 'mmogame');\n            return M.util.get_string(name, 'mmogame');\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","window","localStorage","getItem","isNaN","this","size","parseFloat","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","firstChild","removeChild","lastChild","area","undefined","openGame","url","id","pin","auserid","kinduser","callOnAfterOpenGame","game","mmogameid","getUserGUID","computeSizes","onAfterOpenGame","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createElement","classList","add","tabIndex","setAttribute","style","position","draggable","src","appendChild","createImage","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","guid","uuid4","setItem","pad","length","uuid","Array","floor","random","map","x","toString","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","toUpperCase","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairHTML","mapFiles","mapFilesWidth","mapFilesHeight","key","get","repairP","createDivScorePercent","lineHeight","textAlign","border","boxShadow","colorScore","title","getLangM","colorScore2","disabled","labelScore","labelScore2","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","getStringM","createButtonSound","buttonSound","addEventListener","onClickSound","btn","createButtonHelp","buttonHelp","readJsonFiles","json","Map","set","fileg1","filec1","width1","height1","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","substr","setTimeout","createDivMessage","message","divMessageHelp","areaTop","divMessageBackground","divMessage","createDivMessageStart","showHelpScreen","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","createDivName","labelWidth","inpWidth","value","areaHeight","divInp","type","autofocus","event","sendSetAvatar","createCheckbox","checkbox","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","avatarid","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","updateButtonsAvatar","avatar","sendGetAttempt","open","setRequestHeader","data","stringify","send","sendSetColorPalette","colorpaletteid","computeDifClock","time","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","lastIndexOf","colorsBackground","buttonAvatarTop","gateOpen","gateComputeSizes","areaWidth","paletteid","gatePlaygame","gateCreateScreen","gateOnServerGetAttempt","d","helpurl","errorcode","onServerGetAttempt","vertical","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateCode","edtCode","edt","gateUpdateSubmit","gateCreateLabelEditVertical","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatarsVertical","bottom2","btnSubmit","sizeLabel","gateCreateLabelEdit","aLabel","align","leftEdit","divShortAnswer","gateShowAvatars","countX","leftOriginal","countavatars","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","alert","require","Ajax","params","user","avatars","colorpalettes","call","methodname","args","done","response","fail","error","gateShowColorPalettes","countY","canvasColor","iy","ix","count","cursor","j","gateUpdateColorPalete","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string"],"mappings":"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"}