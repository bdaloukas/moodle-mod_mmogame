{"version":3,"file":"mmogametypequiz.min.js","sources":["../src/mmogametypequiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mod_mmogame/mmogameui'], function(MmoGameUI) {\n    return class MmoGameTypeQuiz extends MmoGameUI {\n        mmogameid;\n        kinduser;\n        user;\n        url;\n        pin;\n        labelTimer;\n        timeForSendAnswer;\n        divDefinition;\n        definitionHeight;\n\n        /**\n         * Base class for Quiz mmmogame\n         *\n         * @module mmogametype_quiz\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n\n        constructor() {\n            super();\n            this.hideSubmit = false;\n            this.timeForSendAnswer = 10000;\n        }\n\n        setColors(colors) {\n            this.repairColors(colors);\n\n            this.colorDefinition = this.colors[1];\n            this.colorScore = this.colors[2];\n            this.colorCopyright = this.colors[3];\n            this.colorScore2 = this.colors[4];\n        }\n\n        openGame() {\n            super.openGame();\n\n            this.audioYes = new Audio('assets/yes1.mp3');\n            this.audioYes.load();\n            this.audioNo = new Audio('assets/no1.mp3');\n            this.audioNo.load();\n        }\n\n        processGetAttempt(json) {\n            this.computeDifClock(json.time, json.timestart, json.timeclose);\n\n            if (json.colors !== undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            if (name !== undefined) {\n                window.document.title = name;\n            }\n\n            if (json.helpurl !== undefined) {\n                this.helpUrl = json.helpurl;\n            }\n\n            if (json.errorcode !== undefined) {\n                this.createDivMessage('mmogame-error', json.errorcode);\n                return;\n            }\n\n            this.state = parseInt(json.state);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson);\n            this.updateButtonsAvatar(1, json.avatar, json.nickname);\n\n            this.attempt = json.attempt;\n\n            this.qtype = json.qtype;\n            if (json.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = json.answerids;\n                json.answers.forEach((answer, index) => {\n                    this.answers[index] = this.repairP(answer);\n                });\n            }\n           this.answer = json.answer !== undefined ? json.answer : undefined;\n\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            this.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            this.updateLabelTimer();\n\n            this.sendFastJSON();\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined || this.timeclose === undefined) {\n                return;\n            }\n            if (this.timeclose === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n            let time = (new Date()).getTime();\n            let dif = this.timeclose - time / 1000;\n\n            if (dif <= 0) {\n                dif = 0;\n            }\n            dif = Math.round(dif);\n            if (dif <= 0) {\n                this.labelTimer.innerHTML = '';\n                this.onTimeout();\n            } else {\n                let s = (dif < 0 ? \"-\" : \"\") + Math.floor(dif / 60.0);\n                this.labelTimer.innerHTML = s + \":\" + (\"0\" + (dif % 60)).slice(-2);\n            }\n\n            if (dif <= 0 && this.timeclose !== 0) {\n                return;\n            }\n\n            let instance = this;\n            this.timerTimeout = setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        onTimeout() {\n            this.labelTimer.innerHTML = '';\n            this.disableInput();\n            this.sendTimeout();\n        }\n\n        createScreen(json, disabled) {\n            this.createArea();\n\n            if (this.endofgame) {\n                this.createDivMessage('mmogame-endofgame', this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(disabled);\n            }\n            this.showScore(json);\n        }\n\n        createScreenVertical(disabled) {\n            let nickNameHeight = Math.round(this.iconSize / 3) + this.padding;\n            let maxHeight = this.areaHeight - 4 * this.padding - nickNameHeight;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize;\n            }\n            let instance = this;\n            let maxWidth = this.areaWidth;\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                    let defSize = instance.createDefinition(0, 0, maxWidth - 1, true, fontSize);\n\n                    if (defSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    let ansSize = instance.createAnswer(0, 0, maxWidth - 1, true, fontSize, disabled);\n                    if (ansSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    return defSize[1] + ansSize[1] < maxHeight ? -1 : 1;\n                }\n            );\n\n            this.radioSize = Math.round(this.fontSize);\n            let defSize = this.createDefinition(0, 0, maxWidth, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(0, defSize[1] + this.padding, maxWidth, false, this.fontSize, disabled);\n            this.nextLeft = this.areaWidth - this.iconSize - this.padding;\n\n            if (this.nextTop + this.padding >= this.areaHeight) {\n                this.nextTop = this.areaHeight - this.padding;\n            }\n\n            if (this.hideSubmit === false) {\n                let space = (this.areaWidth - this.iconSize) / 2;\n                this.btnSubmit = this.createImageButton(this.area, 'mmogame-quiz-submit',\n                    space, this.nextTop, 0, this.iconSize,\n                   'assets/submit.svg', false, 'submit');\n                this.btnSubmit.addEventListener(\"click\",\n                    function() {\n                        if (instance.btnSubmit !== undefined) {\n                            instance.area.removeChild(instance.btnSubmit);\n                            instance.btnSubmit = undefined;\n                        }\n                        instance.sendAnswer();\n                    }\n                );\n            }\n\n            this.stripLeft = this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createScreenHorizontal(disabled) {\n            let maxHeight = this.areaHeight - 2 * this.padding;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize + this.padding;\n            }\n            let width = Math.round((this.areaWidth - this.padding) / 2);\n            let instance = this;\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    function(fontSize) {\n                        defSize = instance.createDefinition(0, 0, width - instance.padding, true, fontSize);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = instance.createAnswer(0, 0, width - instance.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= instance.areaHeight) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n            this.nextLeft = width + Math.min(3 * this.iconSize + 2 * this.padding, width - this.iconSize);\n\n            if (this.hideSubmit) {\n                return;\n            }\n\n            this.btnSubmit = this.createImageButton(this.body, 'mmogame-quiz-submit',\n                width + (width - this.iconSize) / 2, this.nextTop, 0, this.iconSize,\n                \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.sendAnswer();\n            });\n\n            this.stripLeft = width + this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createAnswer(left, top, width, onlyMetrics, fontSize, disabled) {\n            return this.createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled);\n        }\n\n        createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled) {\n            let n = this.answers === undefined ? 0 : this.answers.length;\n            let instance = this;\n            let aChecked = [];\n            if (this.answer !== undefined && this.answer !== null) {\n                aChecked = this.answer.split(\",\");\n            }\n            if (aChecked.length > 0) {\n                if (aChecked[0] === \"\") {\n                    aChecked.pop();\n                }\n            }\n\n            this.aItemAnswer = new Array(n);\n            this.aItemLabel = new Array(n);\n            this.aItemCorrectX = new Array(n);\n            let retSize = [0, 0];\n            this.labelWidth = Math.round(width - fontSize - this.padding);\n            let checkboxSize = Math.round(fontSize);\n            let top1 = top;\n            let offsetLabel = 0;\n            for (let i = 0; i < n; i++) {\n                let label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.style.width = this.labelWidth + \"px\";\n\n                label.innerHTML = this.answers[i];\n\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                this.aItemLabel[i] = label;\n\n                if (onlyMetrics) {\n                    this.body.appendChild(label);\n                    let newSize = label.scrollWidth + fontSize + this.padding;\n                    if (newSize > retSize[0]) {\n                        retSize[0] = newSize;\n                    }\n                    retSize[1] += Math.max(label.scrollHeight, fontSize) + this.padding;\n\n                    this.body.removeChild(label);\n                    continue;\n                }\n\n                label.htmlFor = \"input\" + i;\n                label.style.left = (left + fontSize + this.padding + offsetLabel) + \"px\";\n                label.style.top = top + \"px\";\n                label.style.align = \"left\";\n                label.style.color = this.getContrastingColor(this.colorBackground);\n\n                let checked = aChecked.includes(this.answersID[i]);\n                let item = this.createRadiobox(this.body, checkboxSize, this.colorDefinition, this.colorScore, checked, disabled);\n                item.style.position = \"absolute\";\n                item.style.left = left + \"px\";\n                let topRadio = top;\n                item.style.top = topRadio + \"px\";\n\n                item.addEventListener('click', () => {\n                    if (!item.classList.contains(\"disabled\")) {\n                        instance.onClickRadio(i, this.colorDefinition, this.colorScore, true);\n                    }\n                });\n\n                label.addEventListener('click', () => {\n                    instance.onClickRadio(i, instance.colorDefinition, instance.colorScore, true);\n                });\n\n                this.area.appendChild(item);\n                this.area.appendChild(label);\n                if (label.scrollHeight > fontSize) {\n                    topRadio = Math.round(top + (label.scrollHeight - fontSize) / 2);\n                    item.style.top = topRadio + \"px\";\n                }\n\n                if (this.answersID[i] === '') {\n                    item.style.visibility = 'hidden';\n                    label.style.visibility = 'hidden';\n                }\n\n                this.aItemAnswer[i] = item;\n                this.aItemCorrectX[i] = left + fontSize + this.padding;\n\n                top += Math.max(label.scrollHeight, fontSize) + this.padding;\n            }\n\n            if (onlyMetrics) {\n                return retSize;\n            }\n\n            let heightControls = top - top1;\n            let vspace;\n            if (this.vertical === false) {\n                vspace = this.areaHeight - heightControls - this.iconSize;\n                if (vspace > this.padding) {\n                    let move = Math.round(vspace / 3);\n                    for (let i = 0; i < n; i++) {\n                        this.aItemAnswer[i].style.top = (parseInt(this.aItemAnswer[i].style.top) + move) + \"px\";\n                        this.aItemLabel[i].style.top = (parseInt(this.aItemLabel[i].style.top) + move) + \"px\";\n                    }\n                    this.nextTop += move / 2;\n                    let defTop = parseInt(this.divDefinition.style.top);\n                    if (defTop + move + this.definitionHeight + this.padding < this.areaHeight) {\n                        this.divDefinition.style.top = this.aItemLabel.length >= 1 ? this.aItemLabel[0].style.top : 0;\n                        this.divDefinition.style.height = Math.max(heightControls, this.definitionHeight) + \"px\";\n                    }\n                    top += move;\n                }\n            }\n\n            return top;\n        }\n\n        onClickRadio(i, colorBack, color, callSendAnswer) {\n            if (this.aItemAnswer[i].classList.contains(\"disabled\")) {\n                return;\n            }\n            for (let j = 0; j < this.aItemAnswer.length; j++) {\n                let item = this.aItemAnswer[j];\n                let disabled = item.classList.contains(\"disabled\");\n\n                if (i === j) {\n                    item.classList.add(\"checked\");\n                    this.answerid = this.answersID[i];\n                } else if (item.classList.contains(\"checked\")) {\n                    item.classList.remove(\"checked\");\n                }\n\n                this.drawRadio(item, disabled ? colorBack : 0xFFFFFF, color);\n            }\n            if (this.autosave && callSendAnswer) {\n                this.callSetAnswer();\n            }\n        }\n\n        sendTimeout() {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.sendGetAttempt();\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let data = JSON.stringify({\n                \"command\": \"timeout\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.user, \"attempt\": this.attempt\n            });\n            xmlhttp.send(data);\n        }\n\n        getSVGcorrect(size, iscorrect, colorCorrect, colorError) {\n            if (iscorrect) {\n                let c = colorCorrect !== undefined ? this.getColorHex(colorCorrect) : '#398439';\n                return \"<svg aria-hidden=\\\"true\\\" class=\\\"svg-icon iconCheckmarkLg\\\" width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" viewBox=\\\"0 0 36 36\\\"><path fill=\\\"\" + c + \"\\\" d=\\\"m6 14 8 8L30 6v8L14 30l-8-8v-8z\\\"></path></svg>\";\n            } else {\n                let c = colorError !== undefined ? this.getColorHex(colorError) : '#398439';\n                return \"<svg width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" class=\\\"bi bi-x-lg\\\" viewBox=\\\"0 0 18 18\\\"> <path fill=\\\"\" + c +\n                    `\" d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 \n                1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\"/></svg>`;\n            }\n        }\n\n        updateScreenAfterAnswerMultichoice() {\n            let aCorrect = this.correct.split(\",\");\n            for (let i = 0; i < this.answersID.length; i++) {\n                let label = this.aItemLabel[i];\n                let checked = this.aItemAnswer[i].classList.contains(\"checked\");\n                let iscorrect;\n\n                if (aCorrect.includes(this.answersID[i])) {\n                    iscorrect = true;\n                } else if (checked) {\n                    iscorrect = false;\n                } else {\n                    continue;\n                }\n                let height = label.scrollHeight;\n                let width = label.scrollWidth - this.radioSize;\n                label.style.left = (parseInt(label.style.left) + this.radioSize) + \"px\";\n                label.style.width = width + \"px\";\n                if (iscorrect) {\n                    label.innerHTML = '<b>' + label.innerHTML + '</b>';\n                }\n                this.autoResizeText(label, width, height, true, this.minFontSize, this.maxFontSize, 0.9);\n\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, 'mmogame-quiz-correct',\n                    this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect, this.colorScore, this.colorScore);\n            }\n        }\n\n        disableInput() {\n            if (this.aItemAnswer !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                    this.drawRadio(this.aItemAnswer[i], this.colorScore, this.colorDefinition);\n                }\n            }\n        }\n\n        sendFastJSON() {\n            if (this.timeoutFastJSON !== undefined) {\n                clearTimeout(this.timeoutFastJSON);\n            }\n            let instance = this;\n            this.timeoutFastJSON = setTimeout(function() {\n                let xmlhttp = new XMLHttpRequest();\n                xmlhttp.onreadystatechange = function() {\n                    this.timeoutFastJSON = undefined;\n                    if (this.readyState === 4 && this.status === 200) {\n                        instance.onServerFastJson(this.response);\n                    }\n                };\n\n                let url = instance.url + \"/state.php\";\n\n                xmlhttp.open(\"POST\", url, true);\n\n                let data = new FormData();\n                data.set('fastjson', instance.fastjson);\n                data.set('type', instance.type);\n\n                xmlhttp.send(data);\n            }, this.timeForSendAnswer);\n        }\n\n        onClickHelp() {\n            if (this.helpUrl !== '') {\n                window.open(this.helpUrl, \"_blank\");\n            }\n        }\n\n        getStringT(name) {\n            return M.util.get_string(name, 'mmogametype_quiz');\n        }\n\n        /**\n         * Creates a percentage-based score display using createDOMElement.\n         *\n         * @param {number} left - The left position in pixels.\n         * @param {number} top - The top position in pixels.\n         * @param {number} num - Identifier for the score (1 or 2).\n         */\n        createDivScorePercent(left, top, num) {\n            // Create the main button container\n            const button = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'score-button',\n                styles: {\n                    position: 'absolute',\n                    left: `${left}px`,\n                    top: `${top}px`,\n                    width: `${this.iconSize}px`,\n                    height: `${this.iconSize}px`,\n                    border: \"0px solid \" + this.getColorHex(0xFFFFFF),\n                    boxShadow: \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\",\n                    background: num === 1 ? this.getColorHex(this.colorScore) : this.getColorHex(this.colorScore2),\n                    color: num === 1 ? this.getContrastingColor(this.colorScore) : this.getContrastingColor(this.colorScore2),\n                },\n                attributes: {\n                    title: num === 1 ? this.getStringM('js_grade') : this.getStringM('js_grade_opponent'),\n                    disabled: true,\n                },\n            });\n\n            button.innerHTML = '';\n\n            // Create the main score label\n            const scoreLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'score-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left}px`,\n                    top: `${top + this.iconSize / 4}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 2}px`,\n                    lineHeight: `${this.iconSize / 2}px`,\n                    textAlign: 'center',\n                    color: this.getContrastingColor(this.colorScore),\n                },\n                attributes: {\n                    title: num === 1 ? this.getStringM('js_grade') : this.getStringM('js_grade_opponent'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScore = scoreLabel;\n            } else {\n                this.labelScore2 = scoreLabel;\n            }\n\n            // Create the ranking grade label\n            const rankLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'ranking-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left}px`,\n                    top: `${top}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 3}px`,\n                    textAlign: 'center',\n                    color: this.getContrastingColor(this.colorScore),\n                },\n                attributes: {\n                    title: this.getStringM('js_ranking_grade'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScoreRank = rankLabel;\n            } else {\n                this.labelScoreRank2 = rankLabel;\n            }\n\n            this.createAddScore('mmogame_addscore', left, top + this.iconSize - this.iconSize / 3,\n                this.iconSize / 2, this.iconSize / 3, num);\n\n            // Create the percentage label\n            const percentLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'percent-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left + this.iconSize / 2}px`,\n                    top: `${top}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 3}px`,\n                    textAlign: 'center',\n                    fontSize: `${this.iconSize / 3}px`,\n                    lineHeight: `${this.iconSize / 3}px`,\n                    color: rankLabel.style.color,\n                },\n                attributes: {\n                    title: this.getStringM('js_ranking_percent'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScoreRankB = percentLabel;\n            }\n\n            // Create the additional score label\n            const addScoreLabel = this.createDOMElement('div', {\n                parent: this.body,\n                classnames: 'addscore-label',\n                styles: {\n                    position: 'absolute',\n                    left: `${left + this.iconSize / 2}px`,\n                    top: `${parseFloat(this.labelScore.style.top)}px`,\n                    width: `${this.iconSize / 2}px`,\n                    height: `${this.iconSize / 2}px`,\n                    textAlign: 'center',\n                    lineHeight: `${Math.round(this.iconSize / 2)}px`,\n                    fontWeight: 'bold',\n                    color: rankLabel.style.color,\n                },\n                attributes: {\n                    title: this.getStringM('js_percent'),\n                },\n            });\n\n            if (num === 1) {\n                this.labelScoreB = addScoreLabel;\n            }\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getContrastingColor(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        showScore({addscore, completedrank, percentcompleted, rank, sumscore, usercode}) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n\n        callSetAnswer() {\n            // Clear any existing timeout to prevent duplicate calls\n            if (this.timerTimeout !== undefined) {\n                clearTimeout(this.timerTimeout);\n            }\n            this.timerTimeout = undefined;\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Define the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    attempt: instance.attempt,\n                    answer: instance.answer !== undefined ? instance.answer : null,\n                    answerid: instance.answerid !== undefined ? instance.answerid : null,\n                    subcommand: '',\n                };\n                // Call the service through the Moodle AJAX API\n                let ret = Ajax.call([{\n                    methodname: 'mmogametype_quiz_set_answer', // Service method name\n                    args: params // Parameters to pass\n                }]);\n\n                // Handle the server response\n                ret[0].done(function(response) {\n                    instance.processSetAnswer(JSON.parse(response)); // Trigger further action\n                }).fail(function(error) {\n                    instance.showError(error);\n                    // Return the error if the call fails\n                    return error;\n                });\n            });\n        }\n\n    };\n    });"],"names":["define","MmoGameUI","constructor","hideSubmit","timeForSendAnswer","setColors","colors","repairColors","colorDefinition","this","colorScore","colorCopyright","colorScore2","openGame","audioYes","Audio","load","audioNo","processGetAttempt","json","computeDifClock","time","timestart","timeclose","undefined","setColorsString","createIconBar","name","window","document","title","helpurl","helpUrl","errorcode","state","parseInt","fastjson","timefastjson","updateButtonsAvatar","avatar","nickname","attempt","qtype","answers","answersID","answerids","forEach","answer","index","repairP","endofgame","definition","createScreen","updateLabelTimer","sendFastJSON","createDivMessage","labelTimer","innerHTML","Date","getTime","dif","Math","round","onTimeout","s","floor","slice","instance","timerTimeout","setTimeout","disableInput","sendTimeout","disabled","createArea","getStringM","showScore","vertical","createScreenVertical","createScreenHorizontal","nickNameHeight","iconSize","padding","maxHeight","areaHeight","maxWidth","areaWidth","fontSize","findbest","minFontSize","maxFontSize","defSize","createDefinition","ansSize","createAnswer","radioSize","nextTop","nextLeft","space","btnSubmit","createImageButton","area","addEventListener","removeChild","sendAnswer","stripLeft","stripWidth","stripHeight","width","step","min","body","left","top","onlyMetrics","createAnswerMultichoice","n","length","aChecked","split","pop","aItemAnswer","Array","aItemLabel","aItemCorrectX","retSize","labelWidth","checkboxSize","top1","i","label","createElement","style","position","font","appendChild","newSize","scrollWidth","max","scrollHeight","htmlFor","align","color","getContrastingColor","colorBackground","checked","includes","item","createRadiobox","topRadio","classList","contains","onClickRadio","visibility","vspace","heightControls","move","divDefinition","definitionHeight","height","colorBack","callSendAnswer","j","add","answerid","remove","drawRadio","autosave","callSetAnswer","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","sendGetAttempt","open","url","setRequestHeader","data","JSON","stringify","mmogameid","pin","kinduser","user","send","getSVGcorrect","size","iscorrect","colorCorrect","colorError","getColorHex","updateScreenAfterAnswerMultichoice","aCorrect","correct","autoResizeText","t","createDiv","timeoutFastJSON","clearTimeout","onServerFastJson","response","FormData","set","type","onClickHelp","getStringT","M","util","get_string","createDivScorePercent","num","createDOMElement","parent","classnames","styles","border","boxShadow","background","attributes","scoreLabel","lineHeight","textAlign","labelScore","labelScore2","rankLabel","labelScoreRank","labelScoreRank2","createAddScore","percentLabel","labelScoreRankB","addScoreLabel","parseFloat","fontWeight","labelScoreB","div","ret","paddingLeft","paddingRight","id","addscore","completedrank","percentcompleted","rank","sumscore","usercode","w","labelAddScore","require","Ajax","params","subcommand","call","methodname","args","done","processSetAnswer","parse","fail","error","showError"],"mappings":"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"}