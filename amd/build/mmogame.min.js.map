{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class mmoGame {\n    kindSound = 0;\n    state = 0;\n    body;\n    minFontSize;\n    maxFontSize;\n    fontSize;\n    avatarTop;\n    colorsBackground;\n    buttonAvatarTop;\n    buttonAvatarHeight;\n    colorScore;\n    colorScore2;\n    definition;\n    colorDefinition;\n    /**\n     * Basic class for games.\n     *\n     * @module mmogame\n     * @copyright 2024 Vasilis Daloukas\n     * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n     */\n    constructor() {\n        this.body = document.getElementsByTagName(\"body\")[0];\n        this.kindSound = window.localStorage.getItem('kindSound');\n        if (isNaN(this.kindSound)) {\n            this.kindSound = 0;\n        }\n        if (this.kindSound !== 0 && this.kindSound !== 1 && this.kindSound !== 2) {\n            this.kindSound = 0;\n        }\n\n        let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n        this.minFontSize = size;\n        this.maxFontSize = 2 * size;\n        this.fontSize = size;\n    }\n\n    hasHelp() {\n        return false;\n    }\n\n    removeBodyChilds() {\n        this.removeDivMessage();\n\n        while (this.body.firstChild) {\n            this.body.removeChild(this.body.lastChild);\n        }\n        this.area = undefined;\n    }\n\n    openGame() {\n        this.removeBodyChilds();\n        this.area = undefined;\n        this.computeSizes();\n    }\n/* A\n    createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n        let button = document.createElement(\"img\");\n        if (alt !== undefined && alt !== '') {\n            button.alt = alt;\n        }\n\n        button.classList.add(\"mmogame_imgbutton\");\n        button.setAttribute(\"role\", \"button\");\n\n        button.tabIndex = 0;\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n*/\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n    createImage(parent, left, top, width, height, filename) {\n        let button = document.createElement(\"img\");\n\n        button.tabIndex = 0;\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    createCenterImageButton(parent, left, top, width, height, classname, filename) {\n        let button = document.createElement(\"img\");\n        button.classList.add(\"mmogame_imgbutton\");\n        button.style.position = \"absolute\";\n        button.draggable = false;\n\n        const img = new Image();\n        img.onload = function() {\n            if (this.width === 0 || this.height === 0) {\n                this.width = this.height = 1;\n            }\n\n            if (this.width > 0 && this.height > 0) {\n                let mul = Math.min(width / this.width, height / this.height);\n                let w = Math.round(this.width * mul);\n                let h = Math.round(this.height * mul);\n\n                button.style.width = w + \"px\";\n                button.style.height = h + \"px\";\n                button.style.left = (left + width / 2 - w / 2) + \"px\";\n                button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                button.src = filename;\n                button.innerHTML = filename;\n                button.style.fontSize = height + \"px\";\n            }\n        };\n        if (filename !== undefined && filename !== \"\") {\n            img.style.left = left + \"px\";\n            img.style.top = top + \"px\";\n            img.style.visibility = 'hidden';\n            img.src = filename;\n        }\n        button.tabIndex = 0;\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    updateImageButton(button, left, top, width, height, filename) {\n        button.src = filename;\n    }\n\n    createDiv(parent, left, top, width, height) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = width + \"px\";\n        div.style.height = height + \"px\";\n\n        parent.appendChild(div);\n\n        return div;\n    }\n\n    createDivColor(parent, left, top, width, height, color) {\n        let div = this.createDiv(parent, left, top, width, height);\n        div.style.background = this.getColorHex(color);\n\n        return div;\n    }\n\n    getMuteFile() {\n        if (this.kindSound === 0) {\n            return 'assets/sound-on-flat.png';\n        } else if (this.kindSound === 1) {\n            return 'assets/sound-off-flat.png';\n        } else if (this.kindSound === 2) {\n            return 'assets/speak.svg';\n        } else {\n            return 'assets/sound-on-flat.png';\n        }\n    }\n\n    playAudio(audio) {\n        if (this.kindSound !== 0 && audio !== null) {\n            if (audio.networkState === 1) {\n                audio.play();\n            }\n        }\n    }\n\n    autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n        let minHeight = 0.9 * height;\n        let low = Math.max(1, minFontSize);\n        width = Math.round(width);\n        height = Math.round(height);\n        let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n        let fitSize = low;\n        let fitHeight = 0;\n        let newHeight = 0;\n        let newWidth = 0;\n\n        for (let i = 0; i <= 10; i++) {\n            let el = document.createElement(\"div\");\n            el.style.left = 0;\n            el.style.top = 0;\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"visible\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n\n            let fontSize = (low + up) / 2;\n\n            el.style.fontSize = fontSize + \"px\";\n            newHeight = el.scrollHeight;\n            newWidth = el.scrollWidth - 1;\n\n            this.body.removeChild(el);\n\n            if (newWidth > width || newHeight > height) {\n                up = fontSize;\n            } else {\n                low = fontSize;\n                if (Math.abs(fitHeight - newHeight) <= 2) {\n                    break;\n                }\n                fitHeight = newHeight;\n                fitSize = fontSize;\n                if (newHeight > minHeight) {\n                    break;\n                }\n            }\n        }\n        item.style.fontSize = fitSize + \"px\";\n\n        if (newWidth > width || newHeight > height) {\n            this.autoResizeTextBr(item);\n            newWidth = item.scrollWidth;\n            newHeight = item.scrollHeight;\n            this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                minRatio);\n        } else {\n            return [item.scrollWidth - 1, item.scrollHeight];\n        }\n\n        let el = document.createElement(\"div\");\n        el.style.width = width + \"px\";\n        el.style.height = 0;\n        el.visibility = \"hidden\";\n        if (!wrap) {\n            el.style.whiteSpace = \"nowrap\";\n        }\n        el.innerHTML = item.innerHTML;\n        this.body.appendChild(el);\n        el.style.fontSize = item.style.fontSize;\n        let size = [el.scrollWidth - 1, el.scrollHeight];\n        this.body.removeChild(el);\n\n        return size;\n    }\n\n    autoResizeTextBr(item) {\n        let s = item.innerHTML;\n        let change = false;\n        while (s.startsWith('<br>')) {\n            s = s.substring(4);\n            change = true;\n        }\n        let pos1 = s.indexOf('<br>');\n        for (; ;) {\n            let pos = s.indexOf('<br>', pos1 + 4);\n            if (pos < 0) {\n                break;\n            }\n            let s2 = s.substring(pos1 + 4, pos);\n            if (!s2.trim()) {\n                s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                change = true;\n                pos = pos1;\n            }\n            pos1 = pos;\n        }\n\n        if (change) {\n            item.innerHTML = s;\n        }\n    }\n\n    autoResizeTextImage(item, subwidth, subheight, minRatio) {\n        if (subwidth === 0 && subheight === 0) {\n            return;\n        }\n        let s = item.innerHTML;\n\n        for (let pos = 0; ;) {\n            let pos2 = s.indexOf(\"<img \", pos);\n            if (pos2 < 0) {\n                break;\n            }\n            let pos3 = s.indexOf(\">\", pos2);\n            if (pos3 < 0) {\n                break;\n            }\n            let s2 = s.substring(pos2, pos3) + \" \";\n\n            let width = 0;\n            let height = 0;\n            let posw = s2.indexOf(\"width=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                    width = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n\n            posw = s2.indexOf(\"height=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                    height = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n            if (width > 0 && height > 0) {\n                let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n            }\n            s = s.slice(0, pos2) + s2 + s.slice(pos3);\n            pos = pos3;\n        }\n        item.innerHTML = s;\n    }\n\n    getUserGUID() {\n        let guid = window.localStorage.getItem('UserGUID');\n        if (guid === null || guid === '') {\n            guid = this.uuid4();\n            window.localStorage.setItem(\"UserGUID\", guid);\n        }\n\n        return guid;\n    }\n\n    pad(num, size) {\n        let s = num + \"\";\n        while (s.length < size) {\n            s = \"0\" + s;\n        }\n        return s;\n    }\n\n    uuid4() {\n        const uuid = new Array(36);\n\n        for (let i = 0; i < 36; i++) {\n            uuid[i] = Math.floor(Math.random() * 16);\n        }\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n\n        return uuid.map((x) => x.toString(16)).join('');\n    }\n\n    computeSizes() {\n        if (this.cIcons < 5 || this.cIcons === undefined) {\n            this.cIcons = 5;\n        }\n        this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n        this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n        this.padding = Math.round(this.iconSize / 10);\n        this.iconSize -= this.padding;\n    }\n\n    getIconSize() {\n        return this.iconSize;\n    }\n\n    getCopyrightHeight() {\n        return Math.round(this.getIconSize() / 3);\n    }\n\n    getPadding() {\n        return this.padding;\n    }\n\n    getColorHex(x) {\n        return '#' + ('0000' + x.toString(16).toUpperCase()).slice(-6);\n    }\n\n    getContrast(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256; // Blue.\n\n        return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    }\n\n    getColorGray(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256, // Blue.\n            yiq = (r * 299) + g * 587 + b * 114,\n            m = 255 * 299 + 255 * 587 + 255 * 114,\n            gray = Math.round(yiq * 255 / m);\n\n        return (gray * 0x10000) + (gray * 0x100) + gray;\n    }\n\n    getColorContrast(x) {\n        return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n    }\n\n    repairColors(colors) {\n\n        this.colors = colors;\n        let instance = this;\n        this.colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n\n        this.colorBackground = this.colors[0];\n        this.body.style.background = this.getColorHex(this.colorBackground);\n\n        return this.colors;\n    }\n/* A\n    repairHTML(s, mapFiles, mapFilesWidth, mapFilesHeight) {\n        if (s === undefined) {\n            return '';\n        }\n        while (s.slice(0, 4) === '<br>') {\n            s = s.slice(4).trim();\n        }\n        for (; ;) {\n            let pos = s.indexOf(\"@@GUID@@\");\n            if (pos < 0) {\n                break;\n            }\n            let pos2 = s.indexOf(\"\\\"\", pos);\n            if (pos2 > 0) {\n                let s2 = s.slice(pos2 + 1);\n                let posw = s2.indexOf(\"width=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n                posw = s2.indexOf(\"height=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n\n                let key = s.substring(pos + 8, pos2);\n                s2 = \" width=\\\"\" + mapFilesWidth.get(key) + \"\\\" \" + s2;\n                s2 = \" height=\\\"\" + mapFilesHeight.get(key) + \"\\\" \" + s2;\n\n                s = s.substring(0, pos) + \"data:image/png;base64, \" + mapFiles.get(key) + \"\\\"\" + s2;\n            }\n        }\n\n        return s;\n    }\n*/\n    repairP(s) {\n        if (s === undefined) {\n            return \"\";\n        }\n\n        // Remove <p> tags and replace </p> with <br />\n        let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n        // Remove <br> or <br/> at the end of the string\n        s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n        // Remove the <ol><br></ol> sequence if it exists\n        let pos = s2.indexOf('<ol><br></ol>');\n        if (pos >= 0) {\n            s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n        }\n\n        return s2;\n    }\n\n    createDivScorePercent(left, top, num) {\n        let button = document.createElement(\"button\");\n        button.style.position = \"absolute\";\n        button.classList.add(\"mmogame_button\");\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.style.width = this.iconSize + \"px\";\n        button.style.height = this.iconSize + \"px\";\n        button.style.lineHeight = this.iconSize + \"px\";\n        button.style.textAlign = \"center\";\n        button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n        button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n        if (num === 1) {\n            button.style.background = this.getColorHex(this.colorScore);\n            button.style.color = this.getColorContrast(this.colorScore);\n            button.title = this.getStringM('js_grade');\n        } else {\n            button.style.background = this.getColorHex(this.colorScore2);\n            button.style.color = this.getColorContrast(this.colorScore2);\n        }\n\n        this.body.appendChild(button);\n\n        button.innerHTML = '';\n        button.disabled = true;\n\n        let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n        div.style.lineHeight = (this.iconSize / 2) + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        if (num === 1) {\n            this.labelScore = div;\n            div.title = this.getStringM('js_grade');\n        } else {\n            this.labelScore2 = div;\n            div.title = this.getStringM('js_grade_opponent');\n        }\n\n        let h = this.iconSize / 3;\n        div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = this.getStringM('js_ranking_grade');\n        if (num === 1) {\n            this.labelScoreRank = div;\n        } else {\n            this.labelScoreRank2 = div;\n        }\n\n        div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = this.getStringM('js_grade_last_question');\n        button.disabled = true;\n        if (num === 1) {\n            this.labelAddScore = div;\n        } else {\n            this.labelAddScore2 = div;\n        }\n\n        let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n        div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = h + \"px\";\n        div.style.lineHeight = h + \"px\";\n        div.style.color = label.style.color;\n        div.title = this.getStringM('js_ranking_percent');\n        if (num === 1) {\n            this.labelScoreRankB = div;\n        }\n\n        label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n        div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n            this.iconSize / 2);\n        div.style.textAlign = \"center\";\n        div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = label.style.fontSize;\n        div.style.fontWeight = 'bold';\n        div.style.color = label.style.color;\n        div.title = this.getStringM('js_percent');\n        this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n        if (num === 1) {\n            this.labelScoreB = div;\n        }\n    }\n\n    createDivTimer(left, top, sizeIcon) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = sizeIcon + \"px\";\n        div.style.height = sizeIcon + \"px\";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.lineHeight = sizeIcon + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n        div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n        div.name = \"timer\";\n        this.body.appendChild(div);\n        this.labelTimer = div;\n\n        div.innerHTML = '23:59';\n        this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n        div.innerHTML = '';\n        div.title = this.getStringM('js_question_time');\n    }\n\n    createButtonSound(left, top) {\n        this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n            this.getMuteFile());\n        this.buttonSound.alt = this.getStringM('js_sound');\n        let instance = this;\n        this.buttonSound.addEventListener(\"click\", function() {\n            instance.onClickSound(instance.buttonSound);\n        });\n\n        this.buttonSound.title = this.getStringM('js_sound');\n    }\n\n    onClickSound(btn) {\n        window.title = btn.src;\n        this.kindSound = (this.kindSound + 1) % 2;\n        window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n        btn.src = this.getMuteFile();\n    }\n\n    createButtonHelp(left, top) {\n        this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n        this.buttonHelp.alt = this.getStringM('js_help');\n    }\n\n    readJsonFiles(json) {\n        this.mapFiles = new Map();\n        this.mapFilesWidth = new Map();\n        this.mapFilesHeight = new Map();\n        this.mapFiles.set(json.fileg1, json.filec1);\n        this.mapFilesWidth.set(json.fileg1, json.width1);\n        this.mapFilesHeight.set(json.fileg1, json.height1);\n    }\n\n    findbest(low, up, fn) {\n        if (low < 1) {\n            low = 1;\n        }\n\n        let prevSize;\n        let fitSize = low;\n        let testSize;\n        for (let i = 0; i <= 10; i++) {\n            prevSize = low;\n            testSize = (low + up) / 2;\n\n            let cmp = fn(testSize);\n            if (cmp <= 0) {\n                fitSize = testSize;\n                low = testSize;\n            } else {\n                up = testSize;\n            }\n            if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                break;\n            }\n        }\n\n        return fitSize;\n    }\n\n    createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n        width -= 2 * this.padding;\n        let div = document.createElement(\"div\");\n\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n\n        div.style.fontSize = fontSize + \"px\";\n        // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n        div.innerHTML = this.definition;\n        div.style.textAlign = \"left\";\n\n        if (onlyMetrics) {\n            this.body.appendChild(div);\n            let ret = [div.scrollWidth - 1, div.scrollHeight];\n            this.body.removeChild(div);\n            return ret;\n        }\n\n        div.style.background = this.getColorHex(this.colorDefinition);\n        div.style.color = this.getColorContrast(this.colorDefinition);\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.paddingLeft = this.padding + \"px\";\n        div.style.paddingRight = this.padding + \"px\";\n        div.id = \"definition\";\n\n        this.area.appendChild(div);\n        let height = div.scrollHeight + this.padding;\n        div.style.height = height + \"px\";\n\n        this.definitionHeight = height;\n        this.divDefinition = div;\n\n        return [div.scrollWidth - 1, div.scrollHeight];\n    }\n\n    updateLabelTimer() {\n        if (this.labelTimer === undefined) {\n            return;\n        }\n        if (this.timeclose === 0 || this.timestart === 0) {\n            this.labelTimer.innerHTML = '';\n            return;\n        }\n\n        let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n        if (dif <= 0) {\n            dif = 0;\n            this.sendTimeout();\n        }\n        const minutes = Math.floor(Math.abs(dif) / 60);\n        const seconds = Math.abs(dif) % 60;\n        const prefix = dif < 0 ? \"-\" : \"\";\n        this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n        if (dif === 0) {\n            return;\n        }\n\n        let instance = this;\n        setTimeout(function() {\n            instance.updateLabelTimer();\n        }, 500);\n    }\n\n    createDivMessage(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        if (this.divMessageBackground === undefined) {\n            let div = this.createDiv(this.divMessageBackground, left, top, width, height);\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n        this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n\n        this.autoResizeText(this.divMessage, width, height, false, this.minFontSize, this.maxFontSize, 0.5);\n    }\n\n    createDivMessageStart(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        let height1 = height / 8;\n\n        if (this.divMessageBackground === undefined) {\n            let div = this.createDiv(this.divMessageBackground, left, top, width, height);\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n\n        this.autoResizeText(this.divMessage, width, height1, false, this.minFontSize, this.maxFontSize, 0.5);\n        top += (height1 - this.divMessage.scrollHeight) / 2;\n        this.divMessage.style.top = top + \"px\";\n\n        if (this.divMessageHelp === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"left\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            let top = this.iconSize + 3 * this.padding + height1;\n            div.style.top = (top + this.padding) + \"px\";\n            div.style.height = (height - height1) + \"px\";\n            this.divMessageHelp = div;\n            this.body.appendChild(this.divMessageHelp);\n\n            this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n        }\n    }\n\n    removeDivMessage() {\n        if (this.divMessage !== undefined) {\n            this.body.removeChild(this.divMessage);\n            this.divMessage = undefined;\n        }\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n        if (this.divMessageBackground !== undefined) {\n            this.divMessageBackground.remove();\n            this.divMessageBackground = undefined;\n        }\n    }\n\n    disableButtons(buttons, disabled) {\n        for (let i = 0; i < buttons.length; i++) {\n            let btn = buttons[i];\n            if (btn !== undefined) {\n                if (disabled) {\n                    btn.classList.add(\"mmogame_imgbutton_disabled\");\n                } else {\n                    btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                }\n            }\n        }\n    }\n\n    repairNickname(nickname) {\n        if (nickname === undefined) {\n            return '';\n        }\n\n        let s = nickname;\n        if (s !== '') {\n            while (s.indexOf('_') !== -1) {\n                s = s.replace('_', ' ');\n            }\n        }\n\n        return s;\n    }\n\n    showScore(json) {\n        let s = json.sumscore === undefined ? '' : '<b>' + json.sumscore + '</b>';\n        if (this.labelScore.innerHTML !== s) {\n            this.labelScore.innerHTML = s;\n            let w = this.iconSize - 2 * this.padding;\n            this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRank.innerHTML !== json.rank) {\n            this.labelScoreRank.innerHTML = json.rank !== undefined ? json.rank : '';\n            this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        if (json.name !== undefined) {\n            window.document.title = (json.usercode !== undefined ? json.usercode : \"\") + \" \" + json.name;\n        }\n\n        s = json.addscore === undefined ? '' : json.addscore;\n        if (this.labelAddScore.innerHTML !== s) {\n            this.labelAddScore.innerHTML = s;\n            this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRankB.innerHTML !== json.completedrank) {\n            this.labelScoreRankB.innerHTML = json.completedrank !== undefined ? json.completedrank : '';\n            this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        s = json.percentcompleted !== undefined ? Math.round(100 * json.percentcompleted) + '%' : '';\n        if (this.labelScoreB.innerHTML !== s) {\n            this.labelScoreB.innerHTML = s;\n            this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n    }\n\n    createDivName(left, top, labelWidth, inpWidth, label, value) {\n        let div = this.createDiv(this.area, left, top, labelWidth, this.iconSize);\n        div.innerHTML = label + \": \";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.textAlign = \"right\";\n        div.style.color = this.getColorContrast(this.colorBackground);\n        this.autoResizeText(div, labelWidth, this.areaHeight, false, this.minFontSize, this.maxFontSize, 1);\n\n        let divInp = document.createElement(\"input\");\n        divInp.style.position = \"absolute\";\n        divInp.style.width = inpWidth + \"px\";\n        divInp.style.type = \"text\";\n        divInp.style.fontSize = div.style.fontSize;\n        divInp.value = value;\n        divInp.style.left = (left + labelWidth + this.padding) + \"px\";\n        divInp.style.top = top + \"px\";\n        divInp.autofocus = true;\n        divInp.style.background = this.getColorHex(this.colorBackground);\n        divInp.style.color = this.getColorContrast(this.colorBackground);\n        this.area.appendChild(divInp);\n        divInp.autofocus = true;\n        let instance = this;\n        divInp.addEventListener(\"keydown\", function() {\n            if (event.key === \"Enter\") {\n                instance.sendSetAvatar(divInp.value, -1);\n            }\n        });\n\n        return divInp;\n    }\n\n    createCheckbox(parent, left, top, width, height, value) {\n        let checkbox = document.createElement('input');\n        checkbox.type = \"checkbox\";\n        checkbox.value = value;\n        checkbox.style.position = \"absolute\";\n        checkbox.style.left = left + \"px\";\n        checkbox.style.top = top + \"px\";\n        checkbox.style.width = width + \"px\";\n        checkbox.style.height = height + \"px\";\n\n        parent.appendChild(checkbox);\n\n        return checkbox;\n    }\n\n    showColorPalette(canvas, colors) {\n        let ctx = canvas.getContext(\"2d\");\n        let width = canvas.width;\n        let height = canvas.height;\n        let strip = width / 5;\n        let instance = this;\n\n        colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n        for (let i = 0; i < 5; i++) {\n            ctx.fillStyle = this.getColorHex(colors[i]);\n            ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n        }\n\n        ctx.strokeStyle = \"#FFFFFF\";\n        ctx.lineWidth = 1;\n        ctx.strokeRect(0, 0, width, height);\n    }\n\n    sendSetAvatar(nickname, avatarid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                let json = JSON.parse(this.responseText);\n                instance.updateButtonsAvatar(1, json.avatar);\n                instance.sendGetAttempt();\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setavatar\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, 'avatarid': avatarid, 'nickname': nickname\n        });\n        xmlhttp.send(data);\n    }\n\n    sendSetColorPalette(colorpaletteid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.colors = undefined;\n                instance.openGame(instance.url, instance.mmogameid, instance.pin, instance.auserid, instance.kinduser);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setcolorpalette\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, \"id\": colorpaletteid\n        });\n        xmlhttp.send(data);\n    }\n\n        setColorsString(s) {\n            let a = [0x9B7ED9, 0x79F2F2, 0x67BF5A, 0xD0F252, 0xBF5B21];\n            if (s !== undefined && s.length >= 0) {\n                let b = s.split(\",\");\n                if (b.length === 5) {\n                    a = b;\n                    for (let i = 0; i < 5; i++) {\n                        a[i] = parseInt(a[i]);\n                    }\n                }\n            }\n            this.setColors(a);\n        }\n    computeDifClock(json) {\n        if (json.time !== undefined) {\n            this.difClock = ((new Date()).getTime() - json.time) / 1000;\n        }\n\n        this.computeTimeStartClose(json);\n    }\n\n    computeTimeStartClose(json) {\n        if (json.timestart !== undefined) {\n            this.timestart = parseInt(json.timestart) !== 0 ? parseInt(json.timestart) + this.difClock : 0;\n            this.timeclose = parseInt(json.timeclose) !== 0 ? parseInt(json.timeclose) + this.difClock : 0;\n        } else {\n            this.timestart = 0;\n            this.timeclose = 0;\n        }\n    }\n\n    drawRadio(canvas, color1, color2) {\n        let ctx = canvas.getContext(\"2d\");\n        let size = canvas.width;\n        ctx.clearRect(0, 0, size, canvas.height);\n\n        ctx.beginPath();\n        ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.getColorHex(color1);\n        ctx.fill();\n\n        let checked = canvas.classList.contains(\"checked\");\n        if (checked) {\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color2);\n            ctx.fill();\n        }\n    }\n\n    createRadiobox(parent, size, color1, color2, checked, disabled) {\n        let canvas = document.createElement('canvas');\n        canvas.style.position = \"absolute\";\n        canvas.width = size;\n        canvas.height = size;\n        parent.appendChild(canvas);\n        if (checked) {\n            canvas.classList.add(\"checked\");\n        }\n        if (disabled) {\n            canvas.classList.add(\"disabled\");\n        }\n\n        this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n        return canvas;\n    }\n\n    createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n        if (widthNickName === 0) {\n            widthNickName = this.iconSize;\n        }\n        if (heightNickName === 0) {\n            heightNickName = this.iconSize - this.buttonAvatarHeight;\n        }\n        if (this.buttonsAvatarLeft === undefined) {\n            this.buttonsAvatarLeft = [];\n        }\n        this.buttonsAvatarLeft[num] = left;\n\n        if (this.buttonsAvatarSrc === undefined) {\n            this.buttonsAvatarSrc = [];\n        }\n        this.buttonsAvatarSrc[num] = \"\";\n\n        if (this.nicknames === undefined) {\n            this.nicknames = [];\n        }\n        this.nicknames[num] = \"\";\n\n        if (this.buttonsAvatar === undefined) {\n            this.buttonsAvatar = [];\n        }\n        this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n        if (num === 2 && this.avatarTop !== undefined) {\n            this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n        }\n\n        if (this.divNicknames === undefined) {\n            this.divNicknames = [];\n        }\n        if (this.divNicknamesWidth === undefined) {\n            this.divNicknamesWidth = [];\n        }\n        if (this.divNicknamesHeight === undefined) {\n            this.divNicknamesHeight = [];\n        }\n        this.divNicknamesWidth[num] = widthNickName;\n        this.divNicknamesHeight[num] = heightNickName;\n\n        this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n    }\n\n    updateButtonsAvatar(num, avatar, nickname) {\n        if (avatar === undefined) {\n            avatar = \"\";\n        }\n        if (nickname === undefined) {\n            nickname = \"\";\n        }\n\n        if (avatar === \"\" && nickname === \"\") {\n            this.buttonsAvatar[num].style.visibility = 'hidden';\n            this.divNicknames[num].style.visibility = 'hidden';\n            return;\n        }\n\n        if (this.nicknames[num] !== nickname || nickname === \"\") {\n            this.nicknames[num] = nickname;\n            let s = nickname;\n\n            if (nickname.length === 0) {\n                s = avatar;\n                let pos = s.lastIndexOf(\"/\");\n                if (pos >= 0) {\n                    s = s.slice(pos + 1);\n                }\n                pos = s.lastIndexOf(\".\");\n                if (pos >= 0) {\n                    s = s.slice(0, pos);\n                }\n                const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n            }\n            s = this.repairNickname(s);\n            if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                this.divNicknames[num].innerHTML = s;\n                this.divNicknames[num].style.textAlign = \"center\";\n                this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                    0, 0, 1);\n            }\n        }\n\n        if (avatar !== this.buttonsAvatarSrc[num]) {\n            this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n            this.buttonsAvatarSrc[num] = avatar;\n        }\n\n        this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n        this.buttonsAvatar[num].style.visibility = 'visible';\n        this.divNicknames[num].style.visibility = 'visible';\n    }\n\n    // Gate\n    gateOpen(mmogameid, pin, kinduser, auserid) {\n        this.minFontSize *= 2;\n        this.maxFontSize *= 2;\n\n        this.mmogameid = mmogameid;\n        this.pin = pin;\n        this.auserid = auserid;\n        this.kinduser = kinduser;\n        this.gateComputeSizes();\n        this.areaTop = this.padding;\n\n        this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n        this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n        switch (kinduser) {\n            case 'moodle':\n                if (localStorage.getItem(\"nickname\") !== null && localStorage.getItem(\"avatarid\") !== null\n                    && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlayGame(auserid, localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n            case 'guid':\n                if (localStorage.getItem(\"auserid\") !== null && localStorage.getItem(\"nickname\") !== null\n                    && localStorage.getItem(\"avatarid\") !== null && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlayGame(localStorage.getItem(\"auserid\"), localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n        }\n\n        this.gateCreateScreen();\n    }\n\n    gatePlayGame(user, nickname, paletteid, avatarid) {\n        if (user === 0 && this.kinduser === 'guid') {\n            user = this.getUserGUID();\n        }\n        localStorage.setItem(\"auserid\", user);\n        localStorage.setItem(\"nickname\", nickname);\n        localStorage.setItem(\"paletteid\", paletteid);\n        localStorage.setItem(\"avatarid\", avatarid);\n\n        let instance = this;\n        require(['core/ajax'], function(Ajax) {\n            // Defining the parameters to be passed to the service\n            let params = {\n                mmogameid: instance.mmogameid,\n                kinduser: instance.kinduser,\n                user: user,\n                nickname: nickname,\n                avatarid: avatarid,\n                colorpaletteid: paletteid,\n            };\n\n            // Calling the service through the Moodle AJAX API\n            let getAttempt = Ajax.call([{\n                methodname: 'mmogametype_quiz_get_attempt',\n                args: params\n            }]);\n\n            // Handling the response\n            getAttempt[0].done(function(response) {\n                let json = {}; // Create an empty object r\n                response.ret.forEach(function(item) {\n                    json[item.key] = item.value; // Assign the value of each key-value pair to the object r\n                });\n                instance.openGame();\n                instance.colors = undefined;\n                instance.onServerGetAttempt(json, '');\n                // A instance.gateOnServerGetAttempt(JSON.parse(this.responseText), auserid);\n            }).fail(function(error) {\n                return error;\n            });\n        });\n\n        /* A\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.gateOnServerGetAttempt(JSON.parse(this.responseText), auserid);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let d = {\n            \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n            \"user\": auserid, \"nickname\": nickname, \"paletteid\": paletteid, \"avatarid\": avatarid\n        };\n        if (this.helpurl === undefined) {\n            d.helpurl = 1;\n        }\n        let data = JSON.stringify(d);\n        xmlhttp.send(data);*/\n    }\n\n    gateOnServerGetAttempt(json, auserid) {\n        if (json.errorcode !== undefined) {\n            return;\n        }\n\n        this.openGame(this.url, this.mmogameid, this.pin, auserid, this.kinduser, false);\n        this.onServerGetAttempt(json);\n    }\n\n    gateCreateScreen() {\n        this.vertical = window.innerWidth < window.innerHeight;\n\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n        this.removeDivMessage();\n\n        this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n        if (this.vertical) {\n            this.gateCreateScreenVertical();\n        } else {\n            this.gateCreateScreenHorizontal();\n        }\n    }\n\n    gateCreateScreenVertical() {\n        let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, labels);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n\n        bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n            this.getStringM('js_name') + \": \") + 2 * this.padding;\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = this.getStringM('js_palette');\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = this.getStringM('js_avatars');\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Vertical\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\", function() {\n            instance.gatePlayGame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                instance.edtNickname.value, instance.paletteid, instance.avatarid);\n        });\n    }\n\n    gateCreateScreenHorizontal() {\n        let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        const sName = this.getStringM('js_name') + \": \";\n        let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, labels);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n        let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n        bottom = this.gateCreateLabelEdit(0, bottom, newWidth - 2 * this.padding,\n            this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = this.getStringM('js_palette');\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        // Button refresh color palettes\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = this.getStringM('js_avatars');\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n\n        // Button refresh avatars\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        // Avatar\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Horizontal\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\",\n            function() {\n                instance.gatePlayGame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n    }\n\n    gateComputeLabelSize(fontSize, aLabel) {\n        let maxWidth = 0;\n        let maxHeight = 0;\n\n        for (let i = 0; i < aLabel.length; i++) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = aLabel[i];\n            label.style.whiteSpace = \"nowrap\";\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n            label.style.width = \"0px\";\n            label.style.height = \"0px\";\n            this.area.appendChild(label);\n\n            if (label.scrollWidth > maxWidth) {\n                maxWidth = label.scrollWidth;\n            }\n\n            if (label.scrollHeight > maxHeight) {\n                maxHeight = label.scrollHeight;\n            }\n            this.area.removeChild(label);\n        }\n\n        return [maxWidth, maxHeight];\n    }\n\n    gateCreateLabelEdit(left, top, width, fontSize, labelWidth, title) {\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n        let leftEdit = (left + labelWidth + this.padding);\n        const div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = (width - leftEdit - this.padding) + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return ret;\n    }\n\n    gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n        const label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        top += label.scrollHeight;\n\n        let leftEdit = left + 'px';\n        let div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return top + fontSize + this.padding;\n    }\n\n    gateCreateCode(left, top, width, fontSize, labelWidth) {\n        return this.gateCreateLabelEdit(left, top, width, fontSize, labelWidth, this.getStringM('js_code'));\n    }\n\n    gateShowAvatars(response, left, top, width, height, countX) {\n        if (!response.avatars || response.avatars.length === 0) {\n            return; // Exit early if no avatars exist\n        }\n\n        this.avatar = undefined;\n        const count = response.avatars.length;\n        let leftOriginal = left;\n        let w = Math.round(this.padding / 2) + \"px\";\n        for (let i = 0; i < count; i++) {\n            let avatarImagePath = 'assets/avatars/' + response.avatars[i];\n            let btn = this.createCenterImageButton(\n                this.area,\n                left, top,\n                this.iconSize - this.padding, this.iconSize - this.padding,\n                \"\",\n                avatarImagePath\n            );\n            btn.classList.add(\"mmogame_avatar\");\n            let id = response.avatarids[i];\n            btn.addEventListener(\"click\", () => {\n                this.gateUpdateAvatar(btn, id, w);\n            });\n\n            // Move left position after placing the button\n            left += this.iconSize;\n\n            // Reset left and move to the next row after filling countX buttons\n            if ((i + 1) % countX === 0) {\n                top += this.iconSize;\n                left = leftOriginal;\n            }\n        }\n    }\n\n    gateSendGetColorsAvatarsVertical(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                     gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n        let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n        let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n        let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n        let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n        if (!updateColors) {\n            countXcolors = countXcolors = 0;\n        }\n        if (!updateAvatars) {\n            countXavatars = countYavatars = 0;\n        }\n\n        let instance = this;\n        require(['core/ajax'], function(Ajax) {\n            // Defining the parameters to be passed to the service\n            let params = {\n                mmogameid: instance.mmogameid,\n                kinduser: instance.kinduser,\n                user: instance.auserid,\n                avatars: countXavatars * countYavatars,\n                colorpalettes: countXcolors * countYcolors,\n            };\n\n            // Calling the service through the Moodle AJAX API\n            let getAssets = Ajax.call([{\n                methodname: 'mod_mmogame_get_assets',\n                args: params\n            }]);\n\n            // Handling the response\n            getAssets[0].done(function(response) {\n                if (updateColors) {\n                    instance.gateShowColorPalettes(response, leftColors, topColors, gridWidthColors, gridHeightColors,\n                        countXcolors, countYcolors);\n                }\n                if (updateAvatars) {\n                    instance.gateShowAvatars(response, leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars);\n                }\n            }).fail(function(error) {\n                return error;\n            });\n        });\n    }\n\n    gateShowColorPalettes(response, left, top, width, height, countX, countY) {\n        let i = 0; // Counter for color palettes\n        const count = response.colorpalettes.length;\n        this.canvasColor = undefined;\n        const canvasSize = this.iconSize - this.padding * 3 / 2;\n        const parsedPalettes = response.colorpalettes.map(palette =>\n            palette.split(\",\").map(value => parseInt(value, 10) || 0)\n        );\n        for (let iy = 0; iy < countY; iy++) {\n            for (let ix = 0; ix < countX; ix++) {\n                // Check if we exceed available palettes or encounter invalid data\n                if (i >= count || !parsedPalettes[i] || !response.colorpaletteids[i]) {\n                    i++; // Increment and continue if invalid\n                    continue;\n                }\n\n                // Create a new canvas element\n                let canvas = document.createElement('canvas');\n                canvas.style.position = \"absolute\";\n                canvas.style.left = `${left + ix * this.iconSize}px`;\n                canvas.style.top = `${top + iy * this.iconSize}px`;\n                canvas.width = canvasSize;\n                canvas.height = canvasSize;\n                canvas.style.cursor = 'pointer';\n                canvas.classList.add(\"mmogame_color\");\n\n                // Append canvas to the area\n                this.area.appendChild(canvas);\n\n                // Render the color palette on the canvas\n                this.showColorPalette(canvas, parsedPalettes[i]);\n\n                // Get the palette ID and attach a click event listener\n                let id = response.colorpaletteids[i];\n                canvas.addEventListener(\"click\", ()=> {\n                    this.gateUpdateColorPalete(canvas, id);\n                });\n\n                i++;\n            }\n        }\n        this.area.classList.add(\"palete\");\n    }\n\n    gateUpdateColorPalete(canvas, id) {\n        if (this.canvasColor !== undefined) {\n            this.canvasColor.style.borderStyle = \"none\";\n        }\n        this.canvasColor = canvas;\n        canvas.style.borderStyle = \"outset\";\n        let w = Math.round(this.padding / 2) + \"px\";\n        canvas.style.borderLeftWidth = w;\n        canvas.style.borderTopWidth = w;\n        canvas.style.borderRightWidth = w;\n        canvas.style.borderBottomWidth = w;\n\n        this.paletteid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateAvatar(avatar, id, w) {\n        if (this.avatar !== undefined) {\n            this.avatar.style.borderStyle = \"none\";\n        }\n        this.avatar = avatar;\n        avatar.style.borderStyle = \"outset\";\n\n        avatar.style.borderLeftWidth = w;\n        avatar.style.borderTopWidth = w;\n        avatar.style.borderRightWidth = w;\n        avatar.style.borderBottomWidth = w;\n\n        this.avatarid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateSubmit() {\n        let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n        let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode && this.edtNickname.value.length > 0;\n\n        this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n    }\n    gateComputeSizes() {\n        this.computeSizes();\n        this.iconSize = Math.round(0.8 * this.iconSize);\n        this.padding = Math.round(0.8 * this.padding);\n    }\n    getStringM(name) {\n        return M.util.get_string(name, 'mmogame');\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","window","localStorage","getItem","isNaN","this","size","parseFloat","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","firstChild","removeChild","lastChild","area","undefined","openGame","computeSizes","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","style","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","getUserGUID","guid","uuid4","setItem","pad","length","uuid","Array","floor","random","map","x","toString","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","toUpperCase","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairP","createDivScorePercent","lineHeight","textAlign","border","boxShadow","colorScore","title","getStringM","colorScore2","disabled","labelScore","labelScore2","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","createButtonHelp","buttonHelp","readJsonFiles","json","mapFiles","Map","mapFilesWidth","mapFilesHeight","set","fileg1","filec1","width1","height1","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","id","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","message","divMessageHelp","areaTop","divMessageBackground","divMessage","createDivMessageStart","showHelpScreen","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","createDivName","labelWidth","inpWidth","value","areaHeight","divInp","type","autofocus","event","key","sendSetAvatar","createCheckbox","checkbox","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","avatarid","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","updateButtonsAvatar","avatar","sendGetAttempt","open","url","setRequestHeader","data","stringify","mmogameid","pin","kinduser","auserid","send","sendSetColorPalette","colorpaletteid","setColorsString","split","setColors","computeDifClock","time","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","lastIndexOf","pop","colorsBackground","buttonAvatarTop","gateOpen","gateComputeSizes","areaWidth","paletteid","gatePlayGame","gateCreateScreen","user","require","Ajax","params","call","methodname","args","done","response","forEach","onServerGetAttempt","fail","error","gateOnServerGetAttempt","errorcode","vertical","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateCode","edtCode","edt","gateUpdateSubmit","gateCreateLabelEditVertical","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatarsVertical","bottom2","btnSubmit","sName","sizeLabel","gateCreateLabelEdit","aLabel","align","leftEdit","divShortAnswer","gateShowAvatars","countX","avatars","count","leftOriginal","avatarImagePath","avatarids","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","colorpalettes","gateShowColorPalettes","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","colorpaletteids","cursor","gateUpdateColorPalete","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string"],"mappings":"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"}