{"version":3,"file":"mmogametypequizalone.min.js","sources":["../src/mmogametypequizalone.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mmogametype_quiz/mmogametypequiz'],\n    function(MmoGameTypeQuiz) {\n    return class MmoGameTypeQuizAlone extends MmoGameTypeQuiz {\n\n        // Score variables.\n        player;\n\n        constructor() {\n            super();\n            this.cIcons = this.hasHelp() ? 5 : 4;\n            this.type = 'alone';\n        }\n\n        createIconBar() {\n            let i = 0;\n            const step = this.iconSize + this.padding;\n\n            const nicknameHeight = Math.round(this.iconSize / 3);\n\n            let nickname, avatar;\n            [nickname, avatar] = this.createNicknameAvatar('mmogame-quiz-alone',\n                Math.round(this.padding + (i++) * step),\n                this.padding,\n                2 * this.iconSize + this.padding,\n                nicknameHeight,\n                this.padding + nicknameHeight,\n                this.iconSize);\n\n            this.player = this.createDivScorePercent(\n                'mmogame-quiz-alone',\n                this.padding + (i++) * step,\n                this.padding + nicknameHeight,\n                this.getContrastingColor(this.color),\n                true);\n            this.player.avatarElement = avatar;\n            this.player.nicknameElement = nickname;\n            this.player.cacheAvatar = '';\n            this.player.cacheNickname = '';\n            this.player.lblScore.title = this.getStringM('js_grade');\n            this.player.lblRank.title = this.getStringM('js_position_grade');\n\n            this.createButtonSound(this.padding + (i++) * step,\n                this.padding + nicknameHeight, this.iconSize);\n            if (this.hasHelp()) {\n                const button = this.createButtonHelp(this.padding + (i++) * step, this.padding);\n                button.addEventListener(\"click\", () => this.onClickHelp(this.buttonHelp));\n            }\n            this.createArea(2 * this.padding + this.iconSize + nicknameHeight);\n        }\n\n        processSetAnswer(json) {\n            this.correct = json.correct;\n\n            this.playAudio(json.iscorrect !== 0 ? this.audioYes : this.audioNo);\n\n            if (json.correct !== undefined && this.qtype === \"multichoice\") {\n                this.updateScreenAfterAnswerMultichoice();\n            }\n\n            this.disableInput();\n\n            if (this.btnSubmit) {\n                this.body.removeChild(this.btnSubmit);\n                this.btnSubmit = undefined;\n            }\n\n            const btn = super.createImageButton(\n                this.area,\n                'mmogame-quiz-next',\n                this.nextLeft,\n                this.nextTop,\n                0,\n                this.iconSize,\n                'assets/next.svg'\n            );\n            btn.addEventListener(\"click\", () => {\n                this.callGetAttempt();\n                this.area.removeChild(btn);\n            });\n\n            this.showScore(json);\n        }\n\n        onServerFastJson(response) {\n            const [state, timefastjson] = response.split(\"-\").map(Number);\n            if (timefastjson !== this.timefastjson || state !== this.state) {\n                this.sendGetAttempt({mmogameid: this.mmogameid, kinduser: this.kinduser, user: this.user});\n                return;\n            }\n\n            this.sendFastJSON();\n        }\n\n        /**\n         * Creates the game screen layout based on the current state.\n         *\n         * @param {Object} json - The game data used to build the screen.\n         * @param {boolean} disabled - Determines whether user input should be disabled.\n         */\n        createScreen(json, disabled) {\n            if (this.endofgame) {\n                // Display end-of-game message and final score\n                this.createDivMessage('mmogame-endofgame', this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            // Render the screen layout based on orientation (vertical or horizontal)\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(json, disabled);\n            }\n\n            // Display the current score\n            this.showScore(json);\n        }\n\n        /**\n         * Creates a horizontal layout for the quiz screen.\n         *\n         * @param {object} json\n         * @param {boolean} disabled - Whether user input should be disabled.\n         */\n        createScreenHorizontal(json, disabled) {\n            let maxHeight = this.areaRect.height - 2 * this.padding;\n\n            if (!this.hideSubmit) {\n                maxHeight -= this.iconSize + this.padding; // Reserve space for submit button\n            }\n\n            const width = Math.round((this.areaRect.width - this.padding) / 2);\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    (fontSize) => {\n                        defSize = this.createDefinition(0, 0, width - this.padding, 0, true, fontSize,\n                            json.definition);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = this.createAnswer(0, 0, width - this.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= this.areaRect.height) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, 0, false, this.fontSize, json.definition);\n\n            this.nextTop = this.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n\n            if (!this.hideSubmit) {\n                // Create and position the submit button\n                this.btnSubmit = this.createImageButton(\n                    this.body,\n                    'mmogame-quiz-submit',\n                    width + (width - this.iconSize) / 2,\n                    this.nextTop,\n                    0,\n                    this.iconSize,\n                    'assets/submit.svg',\n                    false,\n                    'submit'\n                );\n                this.btnSubmit.addEventListener('click', () => {\n                    this.sendAnswer();\n                });\n            }\n\n            // Adjust strip dimensions\n            this.stripLeft = width + this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        processGetAttempt(json) {\n            // Calculate time difference and set up the clock\n            this.computeDifClock(json.time, json.timestart, json.timeclose);\n\n            if (parseInt(json.state) === 0) {\n                json.qtype = '';\n                if (json.colors) {\n                    this.setColorsString(json.colors);\n                    this.createIconBar();\n                }\n                this.showScore(json);\n                this.createDivMessageStart(this.getStringM('js_wait_to_start'));\n                return;\n            }\n\n            if (this.player === undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            // Update the window title if a name is provided\n            if (json.name) {\n                document.title = json.name;\n            }\n\n            // Handle error messages from the server\n            if (json.errorcode) {\n                this.createDivMessage('mmogame-error', json.errorcode);\n                return;\n            }\n\n            // Update game state and user-related data\n            this.state = parseInt(json.state, 10);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson, 10);\n\n            const nicknameWidth = 2 * this.iconSize + this.padding;\n            const nicknameHeight = this.iconSize / 3;\n            this.updateNicknameAvatar(this.player, json.avatar, json.nickname, nicknameWidth, nicknameHeight);\n            this.attempt = json.attempt;\n\n            // Process question type and answers\n            this.qtype = json.qtype;\n            if (this.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = json.answerids;\n                json.answers.forEach((answer, index) => {\n                    this.answers[index] = this.repairP(answer); // Process each answer\n                });\n            }\n            this.answer = json.answer ?? undefined;\n\n            // Handle end-of-game scenarios\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            json.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            // A this.updateLabelTimer(); // Start or update the timer\n            this.sendFastJSON(); // Send fast JSON updates\n\n            if (this.btnSubmit) {\n                this.btnSubmit.style.visibility = \"hidden\";\n            }\n        }\n\n        showScore({sumscore, rank, percent, percentrank}) {\n            super.showScore(this.player, sumscore, rank, percent, percentrank, true);\n        }\n\n        showHelpScreen(div) {\n            div.innerHTML = `\n                <br>\n                <div>${this.getStringT('js_alone_help')}</div><br>\n\n                <table class=\"mmogame-table-help\">\n                    <tr>\n                        <td><img height=\"83\" src=\"assets/aduel/example2.png\" alt=\"\" /></td>\n                        <td>${this.getStringT('js_aduel_example2')}</td>\n                    </tr>\n                </table>\n            `;\n        }\n    };\n});"],"names":["define","MmoGameTypeQuiz","player","constructor","super","this","cIcons","hasHelp","type","createIconBar","i","step","iconSize","padding","nicknameHeight","Math","round","nickname","avatar","createNicknameAvatar","createDivScorePercent","getContrastingColor","color","avatarElement","nicknameElement","cacheAvatar","cacheNickname","lblScore","title","getStringM","lblRank","createButtonSound","createButtonHelp","addEventListener","onClickHelp","buttonHelp","createArea","processSetAnswer","json","correct","playAudio","iscorrect","audioYes","audioNo","undefined","qtype","updateScreenAfterAnswerMultichoice","disableInput","btnSubmit","body","removeChild","btn","createImageButton","area","nextLeft","nextTop","callGetAttempt","showScore","onServerFastJson","response","state","timefastjson","split","map","Number","sendFastJSON","sendGetAttempt","mmogameid","kinduser","user","createScreen","disabled","endofgame","createDivMessage","vertical","createScreenVertical","createScreenHorizontal","maxHeight","areaRect","height","hideSubmit","width","defSize","fontSize","findbest","minFontSize","maxFontSize","createDefinition","definition","ansSize","createAnswer","radioSize","sendAnswer","stripLeft","stripWidth","stripHeight","processGetAttempt","computeDifClock","time","timestart","timeclose","parseInt","colors","setColorsString","createDivMessageStart","name","document","errorcode","fastjson","nicknameWidth","updateNicknameAvatar","attempt","answers","answersID","answerids","forEach","answer","index","repairP","style","visibility","_ref","sumscore","rank","percent","percentrank","showHelpScreen","div","innerHTML","getStringT"],"mappings":"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"}