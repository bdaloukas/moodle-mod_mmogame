{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\ndefine([], function() {\n    return class mmoGame {\n    kindSound = 0;\n    state = 0;\n    body;\n    minFontSize;\n    maxFontSize;\n    fontSize;\n    avatarTop;\n    colorsBackground;\n    buttonAvatarTop;\n    buttonAvatarHeight;\n    colorScore;\n    colorScore2;\n    definition;\n    colorDefinition;\n    /**\n     * Basic class for games.\n     *\n     * @module mmogame\n     * @copyright 2024 Vasilis Daloukas\n     * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n     */\n    constructor() {\n        this.body = document.getElementsByTagName(\"body\")[0];\n        this.kindSound = window.localStorage.getItem('kindSound');\n        if (isNaN(this.kindSound)) {\n            this.kindSound = 0;\n        }\n        if (this.kindSound !== 0 && this.kindSound !== 1 && this.kindSound !== 2) {\n            this.kindSound = 0;\n        }\n\n        let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n        this.minFontSize = size;\n        this.maxFontSize = 2 * size;\n        this.fontSize = size;\n    }\n\n    hasHelp() {\n        return false;\n    }\n\n    removeBodyChilds() {\n        this.removeDivMessage();\n\n        while (this.body.firstChild) {\n            this.body.removeChild(this.body.lastChild);\n        }\n        this.area = undefined;\n    }\n\n    openGame(url, id, pin, auserid, kinduser, callOnAfterOpenGame) {\n        this.removeBodyChilds();\n        this.area = undefined;\n\n        this.game = [];\n\n        this.url = url;\n        this.mmogameid = id;\n        this.pin = pin;\n        this.kinduser = kinduser;\n        if (this.kinduser === undefined || this.kinduser === \"\") {\n            this.kinduser = \"usercode\";\n        }\n        this.auserid = auserid;\n        if (this.auserid === 0 && this.kinduser === 'guid') {\n            this.auserid = this.getUserGUID();\n        }\n\n        this.computeSizes();\n        if (!callOnAfterOpenGame) {\n            return;\n        }\n        if (this.kinduser === undefined) {\n            this.onAfterOpenGame();\n        } else {\n            this.onAfterOpenGame();\n        }\n    }\n/* A\n    createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n        let button = document.createElement(\"img\");\n        if (alt !== undefined && alt !== '') {\n            button.alt = alt;\n        }\n\n        button.classList.add(\"mmogame_imgbutton\");\n        button.setAttribute(\"role\", \"button\");\n\n        button.tabIndex = 0;\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n*/\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n    createImage(parent, left, top, width, height, filename) {\n        let button = document.createElement(\"img\");\n\n        button.tabIndex = 0;\n        button.style.position = \"absolute\";\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.draggable = false;\n\n        if (width !== 0) {\n            button.style.width = width + \"px\";\n        }\n        if (height !== 0) {\n            button.style.height = height + \"px\";\n        }\n        button.style.fontSize = height + \"px\";\n        if (filename !== undefined && filename !== '') {\n            button.src = filename;\n        }\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    createCenterImageButton(parent, left, top, width, height, classname, filename) {\n        let button = document.createElement(\"img\");\n        button.classList.add(\"mmogame_imgbutton\");\n        button.style.position = \"absolute\";\n        button.draggable = false;\n\n        const img = new Image();\n        img.onload = function() {\n            if (this.width === 0 || this.height === 0) {\n                this.width = this.height = 1;\n            }\n\n            if (this.width > 0 && this.height > 0) {\n                let mul = Math.min(width / this.width, height / this.height);\n                let w = Math.round(this.width * mul);\n                let h = Math.round(this.height * mul);\n\n                button.style.width = w + \"px\";\n                button.style.height = h + \"px\";\n                button.style.left = (left + width / 2 - w / 2) + \"px\";\n                button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                button.src = filename;\n                button.innerHTML = filename;\n                button.style.fontSize = height + \"px\";\n            }\n        };\n        if (filename !== undefined && filename !== \"\") {\n            img.style.left = left + \"px\";\n            img.style.top = top + \"px\";\n            img.style.visibility = 'hidden';\n            img.src = filename;\n        }\n        button.tabIndex = 0;\n        parent.appendChild(button);\n\n        return button;\n    }\n\n    updateImageButton(button, left, top, width, height, filename) {\n        button.src = filename;\n    }\n\n    createDiv(parent, left, top, width, height) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = width + \"px\";\n        div.style.height = height + \"px\";\n\n        parent.appendChild(div);\n\n        return div;\n    }\n\n    createDivColor(parent, left, top, width, height, color) {\n        let div = this.createDiv(parent, left, top, width, height);\n        div.style.background = this.getColorHex(color);\n\n        return div;\n    }\n\n    getMuteFile() {\n        if (this.kindSound === 0) {\n            return 'assets/sound-on-flat.png';\n        } else if (this.kindSound === 1) {\n            return 'assets/sound-off-flat.png';\n        } else if (this.kindSound === 2) {\n            return 'assets/speak.svg';\n        } else {\n            return 'assets/sound-on-flat.png';\n        }\n    }\n\n    playAudio(audio) {\n        if (this.kindSound !== 0 && audio !== null) {\n            if (audio.networkState === 1) {\n                audio.play();\n            }\n        }\n    }\n\n    autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n        let minHeight = 0.9 * height;\n        let low = Math.max(1, minFontSize);\n        width = Math.round(width);\n        height = Math.round(height);\n        let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n        let fitSize = low;\n        let fitHeight = 0;\n        let newHeight = 0;\n        let newWidth = 0;\n\n        for (let i = 0; i <= 10; i++) {\n            let el = document.createElement(\"div\");\n            el.style.left = 0;\n            el.style.top = 0;\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"visible\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n\n            let fontSize = (low + up) / 2;\n\n            el.style.fontSize = fontSize + \"px\";\n            newHeight = el.scrollHeight;\n            newWidth = el.scrollWidth - 1;\n\n            this.body.removeChild(el);\n\n            if (newWidth > width || newHeight > height) {\n                up = fontSize;\n            } else {\n                low = fontSize;\n                if (Math.abs(fitHeight - newHeight) <= 2) {\n                    break;\n                }\n                fitHeight = newHeight;\n                fitSize = fontSize;\n                if (newHeight > minHeight) {\n                    break;\n                }\n            }\n        }\n        item.style.fontSize = fitSize + \"px\";\n\n        if (newWidth > width || newHeight > height) {\n            this.autoResizeTextBr(item);\n            newWidth = item.scrollWidth;\n            newHeight = item.scrollHeight;\n            this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                minRatio);\n        } else {\n            return [item.scrollWidth - 1, item.scrollHeight];\n        }\n\n        let el = document.createElement(\"div\");\n        el.style.width = width + \"px\";\n        el.style.height = 0;\n        el.visibility = \"hidden\";\n        if (!wrap) {\n            el.style.whiteSpace = \"nowrap\";\n        }\n        el.innerHTML = item.innerHTML;\n        this.body.appendChild(el);\n        el.style.fontSize = item.style.fontSize;\n        let size = [el.scrollWidth - 1, el.scrollHeight];\n        this.body.removeChild(el);\n\n        return size;\n    }\n\n    autoResizeTextBr(item) {\n        let s = item.innerHTML;\n        let change = false;\n        while (s.startsWith('<br>')) {\n            s = s.substring(4);\n            change = true;\n        }\n        let pos1 = s.indexOf('<br>');\n        for (; ;) {\n            let pos = s.indexOf('<br>', pos1 + 4);\n            if (pos < 0) {\n                break;\n            }\n            let s2 = s.substring(pos1 + 4, pos);\n            if (!s2.trim()) {\n                s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                change = true;\n                pos = pos1;\n            }\n            pos1 = pos;\n        }\n\n        if (change) {\n            item.innerHTML = s;\n        }\n    }\n\n    autoResizeTextImage(item, subwidth, subheight, minRatio) {\n        if (subwidth === 0 && subheight === 0) {\n            return;\n        }\n        let s = item.innerHTML;\n\n        for (let pos = 0; ;) {\n            let pos2 = s.indexOf(\"<img \", pos);\n            if (pos2 < 0) {\n                break;\n            }\n            let pos3 = s.indexOf(\">\", pos2);\n            if (pos3 < 0) {\n                break;\n            }\n            let s2 = s.substring(pos2, pos3) + \" \";\n\n            let width = 0;\n            let height = 0;\n            let posw = s2.indexOf(\"width=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                    width = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n\n            posw = s2.indexOf(\"height=\");\n            if (posw >= 0) {\n                let posw2 = s2.indexOf(\" \", posw);\n                if (posw2 >= 0) {\n                    let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                    height = parseInt(num);\n                    s2 = s2.slice(0, posw) + s2.slice(posw2);\n                }\n            }\n            if (width > 0 && height > 0) {\n                let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n            }\n            s = s.slice(0, pos2) + s2 + s.slice(pos3);\n            pos = pos3;\n        }\n        item.innerHTML = s;\n    }\n\n    getUserGUID() {\n        let guid = window.localStorage.getItem('UserGUID');\n        if (guid === null || guid === '') {\n            guid = this.uuid4();\n            window.localStorage.setItem(\"UserGUID\", guid);\n        }\n\n        return guid;\n    }\n\n    pad(num, size) {\n        let s = num + \"\";\n        while (s.length < size) {\n            s = \"0\" + s;\n        }\n        return s;\n    }\n\n    uuid4() {\n        const uuid = new Array(36);\n\n        for (let i = 0; i < 36; i++) {\n            uuid[i] = Math.floor(Math.random() * 16);\n        }\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n\n        return uuid.map((x) => x.toString(16)).join('');\n    }\n\n    computeSizes() {\n        if (this.cIcons < 5 || this.cIcons === undefined) {\n            this.cIcons = 5;\n        }\n        this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n        this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n        this.padding = Math.round(this.iconSize / 10);\n        this.iconSize -= this.padding;\n    }\n\n    getIconSize() {\n        return this.iconSize;\n    }\n\n    getCopyrightHeight() {\n        return Math.round(this.getIconSize() / 3);\n    }\n\n    getPadding() {\n        return this.padding;\n    }\n\n    getColorHex(x) {\n        return '#' + ('0000' + x.toString(16).toUpperCase()).slice(-6);\n    }\n\n    getContrast(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256; // Blue.\n\n        return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    }\n\n    getColorGray(x) {\n        let r = Math.floor(x / 0x1000000) % 256, // Red.\n            g = Math.floor(x / 0x10000) % 256, // Green.\n            b = Math.floor(x / 0x100) % 256, // Blue.\n            yiq = (r * 299) + g * 587 + b * 114,\n            m = 255 * 299 + 255 * 587 + 255 * 114,\n            gray = Math.round(yiq * 255 / m);\n\n        return (gray * 0x10000) + (gray * 0x100) + gray;\n    }\n\n    getColorContrast(x) {\n        return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n    }\n\n    repairColors(colors) {\n\n        this.colors = colors;\n        let instance = this;\n        this.colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n\n        this.colorBackground = this.colors[0];\n        this.body.style.background = this.getColorHex(this.colorBackground);\n\n        return this.colors;\n    }\n/* A\n    repairHTML(s, mapFiles, mapFilesWidth, mapFilesHeight) {\n        if (s === undefined) {\n            return '';\n        }\n        while (s.slice(0, 4) === '<br>') {\n            s = s.slice(4).trim();\n        }\n        for (; ;) {\n            let pos = s.indexOf(\"@@GUID@@\");\n            if (pos < 0) {\n                break;\n            }\n            let pos2 = s.indexOf(\"\\\"\", pos);\n            if (pos2 > 0) {\n                let s2 = s.slice(pos2 + 1);\n                let posw = s2.indexOf(\"width=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n                posw = s2.indexOf(\"height=\");\n                if (posw !== 0) {\n                    let posw2 = s2.slice(posw + 1, posw + 2) === \"\\\"\"\n                        ? s2.indexOf(\"\\\"\", posw + 2)\n                        : s2.indexOf(\" \", posw + 2);\n                    if (posw2 !== 0) {\n                        s2 = s2.slice(0, posw) + s2.slice(posw2 + 1);\n                    }\n                }\n\n                let key = s.substring(pos + 8, pos2);\n                s2 = \" width=\\\"\" + mapFilesWidth.get(key) + \"\\\" \" + s2;\n                s2 = \" height=\\\"\" + mapFilesHeight.get(key) + \"\\\" \" + s2;\n\n                s = s.substring(0, pos) + \"data:image/png;base64, \" + mapFiles.get(key) + \"\\\"\" + s2;\n            }\n        }\n\n        return s;\n    }\n*/\n    repairP(s) {\n        if (s === undefined) {\n            return \"\";\n        }\n\n        // Remove <p> tags and replace </p> with <br />\n        let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n        // Remove <br> or <br/> at the end of the string\n        s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n        // Remove the <ol><br></ol> sequence if it exists\n        let pos = s2.indexOf('<ol><br></ol>');\n        if (pos >= 0) {\n            s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n        }\n\n        return s2;\n    }\n\n    createDivScorePercent(left, top, num) {\n        let button = document.createElement(\"button\");\n        button.style.position = \"absolute\";\n        button.classList.add(\"mmogame_button\");\n        button.style.left = left + \"px\";\n        button.style.top = top + \"px\";\n        button.style.width = this.iconSize + \"px\";\n        button.style.height = this.iconSize + \"px\";\n        button.style.lineHeight = this.iconSize + \"px\";\n        button.style.textAlign = \"center\";\n        button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n        button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n        if (num === 1) {\n            button.style.background = this.getColorHex(this.colorScore);\n            button.style.color = this.getColorContrast(this.colorScore);\n            button.title = this.getStringM('js_grade');\n        } else {\n            button.style.background = this.getColorHex(this.colorScore2);\n            button.style.color = this.getColorContrast(this.colorScore2);\n        }\n\n        this.body.appendChild(button);\n\n        button.innerHTML = '';\n        button.disabled = true;\n\n        let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n        div.style.lineHeight = (this.iconSize / 2) + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        if (num === 1) {\n            this.labelScore = div;\n            div.title = this.getStringM('js_grade');\n        } else {\n            this.labelScore2 = div;\n            div.title = this.getStringM('js_grade_opponent');\n        }\n\n        let h = this.iconSize / 3;\n        div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = this.getStringM('js_ranking_grade');\n        if (num === 1) {\n            this.labelScoreRank = div;\n        } else {\n            this.labelScoreRank2 = div;\n        }\n\n        div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.color = this.getColorContrast(this.colorScore);\n        div.title = this.getStringM('js_grade_last_question');\n        button.disabled = true;\n        if (num === 1) {\n            this.labelAddScore = div;\n        } else {\n            this.labelAddScore2 = div;\n        }\n\n        let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n        div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n        div.style.textAlign = \"center\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = h + \"px\";\n        div.style.lineHeight = h + \"px\";\n        div.style.color = label.style.color;\n        div.title = this.getStringM('js_ranking_percent');\n        if (num === 1) {\n            this.labelScoreRankB = div;\n        }\n\n        label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n        div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n            this.iconSize / 2);\n        div.style.textAlign = \"center\";\n        div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n        div.style.fontName = label.style.fontName;\n        div.style.fontSize = label.style.fontSize;\n        div.style.fontWeight = 'bold';\n        div.style.color = label.style.color;\n        div.title = this.getStringM('js_percent');\n        this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n        if (num === 1) {\n            this.labelScoreB = div;\n        }\n    }\n\n    createDivTimer(left, top, sizeIcon) {\n        let div = document.createElement(\"div\");\n        div.style.position = \"absolute\";\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.width = sizeIcon + \"px\";\n        div.style.height = sizeIcon + \"px\";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.lineHeight = sizeIcon + \"px\";\n        div.style.textAlign = \"center\";\n        div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n        div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n        div.name = \"timer\";\n        this.body.appendChild(div);\n        this.labelTimer = div;\n\n        div.innerHTML = '23:59';\n        this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n        div.innerHTML = '';\n        div.title = this.getStringM('js_question_time');\n    }\n\n    createButtonSound(left, top) {\n        this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n            this.getMuteFile());\n        this.buttonSound.alt = this.getStringM('js_sound');\n        let instance = this;\n        this.buttonSound.addEventListener(\"click\", function() {\n            instance.onClickSound(instance.buttonSound);\n        });\n\n        this.buttonSound.title = this.getStringM('js_sound');\n    }\n\n    onClickSound(btn) {\n        window.title = btn.src;\n        this.kindSound = (this.kindSound + 1) % 2;\n        window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n        btn.src = this.getMuteFile();\n    }\n\n    createButtonHelp(left, top) {\n        this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n        this.buttonHelp.alt = this.getStringM('js_help');\n    }\n\n    readJsonFiles(json) {\n        this.mapFiles = new Map();\n        this.mapFilesWidth = new Map();\n        this.mapFilesHeight = new Map();\n        this.mapFiles.set(json.fileg1, json.filec1);\n        this.mapFilesWidth.set(json.fileg1, json.width1);\n        this.mapFilesHeight.set(json.fileg1, json.height1);\n    }\n\n    findbest(low, up, fn) {\n        if (low < 1) {\n            low = 1;\n        }\n\n        let prevSize;\n        let fitSize = low;\n        let testSize;\n        for (let i = 0; i <= 10; i++) {\n            prevSize = low;\n            testSize = (low + up) / 2;\n\n            let cmp = fn(testSize);\n            if (cmp <= 0) {\n                fitSize = testSize;\n                low = testSize;\n            } else {\n                up = testSize;\n            }\n            if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                break;\n            }\n        }\n\n        return fitSize;\n    }\n\n    createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n        width -= 2 * this.padding;\n        let div = document.createElement(\"div\");\n\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n\n        div.style.fontSize = fontSize + \"px\";\n        // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n        div.innerHTML = this.definition;\n        div.style.textAlign = \"left\";\n\n        if (onlyMetrics) {\n            this.body.appendChild(div);\n            let ret = [div.scrollWidth - 1, div.scrollHeight];\n            this.body.removeChild(div);\n            return ret;\n        }\n\n        div.style.background = this.getColorHex(this.colorDefinition);\n        div.style.color = this.getColorContrast(this.colorDefinition);\n        div.style.left = left + \"px\";\n        div.style.top = top + \"px\";\n        div.style.paddingLeft = this.padding + \"px\";\n        div.style.paddingRight = this.padding + \"px\";\n        div.id = \"definition\";\n\n        this.area.appendChild(div);\n        let height = div.scrollHeight + this.padding;\n        div.style.height = height + \"px\";\n\n        this.definitionHeight = height;\n        this.divDefinition = div;\n\n        return [div.scrollWidth - 1, div.scrollHeight];\n    }\n\n    updateLabelTimer() {\n        if (this.labelTimer === undefined) {\n            return;\n        }\n        if (this.timeclose === 0 || this.timestart === 0) {\n            this.labelTimer.innerHTML = '';\n            return;\n        }\n\n        let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n        if (dif <= 0) {\n            dif = 0;\n            this.sendTimeout();\n        }\n        const minutes = Math.floor(Math.abs(dif) / 60);\n        const seconds = Math.abs(dif) % 60;\n        const prefix = dif < 0 ? \"-\" : \"\";\n        this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n        if (dif === 0) {\n            return;\n        }\n\n        let instance = this;\n        setTimeout(function() {\n            instance.updateLabelTimer();\n        }, 500);\n    }\n\n    createDivMessage(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        if (this.divMessageBackground === undefined) {\n            let div = this.createDiv(this.divMessageBackground, left, top, width, height);\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n        }\n\n        if (this.divMessage !== undefined) {\n        } else {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n        this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n\n        this.autoResizeText(this.divMessage, width, height, false, this.minFontSize, this.maxFontSize, 0.5);\n    }\n\n    createDivMessageStart(message) {\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n\n        let left = this.padding;\n        let top = this.areaTop;\n        let width = window.innerWidth - 2 * this.padding;\n        let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n        let height1 = height / 8;\n\n        if (this.divMessageBackground === undefined) {\n            let div = this.createDiv(this.divMessageBackground, left, top, width, height);\n            div.style.background = this.getColorHex(this.colorDefinition);\n            this.divMessageBackground = div;\n        }\n\n        if (this.divMessage === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            this.divMessage = div;\n        }\n        this.divMessage.innerHTML = message;\n        this.body.appendChild(this.divMessage);\n\n        this.autoResizeText(this.divMessage, width, height1, false, this.minFontSize, this.maxFontSize, 0.5);\n        top += (height1 - this.divMessage.scrollHeight) / 2;\n        this.divMessage.style.top = top + \"px\";\n\n        if (this.divMessageHelp === undefined) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.textAlign = \"left\";\n            div.style.width = (width - 2 * this.padding) + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            let top = this.iconSize + 3 * this.padding + height1;\n            div.style.top = (top + this.padding) + \"px\";\n            div.style.height = (height - height1) + \"px\";\n            this.divMessageHelp = div;\n            this.body.appendChild(this.divMessageHelp);\n\n            this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n        }\n    }\n\n    removeDivMessage() {\n        if (this.divMessage !== undefined) {\n            this.body.removeChild(this.divMessage);\n            this.divMessage = undefined;\n        }\n        if (this.divMessageHelp !== undefined) {\n            this.body.removeChild(this.divMessageHelp);\n            this.divMessageHelp = undefined;\n        }\n        if (this.divMessageBackground !== undefined) {\n            this.divMessageBackground.remove();\n            this.divMessageBackground = undefined;\n        }\n    }\n\n    disableButtons(buttons, disabled) {\n        for (let i = 0; i < buttons.length; i++) {\n            let btn = buttons[i];\n            if (btn !== undefined) {\n                if (disabled) {\n                    btn.classList.add(\"mmogame_imgbutton_disabled\");\n                } else {\n                    btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                }\n            }\n        }\n    }\n\n    repairNickname(nickname) {\n        if (nickname === undefined) {\n            return '';\n        }\n\n        let s = nickname;\n        if (s !== '') {\n            while (s.indexOf('_') !== -1) {\n                s = s.replace('_', ' ');\n            }\n        }\n\n        return s;\n    }\n\n    showScore(json) {\n        let s = json.sumscore === undefined ? '' : '<b>' + json.sumscore + '</b>';\n        if (this.labelScore.innerHTML !== s) {\n            this.labelScore.innerHTML = s;\n            let w = this.iconSize - 2 * this.padding;\n            this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRank.innerHTML !== json.rank) {\n            this.labelScoreRank.innerHTML = json.rank !== undefined ? json.rank : '';\n            this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        if (json.name !== undefined) {\n            window.document.title = (json.usercode !== undefined ? json.usercode : \"\") + \" \" + json.name;\n        }\n\n        s = json.addscore === undefined ? '' : json.addscore;\n        if (this.labelAddScore.innerHTML !== s) {\n            this.labelAddScore.innerHTML = s;\n            this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n        }\n\n        if (this.labelScoreRankB.innerHTML !== json.completedrank) {\n            this.labelScoreRankB.innerHTML = json.completedrank !== undefined ? json.completedrank : '';\n            this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n\n        s = json.percentcompleted !== undefined ? Math.round(100 * json.percentcompleted) + '%' : '';\n        if (this.labelScoreB.innerHTML !== s) {\n            this.labelScoreB.innerHTML = s;\n            this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n        }\n    }\n\n    createDivName(left, top, labelWidth, inpWidth, label, value) {\n        let div = this.createDiv(this.area, left, top, labelWidth, this.iconSize);\n        div.innerHTML = label + \": \";\n        div.style.whiteSpace = \"nowrap\";\n        div.style.textAlign = \"right\";\n        div.style.color = this.getColorContrast(this.colorBackground);\n        this.autoResizeText(div, labelWidth, this.areaHeight, false, this.minFontSize, this.maxFontSize, 1);\n\n        let divInp = document.createElement(\"input\");\n        divInp.style.position = \"absolute\";\n        divInp.style.width = inpWidth + \"px\";\n        divInp.style.type = \"text\";\n        divInp.style.fontSize = div.style.fontSize;\n        divInp.value = value;\n        divInp.style.left = (left + labelWidth + this.padding) + \"px\";\n        divInp.style.top = top + \"px\";\n        divInp.autofocus = true;\n        divInp.style.background = this.getColorHex(this.colorBackground);\n        divInp.style.color = this.getColorContrast(this.colorBackground);\n        this.area.appendChild(divInp);\n        divInp.autofocus = true;\n        let instance = this;\n        divInp.addEventListener(\"keydown\", function() {\n            if (event.key === \"Enter\") {\n                instance.sendSetAvatar(divInp.value, -1);\n            }\n        });\n\n        return divInp;\n    }\n\n    createCheckbox(parent, left, top, width, height, value) {\n        let checkbox = document.createElement('input');\n        checkbox.type = \"checkbox\";\n        checkbox.value = value;\n        checkbox.style.position = \"absolute\";\n        checkbox.style.left = left + \"px\";\n        checkbox.style.top = top + \"px\";\n        checkbox.style.width = width + \"px\";\n        checkbox.style.height = height + \"px\";\n\n        parent.appendChild(checkbox);\n\n        return checkbox;\n    }\n\n    showColorPalette(canvas, colors) {\n        let ctx = canvas.getContext(\"2d\");\n        let width = canvas.width;\n        let height = canvas.height;\n        let strip = width / 5;\n        let instance = this;\n\n        colors.sort(function(a, b) {\n            return instance.getContrast(a) - instance.getContrast(b);\n        });\n        for (let i = 0; i < 5; i++) {\n            ctx.fillStyle = this.getColorHex(colors[i]);\n            ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n        }\n\n        ctx.strokeStyle = \"#FFFFFF\";\n        ctx.lineWidth = 1;\n        ctx.strokeRect(0, 0, width, height);\n    }\n\n    sendSetAvatar(nickname, avatarid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                let json = JSON.parse(this.responseText);\n                instance.updateButtonsAvatar(1, json.avatar);\n                instance.sendGetAttempt();\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setavatar\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, 'avatarid': avatarid, 'nickname': nickname\n        });\n        xmlhttp.send(data);\n    }\n\n    sendSetColorPalette(colorpaletteid) {\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.colors = undefined;\n                instance.openGame(instance.url, instance.mmogameid, instance.pin, instance.auserid, instance.kinduser);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let data = JSON.stringify({\n            \"command\": \"setcolorpalette\", \"mmogameid\": this.mmogameid, \"pin\": this.pin,\n            'kinduser': this.kinduser, \"user\": this.auserid, \"id\": colorpaletteid\n        });\n        xmlhttp.send(data);\n    }\n\n    computeDifClock(json) {\n        if (json.time !== undefined) {\n            this.difClock = ((new Date()).getTime() - json.time) / 1000;\n        }\n\n        this.computeTimeStartClose(json);\n    }\n\n    computeTimeStartClose(json) {\n        if (json.timestart !== undefined) {\n            this.timestart = parseInt(json.timestart) !== 0 ? parseInt(json.timestart) + this.difClock : 0;\n            this.timeclose = parseInt(json.timeclose) !== 0 ? parseInt(json.timeclose) + this.difClock : 0;\n        } else {\n            this.timestart = 0;\n            this.timeclose = 0;\n        }\n    }\n\n    drawRadio(canvas, color1, color2) {\n        let ctx = canvas.getContext(\"2d\");\n        let size = canvas.width;\n        ctx.clearRect(0, 0, size, canvas.height);\n\n        ctx.beginPath();\n        ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.getColorHex(color1);\n        ctx.fill();\n\n        let checked = canvas.classList.contains(\"checked\");\n        if (checked) {\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color2);\n            ctx.fill();\n        }\n    }\n\n    createRadiobox(parent, size, color1, color2, checked, disabled) {\n        let canvas = document.createElement('canvas');\n        canvas.style.position = \"absolute\";\n        canvas.width = size;\n        canvas.height = size;\n        parent.appendChild(canvas);\n        if (checked) {\n            canvas.classList.add(\"checked\");\n        }\n        if (disabled) {\n            canvas.classList.add(\"disabled\");\n        }\n\n        this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n        return canvas;\n    }\n\n    createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n        if (widthNickName === 0) {\n            widthNickName = this.iconSize;\n        }\n        if (heightNickName === 0) {\n            heightNickName = this.iconSize - this.buttonAvatarHeight;\n        }\n        if (this.buttonsAvatarLeft === undefined) {\n            this.buttonsAvatarLeft = [];\n        }\n        this.buttonsAvatarLeft[num] = left;\n\n        if (this.buttonsAvatarSrc === undefined) {\n            this.buttonsAvatarSrc = [];\n        }\n        this.buttonsAvatarSrc[num] = \"\";\n\n        if (this.nicknames === undefined) {\n            this.nicknames = [];\n        }\n        this.nicknames[num] = \"\";\n\n        if (this.buttonsAvatar === undefined) {\n            this.buttonsAvatar = [];\n        }\n        this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n        if (num === 2 && this.avatarTop !== undefined) {\n            this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n        }\n\n        if (this.divNicknames === undefined) {\n            this.divNicknames = [];\n        }\n        if (this.divNicknamesWidth === undefined) {\n            this.divNicknamesWidth = [];\n        }\n        if (this.divNicknamesHeight === undefined) {\n            this.divNicknamesHeight = [];\n        }\n        this.divNicknamesWidth[num] = widthNickName;\n        this.divNicknamesHeight[num] = heightNickName;\n\n        this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n    }\n\n    updateButtonsAvatar(num, avatar, nickname) {\n        if (avatar === undefined) {\n            avatar = \"\";\n        }\n        if (nickname === undefined) {\n            nickname = \"\";\n        }\n\n        if (avatar === \"\" && nickname === \"\") {\n            this.buttonsAvatar[num].style.visibility = 'hidden';\n            this.divNicknames[num].style.visibility = 'hidden';\n            return;\n        }\n\n        if (this.nicknames[num] !== nickname || nickname === \"\") {\n            this.nicknames[num] = nickname;\n            let s = nickname;\n\n            if (nickname.length === 0) {\n                s = avatar;\n                let pos = s.lastIndexOf(\"/\");\n                if (pos >= 0) {\n                    s = s.slice(pos + 1);\n                }\n                pos = s.lastIndexOf(\".\");\n                if (pos >= 0) {\n                    s = s.slice(0, pos);\n                }\n                const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n            }\n            s = this.repairNickname(s);\n            if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                this.divNicknames[num].innerHTML = s;\n                this.divNicknames[num].style.textAlign = \"center\";\n                this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                    0, 0, 1);\n            }\n        }\n\n        if (avatar !== this.buttonsAvatarSrc[num]) {\n            this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n            this.buttonsAvatarSrc[num] = avatar;\n        }\n\n        this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n        this.buttonsAvatar[num].style.visibility = 'visible';\n        this.divNicknames[num].style.visibility = 'visible';\n    }\n\n    // Gate\n    gateOpen(mmogameid, pin, kinduser, auserid) {\n        this.minFontSize *= 2;\n        this.maxFontSize *= 2;\n\n        this.mmogameid = mmogameid;\n        this.pin = pin;\n        this.auserid = auserid;\n        this.kinduser = kinduser;\n        this.gateComputeSizes();\n        this.areaTop = this.padding;\n\n        this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n        this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n        switch (kinduser) {\n            case 'moodle':\n                if (localStorage.getItem(\"nickname\") !== null && localStorage.getItem(\"avatarid\") !== null\n                    && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlaygame(auserid, localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n            case 'guid':\n                if (localStorage.getItem(\"auserid\") !== null && localStorage.getItem(\"nickname\") !== null\n                    && localStorage.getItem(\"avatarid\") !== null && localStorage.getItem(\"paletteid\") !== null) {\n                    let avatarid = parseInt(localStorage.getItem(\"avatarid\"));\n                    let paletteid = parseInt(localStorage.getItem(\"paletteid\"));\n                    this.gatePlaygame(localStorage.getItem(\"auserid\"), localStorage.getItem(\"nickname\"), paletteid, avatarid);\n                    return;\n                }\n                break;\n        }\n\n        this.gateCreateScreen();\n    }\n\n    gatePlaygame(auserid, nickname, paletteid, avatarid) {\n        if (auserid === 0 && this.kinduser === 'guid') {\n            auserid = this.getUserGUID();\n        }\n        localStorage.setItem(\"auserid\", auserid);\n        localStorage.setItem(\"nickname\", nickname);\n        localStorage.setItem(\"paletteid\", paletteid);\n        localStorage.setItem(\"avatarid\", avatarid);\n\n        let xmlhttp = new XMLHttpRequest();\n        let instance = this;\n        xmlhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                instance.gateOnServerGetAttempt(JSON.parse(this.responseText), auserid);\n            }\n        };\n\n        xmlhttp.open(\"POST\", this.url, true);\n        xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n        let d = {\n            \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n            \"user\": auserid, \"nickname\": nickname, \"paletteid\": paletteid, \"avatarid\": avatarid\n        };\n        if (this.helpurl === undefined) {\n            d.helpurl = 1;\n        }\n        let data = JSON.stringify(d);\n        xmlhttp.send(data);\n    }\n\n    gateOnServerGetAttempt(json, auserid) {\n        if (json.errorcode !== undefined) {\n            return;\n        }\n\n        this.openGame(this.url, this.mmogameid, this.pin, auserid, this.kinduser, false);\n        this.onServerGetAttempt(json);\n    }\n\n    gateCreateScreen() {\n        this.vertical = window.innerWidth < window.innerHeight;\n\n        if (this.area !== undefined) {\n            this.body.removeChild(this.area);\n            this.area = undefined;\n        }\n        this.removeDivMessage();\n\n        this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n        if (this.vertical) {\n            this.gateCreateScreenVertical();\n        } else {\n            this.gateCreateScreenHorizontal();\n        }\n    }\n\n    gateCreateScreenVertical() {\n        let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, labels);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n\n        bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n            this.getStringM('js_name') + \": \") + 2 * this.padding;\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = this.getStringM('js_palette');\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = this.getStringM('js_avatars');\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                    0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Vertical\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\", function() {\n            instance.gatePlaygame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                instance.edtNickname.value, instance.paletteid, instance.avatarid);\n        });\n    }\n\n    gateCreateScreenHorizontal() {\n        let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n        let maxWidth = this.areaWidth;\n        let instance = this;\n        let size;\n\n        const sName = this.getStringM('js_name') + \": \";\n        let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n        this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n            size = instance.gateComputeLabelSize(fontSize, labels);\n\n            if (size[0] >= maxWidth) {\n                return 1;\n            }\n            let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n            let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n            let n = Math.floor(heightColors / instance.iconSize);\n            if (n === 0) {\n                return 1;\n            }\n            let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n            let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n            return computedHeight < maxHeight ? -1 : 1;\n        });\n\n        let gridWidthColors = maxWidth - this.padding;\n        let gridWidthAvatars = maxWidth - this.padding;\n        let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n        let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n        let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n        let rest = gridHeightColors - newHeight;\n        gridHeightColors = newHeight;\n        let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n        let bottom;\n        if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n            bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n            this.edtCode = this.edt;\n            this.edtCode.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n        } else {\n            bottom = 0;\n        }\n        let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n        bottom = this.gateCreateLabelEdit(0, bottom, newWidth - 2 * this.padding,\n            this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n        this.edtNickname = this.edt;\n        this.edtNickname.addEventListener(\"keyup\", function() {\n            instance.gateUpdateSubmit();\n        });\n\n        let label1 = document.createElement(\"label\");\n        label1.style.position = \"absolute\";\n        label1.innerHTML = this.getStringM('js_palette');\n        label1.style.font = \"FontAwesome\";\n        label1.style.fontSize = this.fontSize + \"px\";\n        label1.style.width = \"0px\";\n        label1.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label1);\n\n        // Button refresh color palettes\n        let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n            '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    true, false);\n            }\n        );\n        label1.style.left = 0;\n        label1.style.color = this.getColorContrast(this.colorBackground);\n        label1.style.top = bottom + \"px\";\n        bottom += this.fontSize + this.padding;\n\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n        label.innerHTML = this.getStringM('js_avatars');\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = this.fontSize + \"px\";\n        label.style.width = \"0 px\";\n        label.style.whiteSpace = \"nowrap\";\n        this.area.appendChild(label);\n\n        // Button refresh avatars\n        btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n            this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n        btn.addEventListener(\"click\",\n            function() {\n                let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                while (elements[0]) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n\n                instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                    bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                    false, true);\n            }\n        );\n\n        // Avatar\n        label.style.left = \"0 px\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n        label.style.top = (bottom + gridHeightColors) + \"px\";\n\n        // Horizontal\n        this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n            0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n            gridHeightAvatars);\n\n        let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n        this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n            this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n        this.btnSubmit.style.visibility = 'hidden';\n        this.btnSubmit.addEventListener(\"click\",\n            function() {\n                instance.gatePlaygame(instance.edtCode === undefined ? instance.auserid : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n    }\n\n    gateComputeLabelSize(fontSize, aLabel) {\n        let maxWidth = 0;\n        let maxHeight = 0;\n\n        for (let i = 0; i < aLabel.length; i++) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = aLabel[i];\n            label.style.whiteSpace = \"nowrap\";\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n            label.style.width = \"0px\";\n            label.style.height = \"0px\";\n            this.area.appendChild(label);\n\n            if (label.scrollWidth > maxWidth) {\n                maxWidth = label.scrollWidth;\n            }\n\n            if (label.scrollHeight > maxHeight) {\n                maxHeight = label.scrollHeight;\n            }\n            this.area.removeChild(label);\n        }\n\n        return [maxWidth, maxHeight];\n    }\n\n    gateCreateLabelEdit(left, top, width, fontSize, labelWidth, title) {\n        let label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n        let leftEdit = (left + labelWidth + this.padding);\n        const div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = (width - leftEdit - this.padding) + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return ret;\n    }\n\n    gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n        const label = document.createElement(\"label\");\n        label.style.position = \"absolute\";\n\n        label.innerHTML = title;\n\n        label.style.font = \"FontAwesome\";\n        label.style.fontSize = fontSize + \"px\";\n\n        this.area.appendChild(label);\n\n        label.style.position = \"absolute\";\n        label.style.left = left + \"px\";\n        label.style.top = top + \"px\";\n        label.style.width = labelWidth + \"px\";\n        label.style.align = \"left\";\n        label.style.color = this.getColorContrast(this.colorBackground);\n\n        top += label.scrollHeight;\n\n        let leftEdit = left + 'px';\n        let div = document.createElement(\"input\");\n        this.divShortAnswer = div;\n        div.style.position = \"absolute\";\n        div.style.width = width + \"px\";\n        div.style.type = \"text\";\n        div.style.fontSize = fontSize + \"px\";\n\n        div.style.left = leftEdit + \"px\";\n        div.style.top = top + \"px\";\n        div.autofocus = true;\n\n        this.area.appendChild(div);\n        this.edt = div;\n\n        return top + fontSize + this.padding;\n    }\n\n    gateCreateCode(left, top, width, fontSize, labelWidth) {\n        return this.gateCreateLabelEdit(left, top, width, fontSize, labelWidth, this.getStringM('js_code'));\n    }\n\n    gateShowAvatars(response, left, top, width, height, countX) {\n        if (!response.avatars || response.avatars.length === 0) {\n            return; // Exit early if no avatars exist\n        }\n\n        this.avatar = undefined;\n        const count = response.avatars.length;\n        let leftOriginal = left;\n        let w = Math.round(this.padding / 2) + \"px\";\n        for (let i = 0; i < count; i++) {\n            let avatarImagePath = 'assets/avatars/' + response.avatars[i];\n            let btn = this.createCenterImageButton(\n                this.area,\n                left, top,\n                this.iconSize - this.padding, this.iconSize - this.padding,\n                \"\",\n                avatarImagePath\n            );\n            btn.classList.add(\"mmogame_avatar\");\n            let id = response.avatarids[i];\n            btn.addEventListener(\"click\", () => {\n                this.gateUpdateAvatar(btn, id, w);\n            });\n\n            // Move left position after placing the button\n            left += this.iconSize;\n\n            // Reset left and move to the next row after filling countX buttons\n            if ((i + 1) % countX === 0) {\n                top += this.iconSize;\n                left = leftOriginal;\n            }\n        }\n    }\n\n    gateSendGetColorsAvatarsVertical(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                     gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n        let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n        let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n        let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n        let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n        if (!updateColors) {\n            countXcolors = countXcolors = 0;\n        }\n        if (!updateAvatars) {\n            countXavatars = countYavatars = 0;\n        }\n\n        let instance = this;\n        require(['core/ajax'], function(Ajax) {\n            // Defining the parameters to be passed to the service\n            let params = {\n                mmogameid: instance.mmogameid,\n                kinduser: instance.kinduser,\n                user: instance.auserid,\n                avatars: countXavatars * countYavatars,\n                colorpalettes: countXcolors * countYcolors,\n            };\n\n            // Calling the service through the Moodle AJAX API\n            let getAssets = Ajax.call([{\n                methodname: 'mod_mmogame_get_assets',\n                args: params\n            }]);\n\n            // Handling the response\n            getAssets[0].done(function(response) {\n                if (updateColors) {\n                    instance.gateShowColorPalettes(response, leftColors, topColors, gridWidthColors, gridHeightColors,\n                        countXcolors, countYcolors);\n                }\n                if (updateAvatars) {\n                    instance.gateShowAvatars(response, leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars);\n                }\n            }).fail(function(error) {\n                return error;\n            });\n        });\n    }\n\n    gateShowColorPalettes(response, left, top, width, height, countX, countY) {\n        let i = 0; // Counter for color palettes\n        const count = response.colorpalettes.length;\n        this.canvasColor = undefined;\n        const canvasSize = this.iconSize - this.padding * 3 / 2;\n        const parsedPalettes = response.colorpalettes.map(palette =>\n            palette.split(\",\").map(value => parseInt(value, 10) || 0)\n        );\n        for (let iy = 0; iy < countY; iy++) {\n            for (let ix = 0; ix < countX; ix++) {\n                // Check if we exceed available palettes or encounter invalid data\n                if (i >= count || !parsedPalettes[i] || !response.colorpaletteids[i]) {\n                    i++; // Increment and continue if invalid\n                    continue;\n                }\n\n                // Create a new canvas element\n                let canvas = document.createElement('canvas');\n                canvas.style.position = \"absolute\";\n                canvas.style.left = `${left + ix * this.iconSize}px`;\n                canvas.style.top = `${top + iy * this.iconSize}px`;\n                canvas.width = canvasSize;\n                canvas.height = canvasSize;\n                canvas.style.cursor = 'pointer';\n                canvas.classList.add(\"mmogame_color\");\n\n                // Append canvas to the area\n                this.area.appendChild(canvas);\n\n                // Render the color palette on the canvas\n                this.showColorPalette(canvas, parsedPalettes[i]);\n\n                // Get the palette ID and attach a click event listener\n                let id = response.colorpaletteids[i];\n                canvas.addEventListener(\"click\", ()=> {\n                    this.gateUpdateColorPalete(canvas, id);\n                });\n\n                i++;\n            }\n        }\n        this.area.classList.add(\"palete\");\n    }\n\n    gateUpdateColorPalete(canvas, id) {\n        if (this.canvasColor !== undefined) {\n            this.canvasColor.style.borderStyle = \"none\";\n        }\n        this.canvasColor = canvas;\n        canvas.style.borderStyle = \"outset\";\n        let w = Math.round(this.padding / 2) + \"px\";\n        canvas.style.borderLeftWidth = w;\n        canvas.style.borderTopWidth = w;\n        canvas.style.borderRightWidth = w;\n        canvas.style.borderBottomWidth = w;\n\n        this.paletteid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateAvatar(avatar, id, w) {\n        if (this.avatar !== undefined) {\n            this.avatar.style.borderStyle = \"none\";\n        }\n        this.avatar = avatar;\n        avatar.style.borderStyle = \"outset\";\n\n        avatar.style.borderLeftWidth = w;\n        avatar.style.borderTopWidth = w;\n        avatar.style.borderRightWidth = w;\n        avatar.style.borderBottomWidth = w;\n\n        this.avatarid = id;\n\n        this.gateUpdateSubmit();\n    }\n\n    gateUpdateSubmit() {\n        let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n        let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode && this.edtNickname.value.length > 0;\n\n        this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n    }\n    gateComputeSizes() {\n        this.computeSizes();\n        this.iconSize = Math.round(0.8 * this.iconSize);\n        this.padding = Math.round(0.8 * this.padding);\n    }\n    getStringM(name) {\n        return M.util.get_string(name, 'mmogame');\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","window","localStorage","getItem","isNaN","this","size","parseFloat","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","firstChild","removeChild","lastChild","area","undefined","openGame","url","id","pin","auserid","kinduser","callOnAfterOpenGame","game","mmogameid","getUserGUID","computeSizes","onAfterOpenGame","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","style","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","guid","uuid4","setItem","pad","length","uuid","Array","floor","random","map","x","toString","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","toUpperCase","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairP","createDivScorePercent","lineHeight","textAlign","border","boxShadow","colorScore","title","getStringM","colorScore2","disabled","labelScore","labelScore2","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","createButtonHelp","buttonHelp","readJsonFiles","json","mapFiles","Map","mapFilesWidth","mapFilesHeight","set","fileg1","filec1","width1","height1","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","message","divMessageHelp","areaTop","divMessageBackground","divMessage","createDivMessageStart","showHelpScreen","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","createDivName","labelWidth","inpWidth","value","areaHeight","divInp","type","autofocus","event","key","sendSetAvatar","createCheckbox","checkbox","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","avatarid","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","updateButtonsAvatar","avatar","sendGetAttempt","open","setRequestHeader","data","stringify","send","sendSetColorPalette","colorpaletteid","computeDifClock","time","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","lastIndexOf","split","pop","colorsBackground","buttonAvatarTop","gateOpen","gateComputeSizes","areaWidth","paletteid","gatePlaygame","gateCreateScreen","gateOnServerGetAttempt","d","helpurl","errorcode","onServerGetAttempt","vertical","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateCode","edtCode","edt","gateUpdateSubmit","gateCreateLabelEditVertical","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatarsVertical","bottom2","btnSubmit","sName","sizeLabel","gateCreateLabelEdit","aLabel","align","leftEdit","divShortAnswer","gateShowAvatars","response","countX","avatars","count","leftOriginal","avatarImagePath","avatarids","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","require","Ajax","params","user","colorpalettes","call","methodname","args","done","gateShowColorPalettes","fail","error","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","colorpaletteids","cursor","gateUpdateColorPalete","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string"],"mappings":"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"}