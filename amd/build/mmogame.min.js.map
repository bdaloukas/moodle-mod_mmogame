{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class MmoGame {\n        kindSound = 0;\n        state = 0;\n        body;\n        minFontSize;\n        maxFontSize;\n        fontSize;\n        avatarTop;\n        colorsBackground;\n        buttonAvatarTop;\n        buttonAvatarHeight;\n        colorScore;\n        colorScore2;\n        definition;\n        colorDefinition;\n\n        /**\n         * Basic class for games.\n         *\n         * @module mmogame\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n        constructor() {\n            this.body = document.getElementsByTagName(\"body\")[0];\n            this.kindSound = 0;\n\n            let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n            this.minFontSize = size;\n            this.maxFontSize = 2 * size;\n            this.fontSize = size;\n        }\n\n        hasHelp() {\n            return false;\n        }\n\n        removeBodyChilds() {\n            this.removeDivMessage();\n\n            while (this.body.firstChild) {\n                this.body.removeChild(this.body.lastChild);\n            }\n            this.area = undefined;\n        }\n\n        openGame() {\n            this.removeBodyChilds();\n            this.area = undefined;\n            this.computeSizes();\n        }\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n\n        createImage(parent, left, top, width, height, filename) {\n            let button = document.createElement(\"img\");\n\n            button.tabIndex = 0;\n            button.style.position = \"absolute\";\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.draggable = false;\n\n            if (width !== 0) {\n                button.style.width = width + \"px\";\n            }\n            if (height !== 0) {\n                button.style.height = height + \"px\";\n            }\n\n            button.style.fontSize = height + \"px\";\n            if (filename !== undefined && filename !== '') {\n                button.src = filename;\n            }\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        createCenterImageButton(parent, left, top, width, height, classname, filename) {\n            let button = document.createElement(\"img\");\n            button.classList.add(\"mmogame_imgbutton\");\n            button.style.position = \"absolute\";\n            button.draggable = false;\n\n            const img = new Image();\n            img.onload = function() {\n                if (this.width === 0 || this.height === 0) {\n                    this.width = this.height = 1;\n                }\n\n                if (this.width > 0 && this.height > 0) {\n                    let mul = Math.min(width / this.width, height / this.height);\n                    let w = Math.round(this.width * mul);\n                    let h = Math.round(this.height * mul);\n\n                    button.style.width = w + \"px\";\n                    button.style.height = h + \"px\";\n                    button.style.left = (left + width / 2 - w / 2) + \"px\";\n                    button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                    button.src = filename;\n                    button.innerHTML = filename;\n                    button.style.fontSize = height + \"px\";\n                }\n            };\n            if (filename !== undefined && filename !== \"\") {\n                img.style.left = left + \"px\";\n                img.style.top = top + \"px\";\n                img.style.visibility = 'hidden';\n                img.src = filename;\n            }\n            button.tabIndex = 0;\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        updateImageButton(button, left, top, width, height, filename) {\n            button.src = filename;\n        }\n\n        createDiv(parent, left, top, width, height) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n\n            parent.appendChild(div);\n\n            return div;\n        }\n\n        createDivColor(parent, left, top, width, height, color) {\n            let div = this.createDiv(parent, left, top, width, height);\n            div.style.background = this.getColorHex(color);\n\n            return div;\n        }\n\n        getMuteFile() {\n            if (this.kindSound === 0) {\n                return 'assets/sound-on-flat.png';\n            } else if (this.kindSound === 1) {\n                return 'assets/sound-off-flat.png';\n            } else if (this.kindSound === 2) {\n                return 'assets/speak.svg';\n            } else {\n                return 'assets/sound-on-flat.png';\n            }\n        }\n\n        playAudio(audio) {\n            if (this.kindSound !== 0 && audio !== null) {\n                if (audio.networkState === 1) {\n                    audio.play();\n                }\n            }\n        }\n\n        autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n            let minHeight = 0.9 * height;\n            let low = Math.max(1, minFontSize);\n            width = Math.round(width);\n            height = Math.round(height);\n            let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n            let fitSize = low;\n            let fitHeight = 0;\n            let newHeight = 0;\n            let newWidth = 0;\n\n            for (let i = 0; i <= 10; i++) {\n                let el = document.createElement(\"div\");\n                el.style.left = 0;\n                el.style.top = 0;\n                el.style.width = width + \"px\";\n                el.style.height = 0;\n                el.visibility = \"visible\";\n                if (!wrap) {\n                    el.style.whiteSpace = \"nowrap\";\n                }\n                el.innerHTML = item.innerHTML;\n                this.body.appendChild(el);\n\n                let fontSize = (low + up) / 2;\n\n                el.style.fontSize = fontSize + \"px\";\n                newHeight = el.scrollHeight;\n                newWidth = el.scrollWidth - 1;\n\n                this.body.removeChild(el);\n\n                if (newWidth > width || newHeight > height) {\n                    up = fontSize;\n                } else {\n                    low = fontSize;\n                    if (Math.abs(fitHeight - newHeight) <= 2) {\n                        break;\n                    }\n                    fitHeight = newHeight;\n                    fitSize = fontSize;\n                    if (newHeight > minHeight) {\n                        break;\n                    }\n                }\n            }\n            item.style.fontSize = fitSize + \"px\";\n\n            if (newWidth > width || newHeight > height) {\n                this.autoResizeTextBr(item);\n                newWidth = item.scrollWidth;\n                newHeight = item.scrollHeight;\n                this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                    minRatio);\n            } else {\n                return [item.scrollWidth - 1, item.scrollHeight];\n            }\n\n            let el = document.createElement(\"div\");\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"hidden\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n            el.style.fontSize = item.style.fontSize;\n            let size = [el.scrollWidth - 1, el.scrollHeight];\n            this.body.removeChild(el);\n\n            return size;\n        }\n\n        autoResizeTextBr(item) {\n            let s = item.innerHTML;\n            let change = false;\n            while (s.startsWith('<br>')) {\n                s = s.substring(4);\n                change = true;\n            }\n            let pos1 = s.indexOf('<br>');\n            for (; ;) {\n                let pos = s.indexOf('<br>', pos1 + 4);\n                if (pos < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos1 + 4, pos);\n                if (!s2.trim()) {\n                    s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                    change = true;\n                    pos = pos1;\n                }\n                pos1 = pos;\n            }\n\n            if (change) {\n                item.innerHTML = s;\n            }\n        }\n\n        autoResizeTextImage(item, subwidth, subheight, minRatio) {\n            if (subwidth === 0 && subheight === 0) {\n                return;\n            }\n            let s = item.innerHTML;\n\n            for (let pos = 0; ;) {\n                let pos2 = s.indexOf(\"<img \", pos);\n                if (pos2 < 0) {\n                    break;\n                }\n                let pos3 = s.indexOf(\">\", pos2);\n                if (pos3 < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos2, pos3) + \" \";\n\n                let width = 0;\n                let height = 0;\n                let posw = s2.indexOf(\"width=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                        width = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n\n                posw = s2.indexOf(\"height=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                        height = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n                if (width > 0 && height > 0) {\n                    let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                    let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                    let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                    s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n                }\n                s = s.slice(0, pos2) + s2 + s.slice(pos3);\n                pos = pos3;\n            }\n            item.innerHTML = s;\n        }\n\n        pad(num, size) {\n            let s = num + \"\";\n            while (s.length < size) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        uuid4() {\n            const uuid = new Array(36);\n            const hexDigits = '0123456789abcdef'; // Lookup table for hexadecimal digits\n\n            for (let i = 0; i < 36; i++) {\n                uuid[i] = Math.floor(Math.random() * 16); // Generate random numbers for each position\n            }\n\n            // Insert dashes at predefined positions\n            uuid[8] = '-';\n            uuid[13] = '-';\n            uuid[18] = '-';\n            uuid[23] = '-';\n\n            // Set specific bits to comply with UUIDv4 standards\n            uuid[14] = 4; // The 13th position represents version 4 (0100 in binary)\n            // eslint-disable-next-line no-bitwise\n            uuid[19] = (uuid[19] & 0x3) | 0x8; // The 17th position must start with '10' in binary\n\n            // Convert numbers to hexadecimal without using toString\n            this.user = uuid\n                .map((x) => (typeof x === 'string' ? x : hexDigits[x])) // Convert numeric values to hex using lookup table\n                .join('');\n\n            let options = {userGUID: this.user};\n            let instance = this;\n            this.saveOptions(options)\n                .then(function() {\n                    return true;\n                })\n                .catch(error => {\n                    instance.showError(error.message);\n                    return false;\n                });\n        }\n\n        computeSizes() {\n            if (this.cIcons < 5 || this.cIcons === undefined) {\n                this.cIcons = 5;\n            }\n            this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n            this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n            this.padding = Math.round(this.iconSize / 10);\n            this.iconSize -= this.padding;\n        }\n\n        getIconSize() {\n            return this.iconSize;\n        }\n\n        getCopyrightHeight() {\n            return Math.round(this.getIconSize() / 3);\n        }\n\n        getPadding() {\n            return this.padding;\n        }\n\n        getColorHex(x) {\n            const hexDigits = '0123456789ABCDEF'; // Lookup table for hexadecimal digits\n            const hexArray = [];\n\n            for (let i = 0; i < 6; i++) {\n                // Extract the least significant nibble and find its hex representation\n                // eslint-disable-next-line no-bitwise\n                hexArray.unshift(hexDigits[x & 0xF]);\n                // eslint-disable-next-line no-bitwise\n                x >>= 4; // Shift right by 4 bits to process the next nibble\n            }\n\n            // Join the hex digits and prefix with '#'\n            return '#' + hexArray.join('');\n        }\n\n        getContrast(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256; // Blue.\n\n            return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        }\n\n        getColorGray(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256, // Blue.\n                yiq = (r * 299) + g * 587 + b * 114,\n                m = 255 * 299 + 255 * 587 + 255 * 114,\n                gray = Math.round(yiq * 255 / m);\n\n            return (gray * 0x10000) + (gray * 0x100) + gray;\n        }\n\n        getColorContrast(x) {\n            return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n        }\n\n        repairColors(colors) {\n\n            this.colors = colors;\n            let instance = this;\n            this.colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n\n            this.colorBackground = this.colors[0];\n            this.body.style.background = this.getColorHex(this.colorBackground);\n\n            return this.colors;\n        }\n\n        repairP(s) {\n            if (s === undefined) {\n                return \"\";\n            }\n\n            // Remove <p> tags and replace </p> with <br />\n            let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n            // Remove <br> or <br/> at the end of the string\n            s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n            // Remove the <ol><br></ol> sequence if it exists\n            let pos = s2.indexOf('<ol><br></ol>');\n            if (pos >= 0) {\n                s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n            }\n\n            return s2;\n        }\n\n        createDivButton(left, top) {\n            let button = document.createElement(\"button\");\n            button.style.position = \"absolute\";\n            button.classList.add(\"mmogame_button\");\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.style.width = this.iconSize + \"px\";\n            button.style.height = this.iconSize + \"px\";\n            button.style.lineHeight = this.iconSize + \"px\";\n            button.style.textAlign = \"center\";\n\n            return button;\n        }\n        createDivScore(left, top, num) {\n            let button = this.createDivButton(left, top);\n\n            button.style.borderRadius = this.iconSize + \"px\";\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            button.title = this.getStringM('js_grade');\n            button.alt = this.getStringM('js_grade');\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n            } else {\n                this.buttonScore2 = button;\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '100 %';\n            this.autoResizeText(button, this.iconSize, this.iconSize, false, 0, 0, 1);\n            button.innerHTML = '';\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade');\n            if (num === 1) {\n                this.labelScore = div;\n            } else {\n                this.labelScore2 = div;\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            button.disabled = true;\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            this.createAddScore(left, top + this.iconSize - h, this.iconSize, h, num);\n/* A\n            div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n*/\n        }\n\n        createDivScorePercent(left, top, num) {\n            let button = this.createDivButton(left, top);\n\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n                button.title = this.getStringM('js_grade');\n            } else {\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '';\n            button.disabled = true;\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            if (num === 1) {\n                this.labelScore = div;\n                div.title = this.getStringM('js_grade');\n            } else {\n                this.labelScore2 = div;\n                div.title = this.getStringM('js_grade_opponent');\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_ranking_grade');\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            this.createAddScore(left, top + this.iconSize - h, this.iconSize / 2, h);\n/* A\ndiv = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n*/\n            let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n            div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = h + \"px\";\n            div.style.lineHeight = h + \"px\";\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_ranking_percent');\n            if (num === 1) {\n                this.labelScoreRankB = div;\n            }\n\n            label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n            div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n                this.iconSize / 2);\n            div.style.textAlign = \"center\";\n            div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = label.style.fontSize;\n            div.style.fontWeight = 'bold';\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_percent');\n            this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n            if (num === 1) {\n                this.labelScoreB = div;\n            }\n        }\n\n        createDivTimer(left, top, sizeIcon) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = sizeIcon + \"px\";\n            div.style.height = sizeIcon + \"px\";\n            div.style.whiteSpace = \"nowrap\";\n            div.style.lineHeight = sizeIcon + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n            div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n            div.name = \"timer\";\n            this.body.appendChild(div);\n            this.labelTimer = div;\n\n            div.innerHTML = '23:59';\n            this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n            div.innerHTML = '';\n            div.title = this.getStringM('js_question_time');\n        }\n\n        createButtonSound(left, top) {\n            this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n                this.getMuteFile());\n            this.buttonSound.alt = this.getStringM('js_sound');\n            let instance = this;\n            this.buttonSound.addEventListener(\"click\", function() {\n                instance.onClickSound(instance.buttonSound);\n            });\n\n            this.buttonSound.title = this.getStringM('js_sound');\n        }\n\n        onClickSound(btn) {\n            window.title = btn.src;\n            this.kindSound = (this.kindSound + 1) % 2;\n            window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n            btn.src = this.getMuteFile();\n        }\n\n        createButtonHelp(left, top) {\n            this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n            this.buttonHelp.alt = this.getStringM('js_help');\n        }\n\n        findbest(low, up, fn) {\n            if (low < 1) {\n                low = 1;\n            }\n\n            let prevSize;\n            let fitSize = low;\n            let testSize;\n            for (let i = 0; i <= 10; i++) {\n                prevSize = low;\n                testSize = (low + up) / 2;\n\n                let cmp = fn(testSize);\n                if (cmp <= 0) {\n                    fitSize = testSize;\n                    low = testSize;\n                } else {\n                    up = testSize;\n                }\n                if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                    break;\n                }\n            }\n\n            return fitSize;\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined) {\n                return;\n            }\n            if (this.timeclose === 0 || this.timestart === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n\n            let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n            if (dif <= 0) {\n                dif = 0;\n                this.sendTimeout();\n            }\n            const minutes = Math.floor(Math.abs(dif) / 60);\n            const seconds = Math.abs(dif) % 60;\n            const prefix = dif < 0 ? \"-\" : \"\";\n            this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n            if (dif === 0) {\n                return;\n            }\n\n            let instance = this;\n            setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        createDivMessage(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            this.createDivMessageDo(left, top, width, height, message, height);\n\n            this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n        }\n\n        createDivMessageStart(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            let height1 = height / 8;\n\n            this.createDivMessageDo(left, top, width, height, message, height1);\n\n            top += (height1 - this.divMessage.scrollHeight) / 2;\n            this.divMessage.style.top = top + \"px\";\n\n            if (this.divMessageHelp === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"left\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                let top = this.iconSize + 3 * this.padding + height1;\n                div.style.top = (top + this.padding) + \"px\";\n                div.style.height = (height - height1) + \"px\";\n                this.divMessageHelp = div;\n                this.body.appendChild(this.divMessageHelp);\n\n                this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n            }\n        }\n\n        removeDivMessage() {\n            if (this.divMessage !== undefined) {\n                this.body.removeChild(this.divMessage);\n                this.divMessage = undefined;\n            }\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n            if (this.divMessageBackground !== undefined) {\n                this.divMessageBackground.remove();\n                this.divMessageBackground = undefined;\n            }\n        }\n\n        disableButtons(buttons, disabled) {\n            for (let i = 0; i < buttons.length; i++) {\n                let btn = buttons[i];\n                if (btn !== undefined) {\n                    if (disabled) {\n                        btn.classList.add(\"mmogame_imgbutton_disabled\");\n                    } else {\n                        btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                    }\n                }\n            }\n        }\n\n        repairNickname(nickname) {\n            if (nickname === undefined) {\n                return '';\n            }\n\n            let s = nickname;\n            if (s !== '') {\n                while (s.indexOf('_') !== -1) {\n                    s = s.replace('_', ' ');\n                }\n            }\n\n            return s;\n        }\n\n        showScore(sumscore, rank, name, usercode, addscore, completedrank, percentcompleted) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n\n        showColorPalette(canvas, colors) {\n            let ctx = canvas.getContext(\"2d\");\n            let width = canvas.width;\n            let height = canvas.height;\n            let strip = width / 5;\n            let instance = this;\n\n            colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n            for (let i = 0; i < 5; i++) {\n                ctx.fillStyle = this.getColorHex(colors[i]);\n                ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n            }\n\n            ctx.strokeStyle = \"#FFFFFF\";\n            ctx.lineWidth = 1;\n            ctx.strokeRect(0, 0, width, height);\n        }\n\n        setColorsString(s) {\n            let a = [0x9B7ED9, 0x79F2F2, 0x67BF5A, 0xD0F252, 0xBF5B21];\n            if (s !== undefined && s.length >= 0) {\n                let b = s.split(\",\");\n                if (b.length === 5) {\n                    a = b;\n                    for (let i = 0; i < 5; i++) {\n                        a[i] = parseInt(a[i]);\n                    }\n                }\n            }\n            this.setColors(a);\n        }\n\n        computeDifClock(time, timeStart, timeClose) {\n            if (time !== undefined) {\n                this.difClock = ((new Date()).getTime() - time) / 1000;\n            }\n\n            this.computeTimeStartClose(timeStart, timeClose);\n        }\n\n        computeTimeStartClose(timeStart, timeClose) {\n            if (timeStart !== undefined) {\n                this.timestart = parseInt(timeStart) !== 0 ? parseInt(timeStart) + this.difClock : 0;\n                this.timeclose = parseInt(timeClose) !== 0 ? parseInt(timeClose) + this.difClock : 0;\n            } else {\n                this.timestart = 0;\n                this.timeclose = 0;\n            }\n        }\n\n        drawRadio(canvas, color1, color2) {\n            let ctx = canvas.getContext(\"2d\");\n            let size = canvas.width;\n            ctx.clearRect(0, 0, size, canvas.height);\n\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color1);\n            ctx.fill();\n\n            let checked = canvas.classList.contains(\"checked\");\n            if (checked) {\n                ctx.beginPath();\n                ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n                ctx.fillStyle = this.getColorHex(color2);\n                ctx.fill();\n            }\n        }\n\n        createRadiobox(parent, size, color1, color2, checked, disabled) {\n            let canvas = document.createElement('canvas');\n            canvas.style.position = \"absolute\";\n            canvas.width = size;\n            canvas.height = size;\n            parent.appendChild(canvas);\n            if (checked) {\n                canvas.classList.add(\"checked\");\n            }\n            if (disabled) {\n                canvas.classList.add(\"disabled\");\n            }\n\n            this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n            return canvas;\n        }\n\n        createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n            if (widthNickName === 0) {\n                widthNickName = this.iconSize;\n            }\n            if (heightNickName === 0) {\n                heightNickName = this.iconSize - this.buttonAvatarHeight;\n            }\n            if (this.buttonsAvatarLeft === undefined) {\n                this.buttonsAvatarLeft = [];\n            }\n            this.buttonsAvatarLeft[num] = left;\n\n            if (this.buttonsAvatarSrc === undefined) {\n                this.buttonsAvatarSrc = [];\n            }\n            this.buttonsAvatarSrc[num] = \"\";\n\n            if (this.nicknames === undefined) {\n                this.nicknames = [];\n            }\n            this.nicknames[num] = \"\";\n\n            if (this.buttonsAvatar === undefined) {\n                this.buttonsAvatar = [];\n            }\n            this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n            if (num === 2 && this.avatarTop !== undefined) {\n                this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n            }\n\n            if (this.divNicknames === undefined) {\n                this.divNicknames = [];\n            }\n            if (this.divNicknamesWidth === undefined) {\n                this.divNicknamesWidth = [];\n            }\n            if (this.divNicknamesHeight === undefined) {\n                this.divNicknamesHeight = [];\n            }\n            this.divNicknamesWidth[num] = widthNickName;\n            this.divNicknamesHeight[num] = heightNickName;\n\n            this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n        }\n\n        updateButtonsAvatar(num, avatar, nickname) {\n            if (avatar === undefined) {\n                avatar = \"\";\n            }\n            if (nickname === undefined) {\n                nickname = \"\";\n            }\n\n            if (avatar === \"\" && nickname === \"\") {\n                this.buttonsAvatar[num].style.visibility = 'hidden';\n                this.divNicknames[num].style.visibility = 'hidden';\n                return;\n            }\n\n            if (this.nicknames[num] !== nickname || nickname === \"\") {\n                this.nicknames[num] = nickname;\n                let s = nickname;\n\n                if (nickname.length === 0) {\n                    s = avatar;\n                    let pos = s.lastIndexOf(\"/\");\n                    if (pos >= 0) {\n                        s = s.slice(pos + 1);\n                    }\n                    pos = s.lastIndexOf(\".\");\n                    if (pos >= 0) {\n                        s = s.slice(0, pos);\n                    }\n                    const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                    s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n                }\n                s = this.repairNickname(s);\n                if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                    this.divNicknames[num].innerHTML = s;\n                    this.divNicknames[num].style.textAlign = \"center\";\n                    this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                    this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                        0, 0, 1);\n                }\n            }\n\n            if (avatar !== this.buttonsAvatarSrc[num]) {\n                this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                    this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n                this.buttonsAvatarSrc[num] = avatar;\n            }\n\n            this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n            this.buttonsAvatar[num].style.visibility = 'visible';\n            this.divNicknames[num].style.visibility = 'visible';\n        }\n\n        gateOpen(mmogameid, pin, kinduser, user, url) {\n            this.url = url;\n            this.minFontSize *= 2;\n            this.maxFontSize *= 2;\n\n            // Saves parameters to class variables.\n            this.mmogameid = mmogameid;\n            this.pin = pin;\n            this.kinduser = kinduser;\n            this.user = user;\n            this.gateComputeSizes();\n\n            this.areaTop = this.padding;\n            this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n            this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n            let instance = this;\n            this.getOptions().then(function(options) {\n                if (!options.hasOwnProperty('kindsound')) {\n                    options.kindsound = 0;\n                }\n                instance.kindSound = options.kindSound === 1 || options.kindSound === 2 ? options.kindSound : 0;\n\n                if (!options.hasOwnProperty('nickname')) {\n                    options.nickname = '';\n                }\n                options.avatarid = options.hasOwnProperty('avatarid') && options.avatarid !== undefined ? options.avatarid : 0;\n                options.paletteid = options.hasOwnProperty('paletteid') ? options.paletteid : 0;\n\n                switch (kinduser) {\n                    case 'moodle':\n                        if (options.nickname !== '' && options.avatarid !== 0 && options.paletteid !== 0) {\n                            instance.gatePlayGame(false, options.nickname, options.paletteid, options.avatarid);\n                            return true;\n                        }\n                        break;\n                    case 'guid':\n                        if (!options.hasOwnProperty('userGUID')) {\n                            options.userGUID = '';\n                        }\n                        if (options.userGUID.length >= 10 && options.nickname !== '' && options.avatarid !== 0 &&\n                            options.paletteid !== 0) {\n                            instance.user = options.userGUID;\n                            instance.gatePlayGame(false, options.nickname, options.paletteid, options.avatarid);\n                            return true;\n                        }\n                        break;\n                }\n                // Call gateCreateScren to ask user for nickname, colors, avatar.\n                instance.gateCreateScreen();\n                return true;\n            }).catch(error => {\n                instance.showError(error.message);\n                return false;\n            });\n        }\n\n        gatePlayGame(save, nickname, paletteid, avatarid) {\n            if (this.kinduser === 'guid') {\n                if (this.user === '') {\n                    this.uuid4();\n                }\n            }\n\n            if (!save) {\n                this.nickname = nickname;\n                this.paletteid = paletteid;\n                this.avatarid = avatarid;\n                this.callGetAttempt({nickname: nickname, colorpaletteid: paletteid, avatarid: avatarid});\n                return;\n            }\n\n            let options = {nickname: nickname, avatarid: avatarid, paletteid: paletteid};\n\n            let instance = this;\n            this.saveOptions(options)\n                .then(function() {\n                    instance.nickname = nickname;\n                    instance.paletteid = paletteid;\n                    instance.avatarid = avatarid;\n                    instance.callGetAttempt();\n                    return true;\n                })\n                .catch(error => {\n                    instance.showError(error.message);\n                    return false;\n                });\n        }\n\n        callGetAttempt(extraparams) {\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    nickname: null,\n                    colorpaletteid: null,\n                    avatarid: null,\n                };\n                if (extraparams !== undefined) {\n                    params = {...params, ...extraparams};\n                }\n                // Calling the service through the Moodle AJAX API\n                let getAttempt = Ajax.call([{\n                    methodname: 'mmogametype_quiz_get_attempt',\n                    args: params,\n                }]);\n\n                // Handling the response\n                getAttempt[0].done(function(response) {\n                    if (extraparams !== undefined && extraparams.colorpaletteid !== undefined) {\n                        instance.openGame();\n                        instance.colors = undefined;\n                    }\n                    instance.processGetAttempt(JSON.parse(response));\n                }).fail(function(error) {\n                    instance.createDivMessage(error.message);\n                    return error;\n                });\n            });\n        }\n\n        gateCreateScreen() {\n            this.vertical = window.innerWidth < window.innerHeight;\n\n            this.createArea();\n\n            if (this.vertical) {\n                this.gateCreateScreenVertical();\n            } else {\n                this.gateCreateScreenHorizontal();\n            }\n        }\n\n        gateCreateScreenVertical() {\n            let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // A bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code') + \": \") + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n\n            bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n                this.getStringM('js_name') + \": \") + 2 * this.padding;\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            this.gateCreateScreenPalette(bottom, gridWidthColors, gridHeightColors,\n                gridWidthAvatars, gridHeightAvatars);\n\n            bottom += this.fontSize + this.padding;\n\n            // Vertical\n            this.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n\n            this.gateCreateButtonSubmit(maxWidth, bottom2);\n        }\n\n        gateCreateScreenHorizontal() {\n            let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const sName = this.getStringM('js_name') + \": \";\n            let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // B bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code')) + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n            let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n            bottom = this.gateCreateLabelEditHorizontal(0, bottom, newWidth - 2 * this.padding,\n                this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n            this.edtNickname = this.edt;\n\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            // Button refresh color palettes\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n\n            // Button refresh avatars\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            // Avatar\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Horizontal\n            this.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\",\n                function() {\n                    if (instance.edtCode !== undefined) {\n                        instance.user = instance.edtCode.value;\n                    }\n                    instance.gatePlayGame(true, instance.edtNickname.value, instance.paletteid, instance.avatarid);\n                });\n        }\n\n        gateComputeLabelSize(fontSize, aLabel) {\n            let maxWidth = 0;\n            let maxHeight = 0;\n\n            for (let i = 0; i < aLabel.length; i++) {\n                const label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.innerHTML = aLabel[i];\n                label.style.whiteSpace = \"nowrap\";\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                label.style.width = \"0px\";\n                label.style.height = \"0px\";\n                this.area.appendChild(label);\n\n                if (label.scrollWidth > maxWidth) {\n                    maxWidth = label.scrollWidth;\n                }\n\n                if (label.scrollHeight > maxHeight) {\n                    maxHeight = label.scrollHeight;\n                }\n                this.area.removeChild(label);\n            }\n\n            return [maxWidth, maxHeight];\n        }\n\n        gateCreateLabel(left, top, labelWidth, fontSize, title) {\n            const label = document.createElement('label');\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            return label;\n        }\n        gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n            const label = this.gateCreateLabel(left, top, labelWidth, fontSize, title);\n\n            top += label.scrollHeight;\n\n            this.edt = this.gateCreateInput(left, top, width, fontSize);\n\n            return top + fontSize + this.padding;\n        }\n\n        gateShowAvatars(left, top, width, height, countX, avatarids, avatars) {\n            if (!avatars || avatars.length === 0) {\n                return; // Exit early if no avatars exist\n            }\n\n            this.avatar = undefined;\n            const count = avatars.length;\n            let leftOriginal = left;\n            let w = Math.round(this.padding / 2) + \"px\";\n            for (let i = 0; i < count; i++) {\n                let avatarImagePath = 'assets/avatars/' + avatars[i];\n                let btn = this.createCenterImageButton(\n                    this.area,\n                    left, top,\n                    this.iconSize - this.padding, this.iconSize - this.padding,\n                    \"\",\n                    avatarImagePath\n                );\n                btn.classList.add(\"mmogame_avatar\");\n                let id = avatarids[i];\n                btn.addEventListener(\"click\", () => {\n                    this.gateUpdateAvatar(btn, id, w);\n                });\n\n                // Move left position after placing the button\n                left += this.iconSize;\n\n                // Reset left and move to the next row after filling countX buttons\n                if ((i + 1) % countX === 0) {\n                    top += this.iconSize;\n                    left = leftOriginal;\n                }\n            }\n        }\n\n        gateSendGetColorsAvatars(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                         gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n            let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n            let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n            let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n            let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n            if (!updateColors) {\n                countXcolors = countXcolors = 0;\n            }\n            if (!updateAvatars) {\n                countXavatars = countYavatars = 0;\n            }\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Defining the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    avatars: countXavatars * countYavatars,\n                    colorpalettes: countXcolors * countYcolors,\n                };\n\n                // Calling the service through the Moodle AJAX API\n                let getAssets = Ajax.call([{\n                    methodname: 'mod_mmogame_get_assets',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAssets[0].done(function(response) {\n                    if (updateColors) {\n                        instance.gateShowColorPalettes(leftColors, topColors, gridWidthColors,\n                            gridHeightColors, countXcolors, countYcolors, response.colorpaletteids, response.colorpalettes);\n                    }\n                    if (updateAvatars) {\n                        instance.gateShowAvatars(leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars,\n                            response.avatarids, response.avatars);\n                    }\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateShowColorPalettes(left, top, width, height, countX, countY, colorpaletteids, colorpalettes) {\n            let i = 0; // Counter for color palettes\n            const count = colorpalettes.length;\n            this.canvasColor = undefined;\n            const canvasSize = this.iconSize - this.padding * 3 / 2;\n            const parsedPalettes = colorpalettes.map(palette =>\n                palette.split(\",\").map(value => parseInt(value, 10) || 0)\n            );\n            for (let iy = 0; iy < countY; iy++) {\n                for (let ix = 0; ix < countX; ix++) {\n                    // Check if we exceed available palettes or encounter invalid data\n                    if (i >= count || !parsedPalettes[i] || !colorpaletteids[i]) {\n                        i++; // Increment and continue if invalid\n                        continue;\n                    }\n\n                    // Create a new canvas element\n                    let canvas = document.createElement('canvas');\n                    canvas.style.position = \"absolute\";\n                    canvas.style.left = `${left + ix * this.iconSize}px`;\n                    canvas.style.top = `${top + iy * this.iconSize}px`;\n                    canvas.width = canvasSize;\n                    canvas.height = canvasSize;\n                    canvas.style.cursor = 'pointer';\n                    canvas.classList.add(\"mmogame_color\");\n\n                    // Append canvas to the area\n                    this.area.appendChild(canvas);\n\n                    // Render the color palette on the canvas\n                    this.showColorPalette(canvas, parsedPalettes[i]);\n\n                    // Get the palette ID and attach a click event listener\n                    let id = colorpaletteids[i];\n                    canvas.addEventListener(\"click\", () => {\n                        this.gateUpdateColorPalette(canvas, id);\n                    });\n\n                    i++;\n                }\n            }\n            this.area.classList.add(\"palette\");\n        }\n\n        gateUpdateColorPalette(canvas, id) {\n            if (this.canvasColor !== undefined) {\n                this.canvasColor.style.borderStyle = \"none\";\n            }\n            this.canvasColor = canvas;\n            canvas.style.borderStyle = \"outset\";\n            let w = Math.round(this.padding / 2) + \"px\";\n            canvas.style.borderLeftWidth = w;\n            canvas.style.borderTopWidth = w;\n            canvas.style.borderRightWidth = w;\n            canvas.style.borderBottomWidth = w;\n\n            this.paletteid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateAvatar(avatar, id, w) {\n            if (this.avatar !== undefined) {\n                this.avatar.style.borderStyle = \"none\";\n            }\n            this.avatar = avatar;\n            avatar.style.borderStyle = \"outset\";\n\n            avatar.style.borderLeftWidth = w;\n            avatar.style.borderTopWidth = w;\n            avatar.style.borderRightWidth = w;\n            avatar.style.borderBottomWidth = w;\n\n            this.avatarid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateSubmit() {\n            let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n            let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode\n                && this.edtNickname.value.length > 0;\n\n            this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n        }\n\n        gateComputeSizes() {\n            this.computeSizes();\n            this.iconSize = Math.round(0.8 * this.iconSize);\n            this.padding = Math.round(0.8 * this.padding);\n        }\n\n        getStringM(name) {\n            return M.util.get_string(name, 'mmogame');\n        }\n\n        gateCreateLabelEditHorizontal(left, top, width, fontSize, labelWidth, title) {\n            const label = this.gateCreateLabel(left, top, labelWidth, fontSize, title);\n\n            let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n            let leftEdit = (left + labelWidth + this.padding);\n            this.edt = this.gateCreateInput(leftEdit, top, width - leftEdit - this.padding, fontSize);\n\n            return ret;\n        }\n\n        createDivMessageDo(left, top, width, height, message, heightmessage) {\n            if (this.divMessageBackground === undefined) {\n                let div = this.createDiv(this.body, left, top, width, height);\n                div.style.background = this.getColorHex(this.colorDefinition);\n                this.divMessageBackground = div;\n            }\n\n            if (this.divMessage === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"center\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.background = this.getColorHex(this.colorDefinition);\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                this.divMessage = div;\n            }\n            this.divMessage.innerHTML = message;\n            this.body.appendChild(this.divMessage);\n            this.autoResizeText(this.divMessage, width, heightmessage, false, this.minFontSize, this.maxFontSize, 0.5);\n        }\n\n        getOptions() {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4); // Άνοιγμα της βάσης δεδομένων\n\n                request.onupgradeneeded = function(event) {\n                    let db = event.target.result;\n                    // Δημιουργία του object store \"options\" αν δεν υπάρχει\n                    if (!db.objectStoreNames.contains(\"options\")) {\n                        db.createObjectStore(\"options\", {keyPath: \"name\"});\n                    }\n                };\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readonly\"); // Δημιουργία συναλλαγής ανάγνωσης\n                    let store = transaction.objectStore(\"options\");\n\n                    let getAllRequest = store.getAll(); // Διαβάζει όλες τις εγγραφές από το object store\n\n                    getAllRequest.onsuccess = function(event) {\n                        let records = event.target.result; // Όλες οι εγγραφές από το object store\n                        if (records.length > 0) {\n                            // Μετατροπή σε object με τα name ως κλειδιά\n                            let optionsObject = {};\n                            records.forEach(record => {\n                                optionsObject[record.name] = record.value;\n                            });\n                            resolve(optionsObject); // Επιστροφή του αντικειμένου\n                        } else {\n                            resolve({}); // Επιστροφή άδειου αντικειμένου αν δεν υπάρχουν εγγραφές\n                        }\n                    };\n\n                    getAllRequest.onerror = function() {\n                        reject(new Error(\"Failed to read options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    resolve({});\n                };\n            });\n        }\n\n        saveOptions(optionsObject) {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4);\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readwrite\"); // Δημιουργία συναλλαγής για εγγραφή\n                    let store = transaction.objectStore(\"options\");\n\n                    // Για κάθε ζεύγος name-value στο αντικείμενο, το αποθηκεύουμε στην IndexedDB\n                    for (let name in optionsObject) {\n                        if (optionsObject.hasOwnProperty(name)) {\n                            let value = optionsObject[name];\n                            store.put({name: name, value: value});\n                        }\n                    }\n\n                    // Επιτυχής ολοκλήρωση της συναλλαγής\n                    transaction.oncomplete = function() {\n                        resolve();\n                    };\n\n                    transaction.onerror = function() {\n                        reject(new Error(\"Failed to save options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    reject(new Error(\"Failed to open database\"));\n                };\n            });\n        }\n\n        showError(message) {\n            this.createDivMessage(message);\n        }\n\n        createArea() {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n        }\n\n        clearDB(url) {\n            let options = {nickname: ''};\n            this.saveOptions(options)\n                .then(function() {\n                    window.location.href = url;\n                    return true;\n                })\n                .catch(() => {\n                    return false;\n                });\n\n        }\n\n        gateCreateInput(left, top, width, fontSize) {\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return div;\n        }\n\n        createAddScore(left, top, width, height, num) {\n            const div = this.createDiv(this.body, left, top, width, height);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            // A button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n        }\n\n        gateCreateScreenPalette(bottom, gridWidthColors, gridHeightColors, gridWidthAvatars, gridHeightAvatars) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_palette');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n\n            let instance = this;\n            let btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatars(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label.style.left = 0;\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = bottom + \"px\";\n        }\n\n        gateCreateButtonSubmit = (maxWidth, bottom2) => {\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            const instance = this;\n            this.btnSubmit.addEventListener(\"click\", function() {\n                if (instance.edtCode !== undefined) {\n                    instance.user = instance.edtCode.value;\n                }\n                instance.gatePlayGame(true, instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n        };\n    };\n});"],"names":["define","constructor","maxWidth","bottom2","btnSubmit","this","createImageButton","area","iconSize","style","visibility","instance","addEventListener","undefined","edtCode","user","value","gatePlayGame","edtNickname","paletteid","avatarid","body","document","getElementsByTagName","kindSound","size","parseFloat","window","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","firstChild","removeChild","lastChild","openGame","computeSizes","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","pad","length","uuid4","uuid","Array","floor","random","map","x","join","options","userGUID","saveOptions","then","catch","error","showError","message","cIcons","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","hexArray","unshift","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","sort","a","b","colorBackground","repairP","createDivButton","lineHeight","textAlign","createDivScore","borderRadius","border","boxShadow","title","getStringM","colorScore","buttonScore2","colorScore2","labelScore","labelScore2","disabled","labelScoreRank","labelScoreRank2","createAddScore","createDivScorePercent","label","fontName","labelScoreRankB","labelAddScore","labelAddScore2","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","onClickSound","btn","localStorage","setItem","toString","createButtonHelp","buttonHelp","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","id","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","divMessageHelp","areaTop","createDivMessageDo","divMessage","createDivMessageStart","height1","showHelpScreen","divMessageBackground","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","setColorsString","split","setColors","computeDifClock","time","timeStart","timeClose","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","updateButtonsAvatar","avatar","lastIndexOf","pop","colorsBackground","buttonAvatarTop","gateOpen","mmogameid","pin","kinduser","url","gateComputeSizes","areaWidth","areaHeight","getOptions","hasOwnProperty","kindsound","gateCreateScreen","save","callGetAttempt","colorpaletteid","extraparams","require","Ajax","params","call","methodname","args","done","response","processGetAttempt","JSON","parse","fail","vertical","createArea","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateLabelEditVertical","edt","gateUpdateSubmit","gateCreateScreenPalette","gateSendGetColorsAvatars","gateCreateButtonSubmit","sName","sizeLabel","gateCreateLabelEditHorizontal","label1","font","elements","getElementsByClassName","parentNode","aLabel","gateCreateLabel","labelWidth","align","gateCreateInput","gateShowAvatars","countX","avatarids","avatars","count","leftOriginal","avatarImagePath","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","colorpalettes","gateShowColorPalettes","colorpaletteids","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","cursor","gateUpdateColorPalette","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string","leftEdit","heightmessage","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","createObjectStore","keyPath","onsuccess","getAllRequest","transaction","objectStore","getAll","records","optionsObject","forEach","record","onerror","Error","store","put","oncomplete","clearDB","location","href","type","autofocus"],"mappings":"w6BA6BAA,6BAAO,CAAC,KAAK,kBACF;;;;;;;;AAuBHC,+CAtBY,gCACJ,4jBA40DiB,CAACC,SAAUC,gBAC3BC,UAAYC,KAAKC,kBAAkBD,KAAKE,MAAOL,SAAWG,KAAKG,UAAY,EAAGL,QAAS,EACxFE,KAAKG,SAAU,GAAI,qBAAqB,EAAO,eAC9CJ,UAAUK,MAAMC,WAAa,eAC5BC,SAAWN,UACZD,UAAUQ,iBAAiB,SAAS,gBACZC,IAArBF,SAASG,UACTH,SAASI,KAAOJ,SAASG,QAAQE,OAErCL,SAASM,cAAa,EAAMN,SAASO,YAAYF,MAAOL,SAASQ,UAAWR,SAASS,qBA/zDpFC,KAAOC,SAASC,qBAAqB,QAAQ,QAC7CC,UAAY,MAEbC,KAAOC,WAAWC,OAAOC,iBAAiBN,SAASO,iBAAiBC,iBAAiB,mBACpFC,YAAcN,UACdO,YAAc,EAAIP,UAClBQ,SAAWR,KAGpBS,iBACW,EAGXC,4BACSC,mBAEE/B,KAAKgB,KAAKgB,iBACRhB,KAAKiB,YAAYjC,KAAKgB,KAAKkB,gBAE/BhC,UAAOM,EAGhB2B,gBACSL,wBACA5B,UAAOM,OACP4B,eAGTnC,kBAAkBoC,OAAQC,KAAMC,IAAKC,MAAOC,OAAQC,UAAWC,SAAUC,KAAMC,SACvEC,OAAS9C,KAAK+C,YAAYV,OAAQC,KAAMC,IAAKC,MAAOC,OAAQE,sBAEpDnC,IAARqC,KAA6B,KAARA,MACrBC,OAAOD,IAAMA,KAEjBC,OAAOE,UAAUC,IAAI,qBACrBH,OAAOI,aAAa,OAAQ,UAErBJ,OAGXC,YAAYV,OAAQC,KAAMC,IAAKC,MAAOC,OAAQE,cACtCG,OAAS7B,SAASkC,cAAc,cAEpCL,OAAOM,SAAW,EAClBN,OAAO1C,MAAMiD,SAAW,WACxBP,OAAO1C,MAAMkC,KAAOA,KAAO,KAC3BQ,OAAO1C,MAAMmC,IAAMA,IAAM,KACzBO,OAAOQ,WAAY,EAEL,IAAVd,QACAM,OAAO1C,MAAMoC,MAAQA,MAAQ,MAElB,IAAXC,SACAK,OAAO1C,MAAMqC,OAASA,OAAS,MAGnCK,OAAO1C,MAAMwB,SAAWa,OAAS,UAChBjC,IAAbmC,UAAuC,KAAbA,WAC1BG,OAAOS,IAAMZ,UAEjBN,OAAOmB,YAAYV,QAEZA,OAGXW,wBAAwBpB,OAAQC,KAAMC,IAAKC,MAAOC,OAAQC,UAAWC,cAC7DG,OAAS7B,SAASkC,cAAc,OACpCL,OAAOE,UAAUC,IAAI,qBACrBH,OAAO1C,MAAMiD,SAAW,WACxBP,OAAOQ,WAAY,QAEbI,IAAM,IAAIC,aAChBD,IAAIE,OAAS,cACU,IAAf5D,KAAKwC,OAA+B,IAAhBxC,KAAKyC,cACpBD,MAAQxC,KAAKyC,OAAS,GAG3BzC,KAAKwC,MAAQ,GAAKxC,KAAKyC,OAAS,EAAG,KAC/BoB,IAAMC,KAAKC,IAAIvB,MAAQxC,KAAKwC,MAAOC,OAASzC,KAAKyC,QACjDuB,EAAIF,KAAKG,MAAMjE,KAAKwC,MAAQqB,KAC5BK,EAAIJ,KAAKG,MAAMjE,KAAKyC,OAASoB,KAEjCf,OAAO1C,MAAMoC,MAAQwB,EAAI,KACzBlB,OAAO1C,MAAMqC,OAASyB,EAAI,KAC1BpB,OAAO1C,MAAMkC,KAAQA,KAAOE,MAAQ,EAAIwB,EAAI,EAAK,KACjDlB,OAAO1C,MAAMmC,IAAOA,IAAME,OAAS,EAAIyB,EAAI,EAAK,KAEhDpB,OAAOS,IAAMZ,SACbG,OAAOqB,UAAYxB,SACnBG,OAAO1C,MAAMwB,SAAWa,OAAS,YAGxBjC,IAAbmC,UAAuC,KAAbA,WAC1Be,IAAItD,MAAMkC,KAAOA,KAAO,KACxBoB,IAAItD,MAAMmC,IAAMA,IAAM,KACtBmB,IAAItD,MAAMC,WAAa,SACvBqD,IAAIH,IAAMZ,UAEdG,OAAOM,SAAW,EAClBf,OAAOmB,YAAYV,QAEZA,OAGXsB,kBAAkBtB,OAAQR,KAAMC,IAAKC,MAAOC,OAAQE,UAChDG,OAAOS,IAAMZ,SAGjB0B,UAAUhC,OAAQC,KAAMC,IAAKC,MAAOC,YAC5B6B,IAAMrD,SAASkC,cAAc,cACjCmB,IAAIlE,MAAMiD,SAAW,WACrBiB,IAAIlE,MAAMkC,KAAOA,KAAO,KACxBgC,IAAIlE,MAAMmC,IAAMA,IAAM,KACtB+B,IAAIlE,MAAMoC,MAAQA,MAAQ,KAC1B8B,IAAIlE,MAAMqC,OAASA,OAAS,KAE5BJ,OAAOmB,YAAYc,KAEZA,IAGXC,eAAelC,OAAQC,KAAMC,IAAKC,MAAOC,OAAQ+B,WACzCF,IAAMtE,KAAKqE,UAAUhC,OAAQC,KAAMC,IAAKC,MAAOC,eACnD6B,IAAIlE,MAAMqE,WAAazE,KAAK0E,YAAYF,OAEjCF,IAGXK,qBAC2B,IAAnB3E,KAAKmB,UACE,2BACmB,IAAnBnB,KAAKmB,UACL,4BACmB,IAAnBnB,KAAKmB,UACL,mBAEA,2BAIfyD,UAAUC,OACiB,IAAnB7E,KAAKmB,WAA6B,OAAV0D,OACG,IAAvBA,MAAMC,cACND,MAAME,OAKlBC,eAAeC,KAAMzC,MAAOC,OAAQG,KAAMlB,YAAaC,YAAauD,cAC5DC,UAAY,GAAM1C,OAClB2C,IAAMtB,KAAKuB,IAAI,EAAG3D,aACtBc,MAAQsB,KAAKG,MAAMzB,OACnBC,OAASqB,KAAKG,MAAMxB,YAChB6C,GAAqB,IAAhB3D,kBAAqCnB,IAAhBmB,YAA4BmC,KAAKC,IAAIvB,MAAOC,QAAUd,YAEhF4D,QAAUH,IACVI,UAAY,EACZC,UAAY,EACZC,SAAW,MAEV,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAAK,KACtBC,GAAK3E,SAASkC,cAAc,OAChCyC,GAAGxF,MAAMkC,KAAO,EAChBsD,GAAGxF,MAAMmC,IAAM,EACfqD,GAAGxF,MAAMoC,MAAQA,MAAQ,KACzBoD,GAAGxF,MAAMqC,OAAS,EAClBmD,GAAGvF,WAAa,UACXuC,OACDgD,GAAGxF,MAAMyF,WAAa,UAE1BD,GAAGzB,UAAYc,KAAKd,eACfnD,KAAKwC,YAAYoC,QAElBhE,UAAYwD,IAAME,IAAM,KAE5BM,GAAGxF,MAAMwB,SAAWA,SAAW,KAC/B6D,UAAYG,GAAGE,aACfJ,SAAWE,GAAGG,YAAc,OAEvB/E,KAAKiB,YAAY2D,IAElBF,SAAWlD,OAASiD,UAAYhD,OAChC6C,GAAK1D,aACF,IACHwD,IAAMxD,SACFkC,KAAKkC,IAAIR,UAAYC,YAAc,WAGvCD,UAAYC,UACZF,QAAU3D,SACN6D,UAAYN,oBAKxBF,KAAK7E,MAAMwB,SAAW2D,QAAU,OAE5BG,SAAWlD,OAASiD,UAAYhD,cAOzB,CAACwC,KAAKc,YAAc,EAAGd,KAAKa,mBAN9BG,iBAAiBhB,MACtBS,SAAWT,KAAKc,YAChBN,UAAYR,KAAKa,kBACZI,oBAAoBjB,KAAMS,SAAWlD,MAAQkD,SAAWlD,MAAQ,EAAGiD,UAAYhD,OAASgD,UAAYhD,OAAS,EAC9GyC,cAKJU,GAAK3E,SAASkC,cAAc,OAChCyC,GAAGxF,MAAMoC,MAAQA,MAAQ,KACzBoD,GAAGxF,MAAMqC,OAAS,EAClBmD,GAAGvF,WAAa,SACXuC,OACDgD,GAAGxF,MAAMyF,WAAa,UAE1BD,GAAGzB,UAAYc,KAAKd,eACfnD,KAAKwC,YAAYoC,IACtBA,GAAGxF,MAAMwB,SAAWqD,KAAK7E,MAAMwB,aAC3BR,KAAO,CAACwE,GAAGG,YAAc,EAAGH,GAAGE,0BAC9B9E,KAAKiB,YAAY2D,IAEfxE,KAGX6E,iBAAiBhB,UACTkB,EAAIlB,KAAKd,UACTiC,QAAS,OACND,EAAEE,WAAW,SAChBF,EAAIA,EAAEG,UAAU,GAChBF,QAAS,MAETG,KAAOJ,EAAEK,QAAQ,eACX,KACFC,IAAMN,EAAEK,QAAQ,OAAQD,KAAO,MAC/BE,IAAM,QAGDN,EAAEG,UAAUC,KAAO,EAAGE,KACvBC,SACJP,EAAIA,EAAEG,UAAU,EAAGC,KAAO,GAAKJ,EAAEG,UAAUG,IAAM,GACjDL,QAAS,EACTK,IAAMF,MAEVA,KAAOE,IAGPL,SACAnB,KAAKd,UAAYgC,GAIzBD,oBAAoBjB,KAAM0B,SAAUC,UAAW1B,aAC1B,IAAbyB,UAAgC,IAAdC,qBAGlBT,EAAIlB,KAAKd,cAER,IAAIsC,IAAM,IAAM,KACbI,KAAOV,EAAEK,QAAQ,QAASC,QAC1BI,KAAO,YAGPC,KAAOX,EAAEK,QAAQ,IAAKK,SACtBC,KAAO,YAGPC,GAAKZ,EAAEG,UAAUO,KAAMC,MAAQ,IAE/BtE,MAAQ,EACRC,OAAS,EACTuE,KAAOD,GAAGP,QAAQ,aAClBQ,MAAQ,EAAG,KACPC,MAAQF,GAAGP,QAAQ,IAAKQ,SACxBC,OAAS,EAAG,KACRC,IAAMH,GAAGI,MAAMH,KAAO,EAAGC,OAAOG,QAAQ,KAAM,IAClD5E,MAAQ6E,SAASH,KACjBH,GAAKA,GAAGI,MAAM,EAAGH,MAAQD,GAAGI,MAAMF,WAI1CD,KAAOD,GAAGP,QAAQ,WACdQ,MAAQ,EAAG,KACPC,MAAQF,GAAGP,QAAQ,IAAKQ,SACxBC,OAAS,EAAG,KACRC,IAAMH,GAAGI,MAAMH,KAAO,EAAGC,OAAOG,QAAQ,KAAM,IAClD3E,OAAS4E,SAASH,KAClBH,GAAKA,GAAGI,MAAM,EAAGH,MAAQD,GAAGI,MAAMF,WAGtCzE,MAAQ,GAAKC,OAAS,EAAG,KACrBiD,SAAWlD,MAAQmE,SAAW,EAAInE,MAAQmE,SAAWnE,MAAQ,EAC7DiD,UAAYhD,OAASmE,UAAY,EAAInE,OAASmE,UAAYnE,OAAS,EACnE6E,MAAQxD,KAAKuB,IAAIH,SAAUpB,KAAKC,IAAI2B,SAAWlD,MAAOiD,UAAYhD,SACtEsE,GAAKA,GAAK,WAAcjD,KAAKG,MAAMqD,MAAQ9E,OAAS,aAAiBsB,KAAKG,MAAMxB,OAAS6E,OAAS,KAEtGnB,EAAIA,EAAEgB,MAAM,EAAGN,MAAQE,GAAKZ,EAAEgB,MAAML,MACpCL,IAAMK,KAEV7B,KAAKd,UAAYgC,EAGrBoB,IAAIL,IAAK9F,UACD+E,EAAIe,IAAM,QACPf,EAAEqB,OAASpG,MACd+E,EAAI,IAAMA,SAEPA,EAGXsB,cACUC,KAAO,IAAIC,MAAM,QAGlB,IAAIhC,EAAI,EAAGA,EAAI,GAAIA,IACpB+B,KAAK/B,GAAK7B,KAAK8D,MAAsB,GAAhB9D,KAAK+D,UAI9BH,KAAK,GAAK,IACVA,KAAK,IAAM,IACXA,KAAK,IAAM,IACXA,KAAK,IAAM,IAGXA,KAAK,IAAM,EAEXA,KAAK,IAAkB,EAAXA,KAAK,IAAa,OAGzBhH,KAAOgH,KACPI,KAAKC,GAAoB,iBAANA,EAAiBA,EAnBvB,mBAmBqCA,KAClDC,KAAK,QAENC,QAAU,CAACC,SAAUlI,KAAKU,MAC1BJ,SAAWN,UACVmI,YAAYF,SACZG,MAAK,kBACK,KAEVC,OAAMC,QACHhI,SAASiI,UAAUD,MAAME,UAClB,KAInBpG,gBACQpC,KAAKyI,OAAS,QAAqBjI,IAAhBR,KAAKyI,eACnBA,OAAS,QAEbtI,SAAW2D,KAAKC,IAAIzC,OAAOoH,WAAa1I,KAAKyI,OAAQnH,OAAOqH,YAAc,QAE1ExI,SAAW2D,KAAKG,MAAMjE,KAAKG,SAAWH,KAAKG,SAAW,GAAKH,KAAKyI,aAEhEG,QAAU9E,KAAKG,MAAMjE,KAAKG,SAAW,SACrCA,UAAYH,KAAK4I,QAG1BC,qBACW7I,KAAKG,SAGhB2I,4BACWhF,KAAKG,MAAMjE,KAAK6I,cAAgB,GAG3CE,oBACW/I,KAAK4I,QAGhBlE,YAAYqD,SAEFiB,SAAW,OAEZ,IAAIrD,EAAI,EAAGA,EAAI,EAAGA,IAGnBqD,SAASC,QANK,mBAMiB,GAAJlB,IAE3BA,IAAM,QAIH,IAAMiB,SAAShB,KAAK,IAG/BkB,YAAYnB,UAKK,KAJLjE,KAAK8D,MAAMG,EAAI,UAAa,KAIX,KAHjBjE,KAAK8D,MAAMG,EAAI,OAAW,KAGG,KAF7BjE,KAAK8D,MAAMG,EAAI,KAAS,MAEa,IAGjDoB,aAAapB,OAILqB,IAAW,KAHPtF,KAAK8D,MAAMG,EAAI,UAAa,KAGV,KAFlBjE,KAAK8D,MAAMG,EAAI,OAAW,KAEE,KAD5BjE,KAAK8D,MAAMG,EAAI,KAAS,KAG5BsB,KAAOvF,KAAKG,MAAY,IAANmF,IADd,cAGO,MAAPC,KAA0B,IAAPA,KAAgBA,KAG/CC,iBAAiBvB,UACL/H,KAAKkJ,YAAYnB,IAAM,IAAO,UAAY,UAGtDwB,aAAaC,aAEJA,OAASA,WACVlJ,SAAWN,iBACVwJ,OAAOC,MAAK,SAASC,EAAGC,UAClBrJ,SAAS4I,YAAYQ,GAAKpJ,SAAS4I,YAAYS,WAGrDC,gBAAkB5J,KAAKwJ,OAAO,QAC9BxI,KAAKZ,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAK4J,iBAE5C5J,KAAKwJ,OAGhBK,QAAQ1D,WACM3F,IAAN2F,QACO,OAIPY,GAAKZ,EAAEiB,QAAQ,YAAa,IAAIA,QAAQ,SAAU,SAASV,OAG/DK,GAAKA,GAAGK,QAAQ,eAAgB,QAG5BX,IAAMM,GAAGP,QAAQ,wBACjBC,KAAO,IACPM,GAAKA,GAAGI,MAAM,EAAGV,KAAOM,GAAGI,MAAMV,IAAM,KAGpCM,GAGX+C,gBAAgBxH,KAAMC,SACdO,OAAS7B,SAASkC,cAAc,iBACpCL,OAAO1C,MAAMiD,SAAW,WACxBP,OAAOE,UAAUC,IAAI,kBACrBH,OAAO1C,MAAMkC,KAAOA,KAAO,KAC3BQ,OAAO1C,MAAMmC,IAAMA,IAAM,KACzBO,OAAO1C,MAAMoC,MAAQxC,KAAKG,SAAW,KACrC2C,OAAO1C,MAAMqC,OAASzC,KAAKG,SAAW,KACtC2C,OAAO1C,MAAM2J,WAAa/J,KAAKG,SAAW,KAC1C2C,OAAO1C,MAAM4J,UAAY,SAElBlH,OAEXmH,eAAe3H,KAAMC,IAAK2E,SAClBpE,OAAS9C,KAAK8J,gBAAgBxH,KAAMC,KAExCO,OAAO1C,MAAM8J,aAAelK,KAAKG,SAAW,KAC5C2C,OAAO1C,MAAM+J,OAAS,aAAenK,KAAK0E,YAAY,UACtD5B,OAAO1C,MAAMgK,UAAY,8CACzBtH,OAAOuH,MAAQrK,KAAKsK,WAAW,YAC/BxH,OAAOD,IAAM7C,KAAKsK,WAAW,YACjB,IAARpD,KACApE,OAAO1C,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAKuK,YAChDzH,OAAO1C,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,mBAE3CC,aAAe1H,OACpBA,OAAO1C,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAKyK,aAChD3H,OAAO1C,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKyK,mBAG/CzJ,KAAKwC,YAAYV,QAEtBA,OAAOqB,UAAY,aACda,eAAelC,OAAQ9C,KAAKG,SAAUH,KAAKG,UAAU,EAAO,EAAG,EAAG,GACvE2C,OAAOqB,UAAY,OAEfG,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMC,IAAMvC,KAAKG,SAAW,EAAGH,KAAKG,SAAUH,KAAKG,SAAW,GAClGmE,IAAIlE,MAAM2J,WAAc/J,KAAKG,SAAW,EAAK,KAC7CmE,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,YAC7CjG,IAAI+F,MAAQrK,KAAKsK,WAAW,YAChB,IAARpD,SACKwD,WAAapG,SAEbqG,YAAcrG,QAGnBJ,EAAIlE,KAAKG,SAAW,EACxBmE,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMC,IAAKvC,KAAKG,SAAU+D,GAC1DI,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,YAC7CzH,OAAO8H,UAAW,EACN,IAAR1D,SACK2D,eAAiBvG,SAEjBwG,gBAAkBxG,SAGtByG,eAAezI,KAAMC,IAAMvC,KAAKG,SAAW+D,EAAGlE,KAAKG,SAAU+D,EAAGgD,KAezE8D,sBAAsB1I,KAAMC,IAAK2E,SACzBpE,OAAS9C,KAAK8J,gBAAgBxH,KAAMC,KAExCO,OAAO1C,MAAM+J,OAAS,aAAenK,KAAK0E,YAAY,UACtD5B,OAAO1C,MAAMgK,UAAY,8CACb,IAARlD,KACApE,OAAO1C,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAKuK,YAChDzH,OAAO1C,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,YAChDzH,OAAOuH,MAAQrK,KAAKsK,WAAW,cAE/BxH,OAAO1C,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAKyK,aAChD3H,OAAO1C,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKyK,mBAG/CzJ,KAAKwC,YAAYV,QAEtBA,OAAOqB,UAAY,GACnBrB,OAAO8H,UAAW,MAEdtG,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMC,IAAMvC,KAAKG,SAAW,EAAGH,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GACtGmE,IAAIlE,MAAM2J,WAAc/J,KAAKG,SAAW,EAAK,KAC7CmE,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,YACjC,IAARrD,UACKwD,WAAapG,IAClBA,IAAI+F,MAAQrK,KAAKsK,WAAW,mBAEvBK,YAAcrG,IACnBA,IAAI+F,MAAQrK,KAAKsK,WAAW,0BAG5BpG,EAAIlE,KAAKG,SAAW,EACxBmE,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMC,IAAKvC,KAAKG,SAAW,EAAG+D,GAC9DI,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,YAC7CjG,IAAI+F,MAAQrK,KAAKsK,WAAW,oBAChB,IAARpD,SACK2D,eAAiBvG,SAEjBwG,gBAAkBxG,SAGtByG,eAAezI,KAAMC,IAAMvC,KAAKG,SAAW+D,EAAGlE,KAAKG,SAAW,EAAG+D,OAalE+G,MAAgB,IAAR/D,IAAYlH,KAAK6K,eAAiB7K,KAAK8K,gBAEnDxG,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAOtC,KAAKG,SAAW,EAAGoC,IAAKvC,KAAKG,SAAW,EAAG+D,GAClFI,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAM8K,SAAWD,MAAM7K,MAAM8K,SACjC5G,IAAIlE,MAAMwB,SAAWsC,EAAI,KACzBI,IAAIlE,MAAM2J,WAAa7F,EAAI,KAC3BI,IAAIlE,MAAMoE,MAAQyG,MAAM7K,MAAMoE,MAC9BF,IAAI+F,MAAQrK,KAAKsK,WAAW,sBAChB,IAARpD,WACKiE,gBAAkB7G,KAG3B2G,MAAgB,IAAR/D,IAAYlH,KAAKoL,cAAgBpL,KAAKqL,eAC9C/G,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAOtC,KAAKG,SAAW,EAAGkB,WAAWrB,KAAK0K,WAAWtK,MAAMmC,KAAMvC,KAAKG,SAAW,EAC7GH,KAAKG,SAAW,GACpBmE,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAM2J,WAAajG,KAAKG,MAAMjE,KAAKG,SAAW,GAAK,KACvDmE,IAAIlE,MAAM8K,SAAWD,MAAM7K,MAAM8K,SACjC5G,IAAIlE,MAAMwB,SAAWqJ,MAAM7K,MAAMwB,SACjC0C,IAAIlE,MAAMkL,WAAa,OACvBhH,IAAIlE,MAAMoE,MAAQyG,MAAM7K,MAAMoE,MAC9BF,IAAI+F,MAAQrK,KAAKsK,WAAW,mBACvBtF,eAAeV,IAAKtE,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GAAG,GACnD,IAAR+G,WACKqE,YAAcjH,KAI3BkH,eAAelJ,KAAMC,IAAKkJ,cAClBnH,IAAMrD,SAASkC,cAAc,OACjCmB,IAAIlE,MAAMiD,SAAW,WACrBiB,IAAIlE,MAAMkC,KAAOA,KAAO,KACxBgC,IAAIlE,MAAMmC,IAAMA,IAAM,KACtB+B,IAAIlE,MAAMoC,MAAQiJ,SAAW,KAC7BnH,IAAIlE,MAAMqC,OAASgJ,SAAW,KAC9BnH,IAAIlE,MAAMyF,WAAa,SACvBvB,IAAIlE,MAAM2J,WAAa0B,SAAW,KAClCnH,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAK4J,iBAC7CtF,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK4J,iBAC7CtF,IAAIoH,KAAO,aACN1K,KAAKwC,YAAYc,UACjBqH,WAAarH,IAElBA,IAAIH,UAAY,aACXa,eAAeV,IAAKmH,SAAUA,UAAU,EAAO,EAAG,EAAG,GAC1DnH,IAAIH,UAAY,GAChBG,IAAI+F,MAAQrK,KAAKsK,WAAW,oBAGhCsB,kBAAkBtJ,KAAMC,UACfsJ,YAAc7L,KAAKC,kBAAkBD,KAAKgB,KAAMsB,KAAMC,IAAKvC,KAAKG,SAAUH,KAAKG,SAAU,qBAC1FH,KAAK2E,oBACJkH,YAAYhJ,IAAM7C,KAAKsK,WAAW,gBACnChK,SAAWN,UACV6L,YAAYtL,iBAAiB,SAAS,WACvCD,SAASwL,aAAaxL,SAASuL,qBAG9BA,YAAYxB,MAAQrK,KAAKsK,WAAW,YAG7CwB,aAAaC,KACTzK,OAAO+I,MAAQ0B,IAAIxI,SACdpC,WAAanB,KAAKmB,UAAY,GAAK,EACxCG,OAAO0K,aAAaC,QAAQ,YAAaC,SAASlM,KAAKmB,YACvD4K,IAAIxI,IAAMvD,KAAK2E,cAGnBwH,iBAAiB7J,KAAMC,UACd6J,WAAapM,KAAKC,kBAAkBD,KAAKgB,KAAMsB,KAAMC,IAAKvC,KAAKG,SAAUH,KAAKG,SAAU,GAAI,wBAC5FiM,WAAWvJ,IAAM7C,KAAKsK,WAAW,WAG1C+B,SAASjH,IAAKE,GAAIgH,QAKVC,SAJAnH,IAAM,IACNA,IAAM,OAKNoH,SADAjH,QAAUH,QAET,IAAIO,EAAI,EAAGA,GAAK,GAAIA,IAAK,IAC1B4G,SAAWnH,IACXoH,UAAYpH,IAAME,IAAM,EAEdgH,GAAGE,WACF,GACPjH,QAAUiH,SACVpH,IAAMoH,UAENlH,GAAKkH,SAEL1I,KAAKkC,KAAKwG,SAAWD,UAAYC,UAAY,iBAK9CjH,QAGXkH,iBAAiBnK,KAAMC,IAAKC,MAAOkK,YAAa9K,UAE5CY,OAAS,EAAIxC,KAAK4I,YACdtE,IAAMrD,SAASkC,cAAc,UAEjCmB,IAAIlE,MAAMiD,SAAW,WACrBiB,IAAIlE,MAAMoC,MAAQA,MAAQ,KAE1B8B,IAAIlE,MAAMwB,SAAWA,SAAW,KAEhC0C,IAAIH,UAAYnE,KAAK2M,WACrBrI,IAAIlE,MAAM4J,UAAY,OAElB0C,YAAa,MACR1L,KAAKwC,YAAYc,SAClBsI,IAAM,CAACtI,IAAIyB,YAAc,EAAGzB,IAAIwB,0BAC/B9E,KAAKiB,YAAYqC,KACfsI,IAGXtI,IAAIlE,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAK6M,iBAC7CvI,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK6M,iBAC7CvI,IAAIlE,MAAMkC,KAAOA,KAAO,KACxBgC,IAAIlE,MAAMmC,IAAMA,IAAM,KACtB+B,IAAIlE,MAAM0M,YAAc9M,KAAK4I,QAAU,KACvCtE,IAAIlE,MAAM2M,aAAe/M,KAAK4I,QAAU,KACxCtE,IAAI0I,GAAK,kBAEJ9M,KAAKsD,YAAYc,SAClB7B,OAAS6B,IAAIwB,aAAe9F,KAAK4I,eACrCtE,IAAIlE,MAAMqC,OAASA,OAAS,UAEvBwK,iBAAmBxK,YACnByK,cAAgB5I,IAEd,CAACA,IAAIyB,YAAc,EAAGzB,IAAIwB,cAGrCqH,2BAC4B3M,IAApBR,KAAK2L,qBAGc,IAAnB3L,KAAKoN,WAAsC,IAAnBpN,KAAKqN,2BACxB1B,WAAWxH,UAAY,QAI5BmJ,IAAMxJ,KAAKG,MAAMjE,KAAKoN,WAAc,IAAIG,MAAQC,UAAa,KAC7DF,KAAO,IACPA,IAAM,OACDG,qBAEHC,QAAU5J,KAAK8D,MAAM9D,KAAKkC,IAAIsH,KAAO,IACrCK,QAAU7J,KAAKkC,IAAIsH,KAAO,GAC1BM,OAASN,IAAM,EAAI,IAAM,WAC1B3B,WAAWxH,oBAAeyJ,eAASF,oBAAWC,QAAQzB,WAAW2B,SAAS,EAAG,MAEtE,IAARP,eAIAhN,SAAWN,KACf8N,YAAW,WACPxN,SAAS6M,qBACV,KAGPY,iBAAiBvF,cACKhI,IAAdR,KAAKE,YACAc,KAAKiB,YAAYjC,KAAKE,WACtBA,UAAOM,QAGYA,IAAxBR,KAAKgO,sBACAhN,KAAKiB,YAAYjC,KAAKgO,qBACtBA,oBAAiBxN,OAGtB8B,KAAOtC,KAAK4I,QACZrG,IAAMvC,KAAKiO,QACXzL,MAAQlB,OAAOoH,WAAa,EAAI1I,KAAK4I,QACrCnG,OAASnB,OAAOqH,YAAc3I,KAAK8I,qBAAuB9I,KAAK4I,QAAUrG,SAExE2L,mBAAmB5L,KAAMC,IAAKC,MAAOC,OAAQ+F,QAAS/F,aAEtD0L,WAAW/N,MAAMmC,KAAOE,OAASzC,KAAKmO,WAAWrI,cAAgB,EAAI,KAG9EsI,sBAAsB5F,cACAhI,IAAdR,KAAKE,YACAc,KAAKiB,YAAYjC,KAAKE,WACtBA,UAAOM,OAGZ8B,KAAOtC,KAAK4I,QACZrG,IAAMvC,KAAKiO,QACXzL,MAAQlB,OAAOoH,WAAa,EAAI1I,KAAK4I,QACrCnG,OAASnB,OAAOqH,YAAc3I,KAAK8I,qBAAuB9I,KAAK4I,QAAUrG,IAEzE8L,QAAU5L,OAAS,UAElByL,mBAAmB5L,KAAMC,IAAKC,MAAOC,OAAQ+F,QAAS6F,SAE3D9L,MAAQ8L,QAAUrO,KAAKmO,WAAWrI,cAAgB,OAC7CqI,WAAW/N,MAAMmC,IAAMA,IAAM,UAEN/B,IAAxBR,KAAKgO,eAA8B,KAC/B1J,IAAMrD,SAASkC,cAAc,OACjCmB,IAAIlE,MAAMiD,SAAW,WACrBiB,IAAIlE,MAAMkC,KAAOA,KAAO,KACxBgC,IAAIlE,MAAM4J,UAAY,OACtB1F,IAAIlE,MAAMoC,MAASA,MAAQ,EAAIxC,KAAK4I,QAAW,KAC/CtE,IAAIlE,MAAM0M,YAAc9M,KAAK4I,QAAU,KACvCtE,IAAIlE,MAAM2M,aAAe/M,KAAK4I,QAAU,KAExCtE,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK6M,qBACzCtK,IAAMvC,KAAKG,SAAW,EAAIH,KAAK4I,QAAUyF,QAC7C/J,IAAIlE,MAAMmC,IAAOA,IAAMvC,KAAK4I,QAAW,KACvCtE,IAAIlE,MAAMqC,OAAUA,OAAS4L,QAAW,UACnCL,eAAiB1J,SACjBtD,KAAKwC,YAAYxD,KAAKgO,qBAEtBM,eAAehK,IAAM9B,MAAQ,EAAIxC,KAAK4I,QAAWnG,OAAS4L,UAIvEtM,wBAC4BvB,IAApBR,KAAKmO,kBACAnN,KAAKiB,YAAYjC,KAAKmO,iBACtBA,gBAAa3N,QAEMA,IAAxBR,KAAKgO,sBACAhN,KAAKiB,YAAYjC,KAAKgO,qBACtBA,oBAAiBxN,QAEQA,IAA9BR,KAAKuO,4BACAA,qBAAqBC,cACrBD,0BAAuB/N,GAIpCiO,eAAeC,QAAS9D,cACf,IAAIjF,EAAI,EAAGA,EAAI+I,QAAQlH,OAAQ7B,IAAK,KACjCoG,IAAM2C,QAAQ/I,QACNnF,IAARuL,MACInB,SACAmB,IAAI/I,UAAUC,IAAI,8BAElB8I,IAAI/I,UAAUwL,OAAO,gCAMrCG,eAAeC,kBACMpO,IAAboO,eACO,OAGPzI,EAAIyI,YACE,KAANzI,QAC2B,IAApBA,EAAEK,QAAQ,MACbL,EAAIA,EAAEiB,QAAQ,IAAK,YAIpBjB,EAGX0I,UAAUC,SAAUC,KAAMrD,KAAMsD,SAAUC,SAAUC,cAAeC,sBAC3DhJ,OAAiB3F,IAAbsO,SAAyB,GAAK,MAAQA,SAAW,UACrD9O,KAAK0K,WAAWvG,YAAcgC,EAAG,MAC5BuE,WAAWvG,UAAYgC,MACxBnC,EAAIhE,KAAKG,SAAW,EAAIH,KAAK4I,aAC5B5D,eAAehF,KAAK0K,WAAY1G,EAAGhE,KAAKG,SAAW,GAAG,EAAO,EAAG,EAAG,GAGxEH,KAAK6K,eAAe1G,YAAc4K,YAC7BlE,eAAe1G,eAAqB3D,IAATuO,KAAqBA,KAAO,QACvD/J,eAAehF,KAAK6K,eAAgB7K,KAAKG,SAAUH,KAAKG,SAAW,GAAG,EAAM,EAAG,EAAG,SAG9EK,IAATkL,OACApK,OAAOL,SAASoJ,YAAsB7J,IAAbwO,SAAyBA,SAAW,IAAM,IAAMtD,MAG7EvF,OAAiB3F,IAAbyO,SAAyB,GAAKA,SAC9BjP,KAAKoL,cAAcjH,YAAcgC,SAC5BiF,cAAcjH,UAAYgC,OAC1BnB,eAAehF,KAAKoL,cAAepL,KAAKG,SAAW,EAAIH,KAAK4I,QAAS5I,KAAKG,SAAW,GAAG,EAAO,EAAG,EAAG,IAG1GH,KAAKmL,gBAAgBhH,YAAc+K,qBAC9B/D,gBAAgBhH,eAA8B3D,IAAlB0O,cAA8BA,cAAgB,QAC1ElK,eAAehF,KAAKmL,gBAAiB,GAAMnL,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GAAG,EAAM,EAAG,EAAG,IAGtGgG,OAAyB3F,IAArB2O,iBAAiCrL,KAAKG,MAAM,IAAMkL,kBAAoB,IAAM,GAC5EnP,KAAKuL,YAAYpH,YAAcgC,SAC1BoF,YAAYpH,UAAYgC,OACxBnB,eAAehF,KAAKuL,YAAa,GAAMvL,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GAAG,EAAM,EAAG,EAAG,IAItGiP,iBAAiBC,OAAQ7F,YACjB8F,IAAMD,OAAOE,WAAW,MACxB/M,MAAQ6M,OAAO7M,MACfC,OAAS4M,OAAO5M,OAChB+M,MAAQhN,MAAQ,EAChBlC,SAAWN,KAEfwJ,OAAOC,MAAK,SAASC,EAAGC,UACbrJ,SAAS4I,YAAYQ,GAAKpJ,SAAS4I,YAAYS,UAErD,IAAIhE,EAAI,EAAGA,EAAI,EAAGA,IACnB2J,IAAIG,UAAYzP,KAAK0E,YAAY8E,OAAO7D,IACxC2J,IAAII,SAAS/J,EAAI6J,MAAO,GAAI7J,EAAI,GAAK6J,MAAO/M,QAGhD6M,IAAIK,YAAc,UAClBL,IAAIM,UAAY,EAChBN,IAAIO,WAAW,EAAG,EAAGrN,MAAOC,QAGhCqN,gBAAgB3J,OACRuD,EAAI,CAAC,SAAU,QAAU,QAAU,SAAU,kBACvClJ,IAAN2F,GAAmBA,EAAEqB,QAAU,EAAG,KAC9BmC,EAAIxD,EAAE4J,MAAM,QACC,IAAbpG,EAAEnC,OAAc,CAChBkC,EAAIC,MACC,IAAIhE,EAAI,EAAGA,EAAI,EAAGA,IACnB+D,EAAE/D,GAAK0B,SAASqC,EAAE/D,UAIzBqK,UAAUtG,GAGnBuG,gBAAgBC,KAAMC,UAAWC,gBAChB5P,IAAT0P,YACKG,WAAa,IAAI9C,MAAQC,UAAY0C,MAAQ,UAGjDI,sBAAsBH,UAAWC,WAG1CE,sBAAsBH,UAAWC,gBACX5P,IAAd2P,gBACK9C,UAAoC,IAAxBhG,SAAS8I,WAAmB9I,SAAS8I,WAAanQ,KAAKqQ,SAAW,OAC9EjD,UAAoC,IAAxB/F,SAAS+I,WAAmB/I,SAAS+I,WAAapQ,KAAKqQ,SAAW,SAE9EhD,UAAY,OACZD,UAAY,GAIzBmD,UAAUlB,OAAQmB,OAAQC,YAClBnB,IAAMD,OAAOE,WAAW,MACxBnO,KAAOiO,OAAO7M,MAClB8M,IAAIoB,UAAU,EAAG,EAAGtP,KAAMiO,OAAO5M,QAEjC6M,IAAIqB,YACJrB,IAAIsB,IAAIxP,KAAO,EAAGA,KAAO,EAAGA,KAAO,EAAG,EAAG,EAAI0C,KAAK+M,IAAI,GACtDvB,IAAIG,UAAYzP,KAAK0E,YAAY8L,QACjClB,IAAIwB,OAEUzB,OAAOrM,UAAU+N,SAAS,aAEpCzB,IAAIqB,YACJrB,IAAIsB,IAAIxP,KAAO,EAAGA,KAAO,EAAGA,KAAO,EAAG,EAAG,EAAI0C,KAAK+M,IAAI,GACtDvB,IAAIG,UAAYzP,KAAK0E,YAAY+L,QACjCnB,IAAIwB,QAIZE,eAAe3O,OAAQjB,KAAMoP,OAAQC,OAAQQ,QAASrG,cAC9CyE,OAASpO,SAASkC,cAAc,iBACpCkM,OAAOjP,MAAMiD,SAAW,WACxBgM,OAAO7M,MAAQpB,KACfiO,OAAO5M,OAASrB,KAChBiB,OAAOmB,YAAY6L,QACf4B,SACA5B,OAAOrM,UAAUC,IAAI,WAErB2H,UACAyE,OAAOrM,UAAUC,IAAI,iBAGpBsN,UAAUlB,OAAQzE,SAAW4F,OAAS,SAAUC,QAE9CpB,OAGX6B,oBAAoBhK,IAAK5E,UAAM6O,qEAAgB,EAAGC,sEAAiB,EACzC,IAAlBD,gBACAA,cAAgBnR,KAAKG,UAEF,IAAnBiR,iBACAA,eAAiBpR,KAAKG,SAAWH,KAAKqR,yBAEX7Q,IAA3BR,KAAKsR,yBACAA,kBAAoB,SAExBA,kBAAkBpK,KAAO5E,UAEA9B,IAA1BR,KAAKuR,wBACAA,iBAAmB,SAEvBA,iBAAiBrK,KAAO,QAEN1G,IAAnBR,KAAKwR,iBACAA,UAAY,SAEhBA,UAAUtK,KAAO,QAEK1G,IAAvBR,KAAKyR,qBACAA,cAAgB,SAEpBA,cAAcvK,KAAOlH,KAAKC,kBAAkBD,KAAKgB,KAAMsB,KAAMtC,KAAK0R,UAAW1R,KAAKG,SAAUH,KAAKG,SAAU,GAAI,IACxG,IAAR+G,UAAgC1G,IAAnBR,KAAK0R,iBACbD,cAAcvK,KAAKmD,MAAQrK,KAAKsK,WAAW,qBAG1B9J,IAAtBR,KAAK2R,oBACAA,aAAe,SAEOnR,IAA3BR,KAAK4R,yBACAA,kBAAoB,SAEGpR,IAA5BR,KAAK6R,0BACAA,mBAAqB,SAEzBD,kBAAkB1K,KAAOiK,mBACzBU,mBAAmB3K,KAAOkK,oBAE1BO,aAAazK,KAAOlH,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMtC,KAAK4I,QAASuI,cAAeC,gBAG1FU,oBAAoB5K,IAAK6K,OAAQnD,kBACdpO,IAAXuR,SACAA,OAAS,SAEIvR,IAAboO,WACAA,SAAW,IAGA,KAAXmD,QAA8B,KAAbnD,qBACZ6C,cAAcvK,KAAK9G,MAAMC,WAAa,mBACtCsR,aAAazK,KAAK9G,MAAMC,WAAa,aAI1CL,KAAKwR,UAAUtK,OAAS0H,UAAyB,KAAbA,SAAiB,MAChD4C,UAAUtK,KAAO0H,aAClBzI,EAAIyI,YAEgB,IAApBA,SAASpH,OAAc,CACvBrB,EAAI4L,WACAtL,IAAMN,EAAE6L,YAAY,KACpBvL,KAAO,IACPN,EAAIA,EAAEgB,MAAMV,IAAM,IAEtBA,IAAMN,EAAE6L,YAAY,KAChBvL,KAAO,IACPN,EAAIA,EAAEgB,MAAM,EAAGV,MAGnBN,EADwB4L,OAAOhC,MAAM,KAAKkC,MACtBlC,MAAM,KAAK5I,MAAM,GAAI,GAAGa,KAAK,KAErD7B,EAAInG,KAAK2O,eAAexI,QACO3F,IAA3BR,KAAK2R,aAAazK,MAAsBlH,KAAK2R,aAAazK,KAAK/C,YAAcgC,SACxEwL,aAAazK,KAAK/C,UAAYgC,OAC9BwL,aAAazK,KAAK9G,MAAM4J,UAAY,cACpC2H,aAAazK,KAAK9G,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKkS,uBAC3DlN,eAAehF,KAAK2R,aAAazK,KAAMlH,KAAK4R,kBAAkB1K,KAAMlH,KAAK6R,mBAAmB3K,MAAM,EACnG,EAAG,EAAG,IAId6K,SAAW/R,KAAKuR,iBAAiBrK,YAC5B9C,kBAAkBpE,KAAKyR,cAAcvK,KAAMlH,KAAKsR,kBAAkBpK,KAAMlH,KAAKmS,gBAAiBnS,KAAKG,SACpGH,KAAKqR,mBAA+B,KAAXU,OAAgB,kBAAoBA,OAAS,SACrER,iBAAiBrK,KAAO6K,aAG5BN,cAAcvK,KAAKrE,IAAM7C,KAAK2R,aAAazK,KAAK/C,eAEhDsN,cAAcvK,KAAK9G,MAAMC,WAAa,eACtCsR,aAAazK,KAAK9G,MAAMC,WAAa,UAG9C+R,SAASC,UAAWC,IAAKC,SAAU7R,KAAM8R,UAChCA,IAAMA,SACN9Q,aAAe,OACfC,aAAe,OAGf0Q,UAAYA,eACZC,IAAMA,SACNC,SAAWA,cACX7R,KAAOA,UACP+R,wBAEAxE,QAAUjO,KAAK4I,aACf8J,UAAY5O,KAAKG,MAAM3C,OAAOoH,WAAa,EAAI1I,KAAK4I,cACpD+J,WAAa7O,KAAKG,MAAM3C,OAAOqH,YAAc3I,KAAKiO,SAAWjO,KAAK4I,YAEnEtI,SAAWN,UACV4S,aAAaxK,MAAK,SAASH,gBACvBA,QAAQ4K,eAAe,eACxB5K,QAAQ6K,UAAY,GAExBxS,SAASa,UAAkC,IAAtB8G,QAAQ9G,WAAyC,IAAtB8G,QAAQ9G,UAAkB8G,QAAQ9G,UAAY,EAEzF8G,QAAQ4K,eAAe,cACxB5K,QAAQ2G,SAAW,IAEvB3G,QAAQlH,SAAWkH,QAAQ4K,eAAe,kBAAoCrS,IAArByH,QAAQlH,SAAyBkH,QAAQlH,SAAW,EAC7GkH,QAAQnH,UAAYmH,QAAQ4K,eAAe,aAAe5K,QAAQnH,UAAY,EAEtEyR,cACC,YACwB,KAArBtK,QAAQ2G,UAAwC,IAArB3G,QAAQlH,UAAwC,IAAtBkH,QAAQnH,iBAC7DR,SAASM,cAAa,EAAOqH,QAAQ2G,SAAU3G,QAAQnH,UAAWmH,QAAQlH,WACnE,YAGV,UACIkH,QAAQ4K,eAAe,cACxB5K,QAAQC,SAAW,IAEnBD,QAAQC,SAASV,QAAU,IAA2B,KAArBS,QAAQ2G,UAAwC,IAArB3G,QAAQlH,UAC9C,IAAtBkH,QAAQnH,iBACRR,SAASI,KAAOuH,QAAQC,SACxB5H,SAASM,cAAa,EAAOqH,QAAQ2G,SAAU3G,QAAQnH,UAAWmH,QAAQlH,WACnE,SAKnBT,SAASyS,oBACF,KACR1K,OAAMC,QACLhI,SAASiI,UAAUD,MAAME,UAClB,KAIf5H,aAAaoS,KAAMpE,SAAU9N,UAAWC,aACd,SAAlBf,KAAKuS,UACa,KAAdvS,KAAKU,WACA+G,SAIRuL,iBACIpE,SAAWA,cACX9N,UAAYA,eACZC,SAAWA,mBACXkS,eAAe,CAACrE,SAAUA,SAAUsE,eAAgBpS,UAAWC,SAAUA,eAI9EkH,QAAU,CAAC2G,SAAUA,SAAU7N,SAAUA,SAAUD,UAAWA,WAE9DR,SAAWN,UACVmI,YAAYF,SACZG,MAAK,kBACF9H,SAASsO,SAAWA,SACpBtO,SAASQ,UAAYA,UACrBR,SAASS,SAAWA,SACpBT,SAAS2S,kBACF,KAEV5K,OAAMC,QACHhI,SAASiI,UAAUD,MAAME,UAClB,KAInByK,eAAeE,iBACP7S,SAAWN,KACfoT,QAAQ,CAAC,cAAc,SAASC,UACxBC,OAAS,CACTjB,UAAW/R,SAAS+R,UACpBE,SAAUjS,SAASiS,SACnB7R,KAAMJ,SAASI,KACfkO,SAAU,KACVsE,eAAgB,KAChBnS,SAAU,WAEMP,IAAhB2S,cACAG,sCAAaA,QAAWH,cAGXE,KAAKE,KAAK,CAAC,CACxBC,WAAY,+BACZC,KAAMH,UAIC,GAAGI,MAAK,SAASC,eACJnT,IAAhB2S,kBAA4D3S,IAA/B2S,YAAYD,iBACzC5S,SAAS6B,WACT7B,SAASkJ,YAAShJ,GAEtBF,SAASsT,kBAAkBC,KAAKC,MAAMH,cACvCI,MAAK,SAASzL,cACbhI,SAASyN,iBAAiBzF,MAAME,SACzBF,YAKnByK,wBACSiB,SAAW1S,OAAOoH,WAAapH,OAAOqH,iBAEtCsL,aAEDjU,KAAKgU,cACAE,gCAEAC,6BAIbD,+BAIQ9S,KAHAgT,UAAYpU,KAAK2S,WAAa,EAAI3S,KAAK4I,QAAU5I,KAAKG,SACtDN,SAAWG,KAAK0S,UAChBpS,SAAWN,WAGTqU,OAAS,CAACrU,KAAKsK,WAAW,WAAa,KAAMtK,KAAKsK,WAAW,WAAYtK,KAAKsK,WAAW,oBAC1F1I,SAAW5B,KAAKqM,SAASrM,KAAK0B,YAAa1B,KAAK2B,aAAa,SAASC,aACvER,KAAOd,SAASgU,qBAAqB1S,SAAUyS,QAE3CjT,KAAK,IAAMvB,gBACJ,MAEP0U,WAAmC,SAAtBjU,SAASiS,UAA6C,WAAtBjS,SAASiS,SAAwBnR,KAAK,GAAKd,SAASsI,QAAU,EAE3G4L,aAA4C,GAA5BJ,UAAY,EAAIxS,UAAgB,KAE1C,IADFkC,KAAK8D,MAAM4M,aAAelU,SAASH,iBAEhC,MAEPsU,cAA4D,GAA3CL,UAAY,EAAIxS,SAAW4S,cAAoB,SAC/CD,WAAa,EAAInT,KAAK,GAAK,EAAId,SAASsI,QAAU4L,aAAeC,cAE9DL,WAAa,EAAI,SAGzCM,gBAAkB7U,SAAWG,KAAK4I,QAClC+L,iBAAmB9U,SAAWG,KAAK4I,QACnCgM,iBAAqD,GAAjCR,UAAY,EAAIpU,KAAK4B,UAAgB,EACzD6D,UAAY3B,KAAK8D,MAAMgN,iBAAmBtU,SAASH,UAAYG,SAASH,SACxEuF,SAAW5B,KAAK8D,MAAM8M,gBAAkBpU,SAASH,UAAYG,SAASH,SACtE0U,KAAOD,iBAAmBnP,UAC9BmP,iBAAmBnP,cAGfqP,OAFAC,kBAA6D,GAAxCX,UAAY,EAAIpU,KAAK4B,SAAWiT,MAAY,EAG/C,SAAlB7U,KAAKuS,UAAyC,WAAlBvS,KAAKuS,UAEjCuC,OAAS9U,KAAKgV,4BAA4B,EAAG,EAAGnV,SAAUG,KAAK4B,SAAUR,KAAK,GAC1EpB,KAAKsK,WAAW,WAAa,MAAQ,EAAItK,KAAK4I,aAC7CnI,QAAUT,KAAKiV,SACfxU,QAAQF,iBAAiB,SAAS,WACnCD,SAAS4U,uBAGbJ,OAAS,EAGbA,OAAS9U,KAAKgV,4BAA4B,EAAGF,OAAQpP,SAAW,EAAI1F,KAAK4I,QAAS5I,KAAK4B,SAAUR,KAAK,GAClGpB,KAAKsK,WAAW,WAAa,MAAQ,EAAItK,KAAK4I,aAC7C/H,YAAcb,KAAKiV,SACnBpU,YAAYN,iBAAiB,SAAS,WACvCD,SAAS4U,2BAGRC,wBAAwBL,OAAQJ,gBAAiBE,iBAClDD,iBAAkBI,mBAEtBD,QAAU9U,KAAK4B,SAAW5B,KAAK4I,aAG1BwM,yBAAyB,EAAGN,OAAQJ,gBAAiBE,iBACtD,EAAGE,OAASF,iBAAmB5U,KAAK4B,SAAW5B,KAAK4I,QAAS+L,iBAC7DI,uBAEAjV,QAAUgV,OAASF,iBAAmB5U,KAAK4B,SAAW5B,KAAK4I,QAAUmM,uBAEpEM,uBAAuBxV,SAAUC,SAG1CqU,iCAIQ/S,KAHAgT,UAAYpU,KAAK2S,WAAa,EAAI3S,KAAK4I,QAAU5I,KAAKG,SACtDN,SAAWG,KAAK0S,UAChBpS,SAAWN,WAGTsV,MAAQtV,KAAKsK,WAAW,WAAa,SACvC+J,OAAS,CAACrU,KAAKsK,WAAW,WAAYgL,MAAOtV,KAAKsK,WAAW,oBAE5D1I,SAAW5B,KAAKqM,SAASrM,KAAK0B,YAAa1B,KAAK2B,aAAa,SAASC,aACvER,KAAOd,SAASgU,qBAAqB1S,SAAUyS,QAE3CjT,KAAK,IAAMvB,gBACJ,MAEP0U,WAAmC,SAAtBjU,SAASiS,UAA6C,WAAtBjS,SAASiS,SAAwBnR,KAAK,GAAKd,SAASsI,QAAU,EAE3G4L,aAA4C,GAA5BJ,UAAY,EAAIxS,UAAgB,KAE1C,IADFkC,KAAK8D,MAAM4M,aAAelU,SAASH,iBAEhC,MAEPsU,cAA4D,GAA3CL,UAAY,EAAIxS,SAAW4S,cAAoB,SAC/CD,WAAa,EAAInT,KAAK,GAAK,EAAId,SAASsI,QAAU4L,aAAeC,cAE9DL,WAAa,EAAI,SAGzCM,gBAAkB7U,SAAWG,KAAK4I,QAClC+L,iBAAmB9U,SAAWG,KAAK4I,QACnCgM,iBAAqD,GAAjCR,UAAY,EAAIpU,KAAK4B,UAAgB,EACzD6D,UAAY3B,KAAK8D,MAAMgN,iBAAmBtU,SAASH,UAAYG,SAASH,SACxEuF,SAAW5B,KAAK8D,MAAM8M,gBAAkBpU,SAASH,UAAYG,SAASH,SACtE0U,KAAOD,iBAAmBnP,UAC9BmP,iBAAmBnP,cAGfqP,OAFAC,kBAAoBjR,KAAK8D,MAAwC,GAAjCwM,UAAY,EAAIpU,KAAK4B,UAAgB,EAAIiT,MAGvD,SAAlB7U,KAAKuS,UAAyC,WAAlBvS,KAAKuS,UAEjCuC,OAAS9U,KAAKgV,4BAA4B,EAAG,EAAGnV,SAAUG,KAAK4B,SAAUR,KAAK,GAC1EpB,KAAKsK,WAAW,YAAc,EAAItK,KAAK4I,aACtCnI,QAAUT,KAAKiV,SACfxU,QAAQF,iBAAiB,SAAS,WACnCD,SAAS4U,uBAGbJ,OAAS,MAETS,UAAYvV,KAAKsU,qBAAqBtU,KAAK4B,SAAU,CAAC0T,QAC1DR,OAAS9U,KAAKwV,8BAA8B,EAAGV,OAAQpP,SAAW,EAAI1F,KAAK4I,QACvE5I,KAAK4B,SAAU2T,UAAU,GAAIvV,KAAKsK,WAAW,WAAa,WAEzDzJ,YAAcb,KAAKiV,SAEnBpU,YAAYN,iBAAiB,SAAS,WACvCD,SAAS4U,0BAGTO,OAASxU,SAASkC,cAAc,SACpCsS,OAAOrV,MAAMiD,SAAW,WACxBoS,OAAOtR,UAAYnE,KAAKsK,WAAW,cACnCmL,OAAOrV,MAAMsV,KAAO,cACpBD,OAAOrV,MAAMwB,SAAW5B,KAAK4B,SAAW,KACxC6T,OAAOrV,MAAMoC,MAAQ,MACrBiT,OAAOrV,MAAMyF,WAAa,cACrB3F,KAAKsD,YAAYiS,YAGlB1J,IAAM/L,KAAKC,kBAAkBD,KAAKE,KAAMuV,OAAO1P,YAAc/F,KAAK4I,QAASkM,OAAQ9U,KAAKG,SAAUH,KAAK4B,SACvG,GAAI,sBAAsB,EAAO,WACrCmK,IAAIxL,iBAAiB,SACjB,eACQoV,SAAWrV,SAASJ,KAAK0V,uBAAuB,sBAE7CD,SAAS,IACZA,SAAS,GAAGE,WAAW5T,YAAY0T,SAAS,IAGhDrV,SAAS8U,yBAAyB,EAAGN,OAAQJ,gBAAiBE,iBAAkB,EAC5EE,OAASF,iBAAmBtU,SAASsB,SAAWtB,SAASsI,QAAS+L,iBAAkBI,mBACpF,GAAM,MAGlBU,OAAOrV,MAAMkC,KAAO,EACpBmT,OAAOrV,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK4J,iBAChD6L,OAAOrV,MAAMmC,IAAMuS,OAAS,KAC5BA,QAAU9U,KAAK4B,SAAW5B,KAAK4I,YAE3BqC,MAAQhK,SAASkC,cAAc,SACnC8H,MAAM7K,MAAMiD,SAAW,WACvB4H,MAAM9G,UAAYnE,KAAKsK,WAAW,cAClCW,MAAM7K,MAAMsV,KAAO,cACnBzK,MAAM7K,MAAMwB,SAAW5B,KAAK4B,SAAW,KACvCqJ,MAAM7K,MAAMoC,MAAQ,OACpByI,MAAM7K,MAAMyF,WAAa,cACpB3F,KAAKsD,YAAYyH,OAGtBc,IAAM/L,KAAKC,kBAAkBD,KAAKE,KAAM+K,MAAMlF,YAAc/F,KAAK4I,QAASkM,OAASF,iBAAkB5U,KAAKG,SACtGH,KAAK4B,SAAU,GAAI,sBAAsB,EAAO,WACpDmK,IAAIxL,iBAAiB,SACjB,eACQoV,SAAWrV,SAASJ,KAAK0V,uBAAuB,uBAE7CD,SAAS,IACZA,SAAS,GAAGE,WAAW5T,YAAY0T,SAAS,IAGhDrV,SAAS8U,yBAAyB,EAAGN,OAAQJ,gBAAiBE,iBAAkB,EAC5EE,OAASF,iBAAmBtU,SAASsB,SAAWtB,SAASsI,QAAS+L,iBAAkBI,mBACpF,GAAO,MAKnB9J,MAAM7K,MAAMkC,KAAO,OACnB2I,MAAM7K,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK4J,iBAC/CqB,MAAM7K,MAAMmC,IAAOuS,OAASF,iBAAoB,UAG3CQ,yBAAyB,EAAGN,OAAQJ,gBAAiBE,iBACtD,EAAGE,OAASF,iBAAmB5U,KAAK4B,SAAW5B,KAAK4I,QAAS+L,iBAC7DI,uBAEAjV,QAAUgV,OAASF,iBAAmB5U,KAAK4B,SAAW5B,KAAK4I,QAAUmM,uBACpEhV,UAAYC,KAAKC,kBAAkBD,KAAKE,MAAOL,SAAWG,KAAKG,UAAY,EAAGL,QAAS,EACxFE,KAAKG,SAAU,GAAI,qBAAqB,EAAO,eAC9CJ,UAAUK,MAAMC,WAAa,cAC7BN,UAAUQ,iBAAiB,SAC5B,gBAC6BC,IAArBF,SAASG,UACTH,SAASI,KAAOJ,SAASG,QAAQE,OAErCL,SAASM,cAAa,EAAMN,SAASO,YAAYF,MAAOL,SAASQ,UAAWR,SAASS,aAIjGuT,qBAAqB1S,SAAUkU,YACvBjW,SAAW,EACXuU,UAAY,MAEX,IAAIzO,EAAI,EAAGA,EAAImQ,OAAOtO,OAAQ7B,IAAK,OAC9BsF,MAAQhK,SAASkC,cAAc,SACrC8H,MAAM7K,MAAMiD,SAAW,WACvB4H,MAAM9G,UAAY2R,OAAOnQ,GACzBsF,MAAM7K,MAAMyF,WAAa,SACzBoF,MAAM7K,MAAMsV,KAAO,cACnBzK,MAAM7K,MAAMwB,SAAWA,SAAW,KAClCqJ,MAAM7K,MAAMoC,MAAQ,MACpByI,MAAM7K,MAAMqC,OAAS,WAChBvC,KAAKsD,YAAYyH,OAElBA,MAAMlF,YAAclG,WACpBA,SAAWoL,MAAMlF,aAGjBkF,MAAMnF,aAAesO,YACrBA,UAAYnJ,MAAMnF,mBAEjB5F,KAAK+B,YAAYgJ,aAGnB,CAACpL,SAAUuU,WAGtB2B,gBAAgBzT,KAAMC,IAAKyT,WAAYpU,SAAUyI,aACvCY,MAAQhK,SAASkC,cAAc,gBACrC8H,MAAM7K,MAAMiD,SAAW,WAEvB4H,MAAM9G,UAAYkG,MAElBY,MAAM7K,MAAMsV,KAAO,cACnBzK,MAAM7K,MAAMwB,SAAWA,SAAW,UAE7B1B,KAAKsD,YAAYyH,OAEtBA,MAAM7K,MAAMiD,SAAW,WACvB4H,MAAM7K,MAAMkC,KAAOA,KAAO,KAC1B2I,MAAM7K,MAAMmC,IAAMA,IAAM,KACxB0I,MAAM7K,MAAMoC,MAAQwT,WAAa,KACjC/K,MAAM7K,MAAM6V,MAAQ,OACpBhL,MAAM7K,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK4J,iBAExCqB,MAEX+J,4BAA4B1S,KAAMC,IAAKC,MAAOZ,SAAUoU,WAAY3L,cAGhE9H,KAFcvC,KAAK+V,gBAAgBzT,KAAMC,IAAKyT,WAAYpU,SAAUyI,OAEvDvE,kBAERmP,IAAMjV,KAAKkW,gBAAgB5T,KAAMC,IAAKC,MAAOZ,UAE3CW,IAAMX,SAAW5B,KAAK4I,QAGjCuN,gBAAgB7T,KAAMC,IAAKC,MAAOC,OAAQ2T,OAAQC,UAAWC,aACpDA,SAA8B,IAAnBA,QAAQ9O,mBAInBuK,YAASvR,QACR+V,MAAQD,QAAQ9O,WAClBgP,aAAelU,KACf0B,EAAIF,KAAKG,MAAMjE,KAAK4I,QAAU,GAAK,SAClC,IAAIjD,EAAI,EAAGA,EAAI4Q,MAAO5Q,IAAK,KACxB8Q,gBAAkB,kBAAoBH,QAAQ3Q,GAC9CoG,IAAM/L,KAAKyD,wBACXzD,KAAKE,KACLoC,KAAMC,IACNvC,KAAKG,SAAWH,KAAK4I,QAAS5I,KAAKG,SAAWH,KAAK4I,QACnD,GACA6N,iBAEJ1K,IAAI/I,UAAUC,IAAI,sBACd+J,GAAKqJ,UAAU1Q,GACnBoG,IAAIxL,iBAAiB,SAAS,UACrBmW,iBAAiB3K,IAAKiB,GAAIhJ,MAInC1B,MAAQtC,KAAKG,UAGRwF,EAAI,GAAKyQ,QAAW,IACrB7T,KAAOvC,KAAKG,SACZmC,KAAOkU,eAKnBpB,yBAAyBuB,WAAYC,UAAWlC,gBAAiBE,iBAAkBiC,YAAaC,WAC/DnC,iBAAkBI,uBAAmBgC,wEAAqBC,yEAEnFC,aAAenT,KAAK8D,MAAM8M,gBAAkB1U,KAAKG,UACjD+W,aAAepT,KAAK8D,MAAMgN,iBAAmB5U,KAAKG,UAElDgX,cAAgBrT,KAAK8D,MAAM+M,iBAAmB3U,KAAKG,UACnDiX,cAAgBtT,KAAK8D,OAAOmN,kBAAoB,EAAI/U,KAAK4I,SAAW5I,KAAKG,UAExE4W,eACDE,aAAeA,aAAe,GAE7BD,gBACDG,cAAgBC,cAAgB,OAGhC9W,SAAWN,KACfoT,QAAQ,CAAC,cAAc,SAASC,UAExBC,OAAS,CACTjB,UAAW/R,SAAS+R,UACpBE,SAAUjS,SAASiS,SACnB7R,KAAMJ,SAASI,KACf4V,QAASa,cAAgBC,cACzBC,cAAeJ,aAAeC,cAIlB7D,KAAKE,KAAK,CAAC,CACvBC,WAAY,yBACZC,KAAMH,UAIA,GAAGI,MAAK,SAASC,UACnBoD,cACAzW,SAASgX,sBAAsBX,WAAYC,UAAWlC,gBAClDE,iBAAkBqC,aAAcC,aAAcvD,SAAS4D,gBAAiB5D,SAAS0D,eAErFL,eACA1W,SAAS6V,gBAAgBU,YAAaC,WAAYnC,iBAAkBI,kBAAmBoC,cACnFxD,SAAS0C,UAAW1C,SAAS2C,YAEtCvC,MAAK,SAASzL,cACNA,YAKnBgP,sBAAsBhV,KAAMC,IAAKC,MAAOC,OAAQ2T,OAAQoB,OAAQD,gBAAiBF,mBACzE1R,EAAI,QACF4Q,MAAQc,cAAc7P,YACvBiQ,iBAAcjX,QACbkX,WAAa1X,KAAKG,SAA0B,EAAfH,KAAK4I,QAAc,EAChD+O,eAAiBN,cAAcvP,KAAI8P,SACrCA,QAAQ7H,MAAM,KAAKjI,KAAInH,OAAS0G,SAAS1G,MAAO,KAAO,UAEtD,IAAIkX,GAAK,EAAGA,GAAKL,OAAQK,SACrB,IAAIC,GAAK,EAAGA,GAAK1B,OAAQ0B,KAAM,IAE5BnS,GAAK4Q,QAAUoB,eAAehS,KAAO4R,gBAAgB5R,GAAI,CACzDA,iBAKA0J,OAASpO,SAASkC,cAAc,UACpCkM,OAAOjP,MAAMiD,SAAW,WACxBgM,OAAOjP,MAAMkC,eAAUA,KAAOwV,GAAK9X,KAAKG,eACxCkP,OAAOjP,MAAMmC,cAASA,IAAMsV,GAAK7X,KAAKG,eACtCkP,OAAO7M,MAAQkV,WACfrI,OAAO5M,OAASiV,WAChBrI,OAAOjP,MAAM2X,OAAS,UACtB1I,OAAOrM,UAAUC,IAAI,sBAGhB/C,KAAKsD,YAAY6L,aAGjBD,iBAAiBC,OAAQsI,eAAehS,QAGzCqH,GAAKuK,gBAAgB5R,GACzB0J,OAAO9O,iBAAiB,SAAS,UACxByX,uBAAuB3I,OAAQrC,OAGxCrH,SAGHzF,KAAK8C,UAAUC,IAAI,WAG5B+U,uBAAuB3I,OAAQrC,SACFxM,IAArBR,KAAKyX,mBACAA,YAAYrX,MAAM6X,YAAc,aAEpCR,YAAcpI,OACnBA,OAAOjP,MAAM6X,YAAc,aACvBjU,EAAIF,KAAKG,MAAMjE,KAAK4I,QAAU,GAAK,KACvCyG,OAAOjP,MAAM8X,gBAAkBlU,EAC/BqL,OAAOjP,MAAM+X,eAAiBnU,EAC9BqL,OAAOjP,MAAMgY,iBAAmBpU,EAChCqL,OAAOjP,MAAMiY,kBAAoBrU,OAE5BlD,UAAYkM,QAEZkI,mBAGTwB,iBAAiB3E,OAAQ/E,GAAIhJ,QACLxD,IAAhBR,KAAK+R,cACAA,OAAO3R,MAAM6X,YAAc,aAE/BlG,OAASA,OACdA,OAAO3R,MAAM6X,YAAc,SAE3BlG,OAAO3R,MAAM8X,gBAAkBlU,EAC/B+N,OAAO3R,MAAM+X,eAAiBnU,EAC9B+N,OAAO3R,MAAMgY,iBAAmBpU,EAChC+N,OAAO3R,MAAMiY,kBAAoBrU,OAE5BjD,SAAWiM,QAEXkI,mBAGTA,uBACQoD,aAA2B9X,IAAjBR,KAAKS,SAA+B4G,SAASrH,KAAKS,QAAQE,OAAS,EAC7E4X,aAA4B/X,IAAlBR,KAAKe,eAA6CP,IAAnBR,KAAKc,WAA2BwX,SACtEtY,KAAKa,YAAYF,MAAM6G,OAAS,OAElCzH,UAAUK,MAAMC,WAAakY,QAAU,UAAY,SAG5D9F,wBACSrQ,oBACAjC,SAAW2D,KAAKG,MAAM,GAAMjE,KAAKG,eACjCyI,QAAU9E,KAAKG,MAAM,GAAMjE,KAAK4I,SAGzC0B,WAAWoB,aACA8M,EAAEC,KAAKC,WAAWhN,KAAM,WAGnC8J,8BAA8BlT,KAAMC,IAAKC,MAAOZ,SAAUoU,WAAY3L,aAC5DY,MAAQjL,KAAK+V,gBAAgBzT,KAAMC,IAAKyT,WAAYpU,SAAUyI,WAEhEuC,IAAMrK,IAAMuB,KAAKuB,IAAI4F,MAAMnF,aAAclE,UAAY5B,KAAK4I,QAE1D+P,SAAYrW,KAAO0T,WAAahW,KAAK4I,oBACpCqM,IAAMjV,KAAKkW,gBAAgByC,SAAUpW,IAAKC,MAAQmW,SAAW3Y,KAAK4I,QAAShH,UAEzEgL,IAGXsB,mBAAmB5L,KAAMC,IAAKC,MAAOC,OAAQ+F,QAASoQ,uBAChBpY,IAA9BR,KAAKuO,qBAAoC,KACrCjK,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMC,IAAKC,MAAOC,QACtD6B,IAAIlE,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAK6M,sBACxC0B,qBAAuBjK,YAGR9D,IAApBR,KAAKmO,WAA0B,KAC3B7J,IAAMrD,SAASkC,cAAc,OACjCmB,IAAIlE,MAAMiD,SAAW,WACrBiB,IAAIlE,MAAMkC,KAAOA,KAAO,KACxBgC,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMoC,MAASA,MAAQ,EAAIxC,KAAK4I,QAAW,KAC/CtE,IAAIlE,MAAM0M,YAAc9M,KAAK4I,QAAU,KACvCtE,IAAIlE,MAAM2M,aAAe/M,KAAK4I,QAAU,KAExCtE,IAAIlE,MAAMqE,WAAazE,KAAK0E,YAAY1E,KAAK6M,iBAC7CvI,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK6M,sBACxCsB,WAAa7J,SAEjB6J,WAAWhK,UAAYqE,aACvBxH,KAAKwC,YAAYxD,KAAKmO,iBACtBnJ,eAAehF,KAAKmO,WAAY3L,MAAOoW,eAAe,EAAO5Y,KAAK0B,YAAa1B,KAAK2B,YAAa,IAG1GiR,oBACW,IAAIiG,SAAQ,CAACC,QAASC,cACrBC,QAAUC,UAAUC,KAAK,gBAAiB,GAE9CF,QAAQG,gBAAkB,SAASC,WAC3BC,GAAKD,MAAME,OAAOC,OAEjBF,GAAGG,iBAAiBzI,SAAS,YAC9BsI,GAAGI,kBAAkB,UAAW,CAACC,QAAS,UAIlDV,QAAQW,UAAY,SAASP,WAMrBQ,cALKR,MAAME,OAAOC,OAEDM,YAAY,CAAC,WAAY,YACtBC,YAAY,WAEVC,SAE1BH,cAAcD,UAAY,SAASP,WAC3BY,QAAUZ,MAAME,OAAOC,UACvBS,QAAQxS,OAAS,EAAG,KAEhByS,cAAgB,GACpBD,QAAQE,SAAQC,SACZF,cAAcE,OAAOzO,MAAQyO,OAAOxZ,SAExCmY,QAAQmB,oBAERnB,QAAQ,KAIhBc,cAAcQ,QAAU,WACpBrB,OAAO,IAAIsB,MAAM,6BAIzBrB,QAAQoB,QAAU,WACdtB,QAAQ,QAKpB3Q,YAAY8R,sBACD,IAAIpB,SAAQ,CAACC,QAASC,cACrBC,QAAUC,UAAUC,KAAK,gBAAiB,GAE9CF,QAAQW,UAAY,SAASP,WAGrBS,YAFKT,MAAME,OAAOC,OAEDM,YAAY,CAAC,WAAY,aAC1CS,MAAQT,YAAYC,YAAY,eAG/B,IAAIpO,QAAQuO,iBACTA,cAAcpH,eAAenH,MAAO,KAChC/K,MAAQsZ,cAAcvO,MAC1B4O,MAAMC,IAAI,CAAC7O,KAAMA,KAAM/K,MAAOA,QAKtCkZ,YAAYW,WAAa,WACrB1B,WAGJe,YAAYO,QAAU,WAClBrB,OAAO,IAAIsB,MAAM,6BAIzBrB,QAAQoB,QAAU,WACdrB,OAAO,IAAIsB,MAAM,gCAK7B9R,UAAUC,cACDuF,iBAAiBvF,SAG1ByL,kBACsBzT,IAAdR,KAAKE,YACAc,KAAKiB,YAAYjC,KAAKE,WACtBA,UAAOM,QAEXuB,wBAEA7B,KAAOF,KAAKqE,UAAUrE,KAAKgB,KAAMhB,KAAK4I,QAAS5I,KAAKiO,QAASjO,KAAK0S,UAAW1S,KAAK2S,YAG3F8H,QAAQjI,UAECrK,YADS,CAACyG,SAAU,KAEpBxG,MAAK,kBACF9G,OAAOoZ,SAASC,KAAOnI,KAChB,KAEVnK,OAAM,KACI,IAKnB6N,gBAAgB5T,KAAMC,IAAKC,MAAOZ,gBACxB0C,IAAMrD,SAASkC,cAAc,gBACnCmB,IAAIlE,MAAMiD,SAAW,WACrBiB,IAAIlE,MAAMoC,MAAQA,MAAQ,KAC1B8B,IAAIlE,MAAMwa,KAAO,OACjBtW,IAAIlE,MAAMwB,SAAWA,SAAW,KAEhC0C,IAAIlE,MAAMkC,KAAOA,KAAO,KACxBgC,IAAIlE,MAAMmC,IAAMA,IAAM,KACtB+B,IAAIuW,WAAY,OAEX3a,KAAKsD,YAAYc,UACjB2Q,IAAM3Q,IAEJA,IAGXyG,eAAezI,KAAMC,IAAKC,MAAOC,OAAQyE,WAC/B5C,IAAMtE,KAAKqE,UAAUrE,KAAKgB,KAAMsB,KAAMC,IAAKC,MAAOC,QACxD6B,IAAIlE,MAAM4J,UAAY,SACtB1F,IAAIlE,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAKuK,YAC7CjG,IAAI+F,MAAQrK,KAAKsK,WAAW,0BAEhB,IAARpD,SACKkE,cAAgB9G,SAEhB+G,eAAiB/G,IAI9B6Q,wBAAwBL,OAAQJ,gBAAiBE,iBAAkBD,iBAAkBI,yBAC3E9J,MAAQhK,SAASkC,cAAc,SACrC8H,MAAM7K,MAAMiD,SAAW,WACvB4H,MAAM9G,UAAYnE,KAAKsK,WAAW,cAClCW,MAAM7K,MAAMsV,KAAO,cACnBzK,MAAM7K,MAAMwB,SAAW5B,KAAK4B,SAAW,KACvCqJ,MAAM7K,MAAMoC,MAAQ,MACpByI,MAAM7K,MAAMyF,WAAa,cACpB3F,KAAKsD,YAAYyH,WAElB3K,SAAWN,KACLA,KAAKC,kBAAkBD,KAAKE,KAAM+K,MAAMlF,YAAc/F,KAAK4I,QAASkM,OAAQ9U,KAAKG,SAAUH,KAAK4B,SACtG,GAAI,sBAAsB,EAAO,WACjCrB,iBAAiB,SACjB,eACQoV,SAAWrV,SAASJ,KAAK0V,uBAAuB,sBAE7CD,SAAS,IACZA,SAAS,GAAGE,WAAW5T,YAAY0T,SAAS,IAGhDrV,SAAS8U,yBAAyB,EAAGN,OAAQJ,gBAAiBE,iBAC1D,EAAGE,OAASF,iBAAmBtU,SAASsB,SAAWtB,SAASsI,QAAS+L,iBAAkBI,mBACvF,GAAM,MAGlB9J,MAAM7K,MAAMkC,KAAO,EACnB2I,MAAM7K,MAAMoE,MAAQxE,KAAKsJ,iBAAiBtJ,KAAK4J,iBAC/CqB,MAAM7K,MAAMmC,IAAMuS,OAAS"}