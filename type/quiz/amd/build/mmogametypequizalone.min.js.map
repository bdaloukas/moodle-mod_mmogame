{"version":3,"file":"mmogametypequizalone.min.js","sources":["../src/mmogametypequizalone.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mmogametype_quiz/mmogametypequiz'],\n    function(MmoGameTypeQuiz) {\n    return class MmoGameTypeQuizAlone extends MmoGameTypeQuiz {\n\n        cacheScore;\n\n        avatarElement;\n        nicknameElement;\n\n        // Score variables.\n        lblScore;\n        lblRank;\n        lblPercent;\n        lblAddScore;\n\n        constructor() {\n            super();\n            this.cIcons = this.hasHelp() ? 5 : 4;\n            this.type = 'alone';\n        }\n\n        createIconBar() {\n            let i = 0;\n            const step = this.iconSize + this.padding;\n\n            const nicknameHeight = Math.round(this.iconSize / 3);\n\n            [this.nicknameElement, this.avatarElement] = this.createNicknameAvatar('mmogame-quiz-alone',\n                Math.round(this.padding + (i++) * step),\n                this.padding,\n                2 * this.iconSize + this.padding,\n                nicknameHeight,\n                this.padding + nicknameHeight,\n                this.iconSize);\n\n            [this.lblScore, this.lblRank, this.lblPercent, this.lblAddScore] = this.createDivScorePercent(\n                'mmogame-quiz-alone',\n                this.padding + (i++) * step,\n                this.padding + nicknameHeight,\n                this.getContrastingColor(this.color),\n                true);\n\n            this.createButtonSound(this.padding + (i++) * step,\n                this.padding + this.nickNameHeight);\n            if (this.hasHelp()) {\n                this.createButtonHelp(this.padding + (i++) * step, this.padding);\n                this.buttonHelp.addEventListener(\"click\", () => this.onClickHelp(this.buttonHelp));\n            }\n\n            this.areaRect = {\n                left: this.padding,\n                top: 2 * this.padding + this.iconSize + nicknameHeight,\n                width: Math.round(window.innerWidth - 2 * this.padding),\n                height: Math.round(window.innerHeight - 2 * this.padding - nicknameHeight - this.iconSize),\n            };\n        }\n\n        processSetAnswer(json) {\n            this.correct = json.correct;\n\n            this.playAudio(json.iscorrect !== 0 ? this.audioYes : this.audioNo);\n\n            if (json.correct !== undefined && this.qtype === \"multichoice\") {\n                this.updateScreenAfterAnswerMultichoice();\n            }\n\n            this.disableInput();\n\n            if (this.btnSubmit) {\n                this.body.removeChild(this.btnSubmit);\n                this.btnSubmit = undefined;\n            }\n\n            const btn = super.createImageButton(\n                this.area,\n                'mmogame-quiz-next',\n                this.nextLeft,\n                this.nextTop,\n                0,\n                this.iconSize,\n                'assets/next.svg'\n            );\n            btn.addEventListener(\"click\", () => {\n                this.callGetAttempt();\n                this.area.removeChild(btn);\n            });\n\n            this.showScore(json);\n        }\n\n        onServerFastJson(response) {\n            const [state, timefastjson] = response.split(\"-\").map(Number);\n            if (timefastjson !== this.timefastjson || state !== this.state) {\n                this.sendGetAttempt({mmogameid: this.mmogameid, kinduser: this.kinduser, user: this.user});\n                return;\n            }\n\n            this.sendFastJSON();\n        }\n\n        /**\n         * Creates the game screen layout based on the current state.\n         *\n         * @param {Object} json - The game data used to build the screen.\n         * @param {boolean} disabled - Determines whether user input should be disabled.\n         */\n        createScreen(json, disabled) {\n            this.createArea(); // Prepare the main game area\n\n            if (this.endofgame) {\n                // Display end-of-game message and final score\n                this.createDivMessage('mmogame-endofgame', this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            // Render the screen layout based on orientation (vertical or horizontal)\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(json, disabled);\n            }\n\n            // Display the current score\n            this.showScore(json);\n        }\n\n\n        /**\n         * Creates a horizontal layout for the quiz screen.\n         *\n         * @param {object} json\n         * @param {boolean} disabled - Whether user input should be disabled.\n         */\n        createScreenHorizontal(json, disabled) {\n            let maxHeight = this.areaRect.height - 2 * this.padding;\n\n            if (!this.hideSubmit) {\n                maxHeight -= this.iconSize + this.padding; // Reserve space for submit button\n            }\n\n            const width = Math.round((this.areaRect.width - this.padding) / 2);\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    (fontSize) => {\n                        defSize = this.createDefinition(0, 0, width - this.padding, true, fontSize,\n                            json.definition);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = this.createAnswer(0, 0, width - this.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= this.areaRect.height) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, false, this.fontSize, json.definition);\n\n            this.nextTop = this.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n\n            if (!this.hideSubmit) {\n                // Create and position the submit button\n                this.btnSubmit = this.createImageButton(\n                    this.body,\n                    'mmogame-quiz-submit',\n                    width + (width - this.iconSize) / 2,\n                    this.nextTop,\n                    0,\n                    this.iconSize,\n                    'assets/submit.svg',\n                    false,\n                    'submit'\n                );\n                this.btnSubmit.addEventListener('click', () => {\n                    this.sendAnswer();\n                });\n            }\n\n            // Adjust strip dimensions\n            this.stripLeft = width + this.padding;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        processGetAttempt(json) {\n            // Calculate time difference and set up the clock\n            this.computeDifClock(json.time, json.timestart, json.timeclose);\n\n            if (parseInt(json.state) === 0) {\n                json.qtype = '';\n                if (json.colors) {\n                    this.setColorsString(json.colors);\n                    this.createIconBar();\n                }\n                this.showScore(json);\n                this.createDivMessageStart(this.getStringM('js_wait_to_start'));\n                return;\n            }\n\n            // Set colors if provided\n            if (json.colors) {\n                this.setColorsString(json.colors);\n                this.createIconBar(); // Initialize the top bar with icons\n            }\n\n            // Update the window title if a name is provided\n            if (json.name) {\n                document.title = json.name;\n            }\n\n            // Set help URL if available\n            if (json.helpurl) {\n                this.helpUrl = json.helpurl;\n            }\n\n            // Handle error messages from the server\n            if (json.errorcode) {\n                this.createDivMessage('mmogame-error', json.errorcode);\n                return;\n            }\n\n            // Update game state and user-related data\n            this.state = parseInt(json.state, 10);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson, 10);\n            this.updateButtonsAvatar(1, this.avatarElement, this.nicknameElement, json.avatar, json.nickname, this.iconSize,\n                Math.round(this.iconSize / 3));\n\n            this.attempt = json.attempt;\n\n            // Process question type and answers\n            this.qtype = json.qtype;\n            if (this.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = json.answerids;\n                json.answers.forEach((answer, index) => {\n                    this.answers[index] = this.repairP(answer); // Process each answer\n                });\n            }\n            this.answer = json.answer ?? undefined;\n\n            // Handle end-of-game scenarios\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            json.definition = this.repairP(json.definition);\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            // A this.updateLabelTimer(); // Start or update the timer\n            this.sendFastJSON(); // Send fast JSON updates\n\n            if (this.btnSubmit) {\n                this.btnSubmit.style.visibility = \"hidden\";\n            }\n        }\n\n        showScore({rank, rankc, sumscore}) {\n            if (rank !== undefined && rankc !== undefined) {\n                if (parseInt(rank) < parseInt(rankc)) {\n                    this.completedrank = '';\n                    this.rank = `# ${rank}`;\n                } else {\n                    this.rank = '';\n                    this.completedrank = `# ${rankc}`;\n                }\n            }\n\n            const s = sumscore === undefined ? '' : `<b>${sumscore}</b>`;\n            if (this.cacheScore !== s) {\n                this.cacheScore = s;\n                this.lblScore.innerHTML = s;\n                this.autoResizeText(this.lblScore, 0.8 * this.iconSize / 2, this.iconSize / 2, false, 0, 0);\n            }\n        }\n\n        showHelpScreen(div) {\n            div.innerHTML = `\n                <br>\n                <div>${this.getStringT('js_alone_help')}</div><br>\n\n                <table border=1>\n                    <tr>\n                        <td><img height=\"83\" src=\"assets/aduel/example2.png\" alt=\"\" /></td>\n                        <td>${this.getStringT('js_aduel_example2')}</td>\n                    </tr>\n                </table>\n            `;\n        }\n    };\n});"],"names":["define","MmoGameTypeQuiz","cacheScore","avatarElement","nicknameElement","lblScore","lblRank","lblPercent","lblAddScore","constructor","super","this","cIcons","hasHelp","type","createIconBar","i","step","iconSize","padding","nicknameHeight","Math","round","createNicknameAvatar","createDivScorePercent","getContrastingColor","color","createButtonSound","nickNameHeight","createButtonHelp","buttonHelp","addEventListener","onClickHelp","areaRect","left","top","width","window","innerWidth","height","innerHeight","processSetAnswer","json","correct","playAudio","iscorrect","audioYes","audioNo","undefined","qtype","updateScreenAfterAnswerMultichoice","disableInput","btnSubmit","body","removeChild","btn","createImageButton","area","nextLeft","nextTop","callGetAttempt","showScore","onServerFastJson","response","state","timefastjson","split","map","Number","sendFastJSON","sendGetAttempt","mmogameid","kinduser","user","createScreen","disabled","createArea","endofgame","createDivMessage","getStringM","vertical","createScreenVertical","createScreenHorizontal","maxHeight","hideSubmit","defSize","fontSize","findbest","minFontSize","maxFontSize","createDefinition","definition","ansSize","createAnswer","radioSize","sendAnswer","stripLeft","stripWidth","stripHeight","processGetAttempt","computeDifClock","time","timestart","timeclose","parseInt","colors","setColorsString","createDivMessageStart","name","document","title","helpurl","helpUrl","errorcode","fastjson","updateButtonsAvatar","avatar","nickname","attempt","answers","answersID","answerids","forEach","answer","index","repairP","style","visibility","_ref","rank","rankc","sumscore","completedrank","s","innerHTML","autoResizeText","showHelpScreen","div","getStringT"],"mappings":"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"}