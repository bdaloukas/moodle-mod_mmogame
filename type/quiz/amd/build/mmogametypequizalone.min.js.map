{"version":3,"file":"mmogametypequizalone.min.js","sources":["../src/mmogametypequizalone.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mmogametype_quiz/mmogametypequiz'],\n    function(MmoGameTypeQuiz) {\n    return class MmoGameTypeQuizAlone extends MmoGameTypeQuiz {\n        constructor() {\n            super();\n            this.cIcons = this.hasHelp() ? 5 : 4;\n            this.autosave = true;\n            this.autosubmit = true;\n            this.type = 'alone';\n        }\n\n        createIconBar() {\n            let i = 0;\n\n            this.nickNameHeight = Math.round(this.iconSize / 3);\n\n            this.buttonAvatarLeft = this.padding + i * (this.iconSize + this.padding);\n            this.buttonAvatarHeight = Math.round(this.iconSize - this.iconSize / 3);\n            this.buttonAvatarTop = this.iconSize - this.buttonAvatarHeight + this.padding;\n            this.createButtonsAvatar(1, Math.round(this.padding + (i++) * (this.iconSize + this.padding)));\n            this.buttonsAvatar[1].style.top = (this.padding + this.nickNameHeight) + \"px\";\n\n            this.createDiv(this.body, this.buttonAvatarLeft, this.padding, this.iconSize, this.buttonAvatarTop);\n\n            this.createDivScorePercent(this.padding + (i++) * (this.iconSize + this.padding),\n                this.padding + this.nickNameHeight, 1);\n\n            this.createButtonSound(this.padding + (i++) * (this.iconSize + this.padding), this.padding + this.nickNameHeight);\n            let instance = this;\n            if (this.hasHelp()) {\n                this.createButtonHelp(this.padding + (i++) * (this.iconSize + this.padding), this.padding);\n                this.buttonHelp.addEventListener(\"click\", function() {\n                    instance.onClickHelp(instance.buttonHelp);\n                });\n            }\n\n            let copyrightHeight = this.getCopyrightHeight();\n\n            this.areaTop = 2 * this.padding + this.iconSize + this.nickNameHeight;\n            this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n\n            this.areaHeight = Math.round(window.innerHeight - this.areaTop - copyrightHeight);\n\n            this.createDivColor(this.body, 0, window.innerHeight - copyrightHeight - 1, window.innerWidth - 1, copyrightHeight,\n                this.getColorGray(this.colorCopyright));\n            this.vertical = this.areaHeight > this.areaWidth;\n        }\n\n        sendAnswer() {\n            // Clear any existing timeout to prevent duplicate calls\n            clearTimeout(this.timerTimeout);\n            this.timerTimeout = undefined;\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Define the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.auserid,\n                    attempt: instance.attempt,\n                    answer: instance.answer,\n                    answerid: instance.answerid,\n                    subcommand: '',\n                };\n                // Call the service through the Moodle AJAX API\n                let ret = Ajax.call([{\n                    methodname: 'mmogametype_quiz_set_answer', // Service method name\n                    args: params // Parameters to pass\n                }]);\n\n                // Handle the server response\n                ret[0].done(function(response) {\n                    instance.onServerAnswer(JSON.parse(response)); // Trigger further action\n                }).fail(function(error) {\n                    // Return the error if the call fails\n                    return error;\n                });\n            });\n        }\n\n        onServerAnswer(json) {\n            this.correct = json.correct;\n\n            this.updateScreenAfterAnswer(this.correct, this.iscorrect);\n        }\n\n        onServerFastJson(response) {\n            let pos = response.indexOf(\"-\");\n            if (pos >= 0) {\n                let state = parseInt(response.slice(0, pos));\n                let timefastjson = parseInt(response.slice(pos + 1));\n                if (timefastjson !== this.timefastjson || state !== this.state) {\n                    this.sendGetAttempt();\n                    return;\n                }\n            }\n\n            this.sendFastJSON();\n        }\n\n        onServerGetAttempt(json, param) {\n            if (json.state === 0 && param === undefined) {\n                json.qtype = '';\n                super.onServerGetAttempt(json.time, json.timeclose, json.colors, json.name, json.helprl, json.errorcode,\n                    json.state, json.fastjson, json.avatar, json.nickname, json.timefastjson, json.attempt, json.qtype,\n                    json.answer, json.answerids, json.answers, json.endofgame, json.definition);\n                this.showScore(json.sumcorrect, json.rank, json.name, json.usercode, json.addscore, json.completedrank,\n                    json.percentcompleted, json.rankc, json.sumscore);\n\n                this.createDivMessageStart(this.getStringM('js_wait_to_start'));\n                return;\n            }\n\n            super.onServerGetAttempt(json, param);\n            if (this.btnSubmit !== undefined) {\n                this.btnSubmit.style.visibility = \"hidden\";\n            }\n        }\n\n        showScore(sumcorrect, rank, name, usercode, addscore, completedrank, percentcompleted, rankc, sumscore) {\n            if (rank !== undefined && rankc !== undefined) {\n                if (parseInt(rank) < parseInt(rankc)) {\n                    this.completedrank = '';\n                    this.rank = '# ' + rank;\n                } else {\n                    this.rank = '';\n                    this.completedrank = '# ' + rankc;\n                }\n            }\n\n            let s = sumscore;\n            super.showScore(sumcorrect, rank, name, usercode, addscore, completedrank, percentcompleted);\n            sumscore = s;\n            s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                this.autoResizeText(this.labelScore, 0.8 * this.iconSize / 2, this.iconSize / 2, false, 0, 0, 1);\n            }\n        }\n\n        showHelpScreen(div) {\n            div.innerHTML = `<br>\n<div>[LANG_ALONE_HELP]</div><br>\n\n<table border=1>\n    <tr>\n        <td><img height=\"83\" src=\"../../assets/aduel/example2.png\" alt=\"\" /></td>\n        <td>` + this.getStringG('js_aduel_example2') + `</td>\n    </tr>\n</table>\n        `;\n        }\n    };\n});"],"names":["define","MmoGameTypeQuiz","constructor","cIcons","this","hasHelp","autosave","autosubmit","type","createIconBar","i","nickNameHeight","Math","round","iconSize","buttonAvatarLeft","padding","buttonAvatarHeight","buttonAvatarTop","createButtonsAvatar","buttonsAvatar","style","top","createDiv","body","createDivScorePercent","createButtonSound","instance","createButtonHelp","buttonHelp","addEventListener","onClickHelp","copyrightHeight","getCopyrightHeight","areaTop","areaWidth","window","innerWidth","areaHeight","innerHeight","createDivColor","getColorGray","colorCopyright","vertical","sendAnswer","clearTimeout","timerTimeout","undefined","require","Ajax","params","mmogameid","kinduser","user","auserid","attempt","answer","answerid","subcommand","call","methodname","args","done","response","onServerAnswer","JSON","parse","fail","error","json","correct","updateScreenAfterAnswer","iscorrect","onServerFastJson","pos","indexOf","state","parseInt","slice","timefastjson","sendGetAttempt","sendFastJSON","onServerGetAttempt","param","qtype","time","timeclose","colors","name","helprl","errorcode","fastjson","avatar","nickname","answerids","answers","endofgame","definition","showScore","sumcorrect","rank","usercode","addscore","completedrank","percentcompleted","rankc","sumscore","createDivMessageStart","getStringM","btnSubmit","visibility","s","labelScore","innerHTML","autoResizeText","showHelpScreen","div","getStringG"],"mappings":"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"}