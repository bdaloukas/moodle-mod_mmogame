{"version":3,"file":"mmogame.min.js","sources":["../src/mmogame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine([''], function() {\n    return class MmoGame {\n        kindSound = 0;\n        state = 0;\n        body;\n        minFontSize;\n        maxFontSize;\n        fontSize;\n        avatarTop;\n        colorsBackground;\n        buttonAvatarTop;\n        buttonAvatarHeight;\n        colorScore;\n        colorScore2;\n        definition;\n        colorDefinition;\n\n        /**\n         * Basic class for games.\n         *\n         * @module mmogame\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n        constructor() {\n            this.body = document.getElementsByTagName(\"body\")[0];\n            this.kindSound = 0;\n\n            let size = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue('font-size'));\n            this.minFontSize = size;\n            this.maxFontSize = 2 * size;\n            this.fontSize = size;\n        }\n\n        hasHelp() {\n            return false;\n        }\n\n        removeBodyChilds() {\n            this.removeDivMessage();\n\n            while (this.body.firstChild) {\n                this.body.removeChild(this.body.lastChild);\n            }\n            this.area = undefined;\n        }\n\n        openGame() {\n            this.removeBodyChilds();\n            this.area = undefined;\n            this.computeSizes();\n        }\n\n        createImageButton(parent, left, top, width, height, classname, filename, wrap, alt) {\n            let button = this.createImage(parent, left, top, width, height, filename);\n\n            if (alt !== undefined && alt !== '') {\n                button.alt = alt;\n            }\n            button.classList.add(\"mmogame_imgbutton\");\n            button.setAttribute(\"role\", \"button\");\n\n            return button;\n        }\n\n        createImage(parent, left, top, width, height, filename) {\n            let button = document.createElement(\"img\");\n\n            button.tabIndex = 0;\n            button.style.position = \"absolute\";\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.draggable = false;\n\n            if (width !== 0) {\n                button.style.width = width + \"px\";\n            }\n            if (height !== 0) {\n                button.style.height = height + \"px\";\n            }\n            button.style.fontSize = height + \"px\";\n            if (filename !== undefined && filename !== '') {\n                button.src = filename;\n            }\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        createCenterImageButton(parent, left, top, width, height, classname, filename) {\n            let button = document.createElement(\"img\");\n            button.classList.add(\"mmogame_imgbutton\");\n            button.style.position = \"absolute\";\n            button.draggable = false;\n\n            const img = new Image();\n            img.onload = function() {\n                if (this.width === 0 || this.height === 0) {\n                    this.width = this.height = 1;\n                }\n\n                if (this.width > 0 && this.height > 0) {\n                    let mul = Math.min(width / this.width, height / this.height);\n                    let w = Math.round(this.width * mul);\n                    let h = Math.round(this.height * mul);\n\n                    button.style.width = w + \"px\";\n                    button.style.height = h + \"px\";\n                    button.style.left = (left + width / 2 - w / 2) + \"px\";\n                    button.style.top = (top + height / 2 - h / 2) + \"px\";\n\n                    button.src = filename;\n                    button.innerHTML = filename;\n                    button.style.fontSize = height + \"px\";\n                }\n            };\n            if (filename !== undefined && filename !== \"\") {\n                img.style.left = left + \"px\";\n                img.style.top = top + \"px\";\n                img.style.visibility = 'hidden';\n                img.src = filename;\n            }\n            button.tabIndex = 0;\n            parent.appendChild(button);\n\n            return button;\n        }\n\n        updateImageButton(button, left, top, width, height, filename) {\n            button.src = filename;\n        }\n\n        createDiv(parent, left, top, width, height) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = width + \"px\";\n            div.style.height = height + \"px\";\n\n            parent.appendChild(div);\n\n            return div;\n        }\n\n        createDivColor(parent, left, top, width, height, color) {\n            let div = this.createDiv(parent, left, top, width, height);\n            div.style.background = this.getColorHex(color);\n\n            return div;\n        }\n\n        getMuteFile() {\n            if (this.kindSound === 0) {\n                return 'assets/sound-on-flat.png';\n            } else if (this.kindSound === 1) {\n                return 'assets/sound-off-flat.png';\n            } else if (this.kindSound === 2) {\n                return 'assets/speak.svg';\n            } else {\n                return 'assets/sound-on-flat.png';\n            }\n        }\n\n        playAudio(audio) {\n            if (this.kindSound !== 0 && audio !== null) {\n                if (audio.networkState === 1) {\n                    audio.play();\n                }\n            }\n        }\n\n        autoResizeText(item, width, height, wrap, minFontSize, maxFontSize, minRatio) {\n            let minHeight = 0.9 * height;\n            let low = Math.max(1, minFontSize);\n            width = Math.round(width);\n            height = Math.round(height);\n            let up = maxFontSize === 0 || maxFontSize === undefined ? Math.min(width, height) : maxFontSize;\n\n            let fitSize = low;\n            let fitHeight = 0;\n            let newHeight = 0;\n            let newWidth = 0;\n\n            for (let i = 0; i <= 10; i++) {\n                let el = document.createElement(\"div\");\n                el.style.left = 0;\n                el.style.top = 0;\n                el.style.width = width + \"px\";\n                el.style.height = 0;\n                el.visibility = \"visible\";\n                if (!wrap) {\n                    el.style.whiteSpace = \"nowrap\";\n                }\n                el.innerHTML = item.innerHTML;\n                this.body.appendChild(el);\n\n                let fontSize = (low + up) / 2;\n\n                el.style.fontSize = fontSize + \"px\";\n                newHeight = el.scrollHeight;\n                newWidth = el.scrollWidth - 1;\n\n                this.body.removeChild(el);\n\n                if (newWidth > width || newHeight > height) {\n                    up = fontSize;\n                } else {\n                    low = fontSize;\n                    if (Math.abs(fitHeight - newHeight) <= 2) {\n                        break;\n                    }\n                    fitHeight = newHeight;\n                    fitSize = fontSize;\n                    if (newHeight > minHeight) {\n                        break;\n                    }\n                }\n            }\n            item.style.fontSize = fitSize + \"px\";\n\n            if (newWidth > width || newHeight > height) {\n                this.autoResizeTextBr(item);\n                newWidth = item.scrollWidth;\n                newHeight = item.scrollHeight;\n                this.autoResizeTextImage(item, newWidth > width ? newWidth - width : 0, newHeight > height ? newHeight - height : 0,\n                    minRatio);\n            } else {\n                return [item.scrollWidth - 1, item.scrollHeight];\n            }\n\n            let el = document.createElement(\"div\");\n            el.style.width = width + \"px\";\n            el.style.height = 0;\n            el.visibility = \"hidden\";\n            if (!wrap) {\n                el.style.whiteSpace = \"nowrap\";\n            }\n            el.innerHTML = item.innerHTML;\n            this.body.appendChild(el);\n            el.style.fontSize = item.style.fontSize;\n            let size = [el.scrollWidth - 1, el.scrollHeight];\n            this.body.removeChild(el);\n\n            return size;\n        }\n\n        autoResizeTextBr(item) {\n            let s = item.innerHTML;\n            let change = false;\n            while (s.startsWith('<br>')) {\n                s = s.substring(4);\n                change = true;\n            }\n            let pos1 = s.indexOf('<br>');\n            for (; ;) {\n                let pos = s.indexOf('<br>', pos1 + 4);\n                if (pos < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos1 + 4, pos);\n                if (!s2.trim()) {\n                    s = s.substring(0, pos1 + 4) + s.substring(pos + 4);\n                    change = true;\n                    pos = pos1;\n                }\n                pos1 = pos;\n            }\n\n            if (change) {\n                item.innerHTML = s;\n            }\n        }\n\n        autoResizeTextImage(item, subwidth, subheight, minRatio) {\n            if (subwidth === 0 && subheight === 0) {\n                return;\n            }\n            let s = item.innerHTML;\n\n            for (let pos = 0; ;) {\n                let pos2 = s.indexOf(\"<img \", pos);\n                if (pos2 < 0) {\n                    break;\n                }\n                let pos3 = s.indexOf(\">\", pos2);\n                if (pos3 < 0) {\n                    break;\n                }\n                let s2 = s.substring(pos2, pos3) + \" \";\n\n                let width = 0;\n                let height = 0;\n                let posw = s2.indexOf(\"width=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 6, posw2).replace(/\"/g, \"\");\n                        width = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n\n                posw = s2.indexOf(\"height=\");\n                if (posw >= 0) {\n                    let posw2 = s2.indexOf(\" \", posw);\n                    if (posw2 >= 0) {\n                        let num = s2.slice(posw + 7, posw2).replace(/\"/g, \"\");\n                        height = parseInt(num);\n                        s2 = s2.slice(0, posw) + s2.slice(posw2);\n                    }\n                }\n                if (width > 0 && height > 0) {\n                    let newWidth = width - subwidth > 0 ? width - subwidth : width / 2;\n                    let newHeight = height - subheight > 0 ? height - subheight : height / 2;\n                    let ratio = Math.max(minRatio, Math.min(newWidth / width, newHeight / height));\n                    s2 = s2 + \" width=\\\"\" + Math.round(ratio * width) + \"\\\" height=\\\"\" + Math.round(height * ratio) + \"\\\" \";\n                }\n                s = s.slice(0, pos2) + s2 + s.slice(pos3);\n                pos = pos3;\n            }\n            item.innerHTML = s;\n        }\n\n        pad(num, size) {\n            let s = num + \"\";\n            while (s.length < size) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        uuid4() {\n            const uuid = new Array(36);\n            const hexDigits = '0123456789abcdef'; // Lookup table for hexadecimal digits\n\n            for (let i = 0; i < 36; i++) {\n                uuid[i] = Math.floor(Math.random() * 16); // Generate random numbers for each position\n            }\n\n            // Insert dashes at predefined positions\n            uuid[8] = '-';\n            uuid[13] = '-';\n            uuid[18] = '-';\n            uuid[23] = '-';\n\n            // Set specific bits to comply with UUIDv4 standards\n            uuid[14] = 4; // The 13th position represents version 4 (0100 in binary)\n            // eslint-disable-next-line no-bitwise\n            uuid[19] = (uuid[19] & 0x3) | 0x8; // The 17th position must start with '10' in binary\n\n            // Convert numbers to hexadecimal without using toString\n            return uuid\n                .map((x) => (typeof x === 'string' ? x : hexDigits[x])) // Convert numeric values to hex using lookup table\n                .join('');\n        }\n\n        computeSizes() {\n            if (this.cIcons < 5 || this.cIcons === undefined) {\n                this.cIcons = 5;\n            }\n            this.iconSize = Math.min(window.innerWidth / this.cIcons, window.innerHeight / 5);\n\n            this.iconSize = Math.round(this.iconSize - this.iconSize / 10 / this.cIcons);\n\n            this.padding = Math.round(this.iconSize / 10);\n            this.iconSize -= this.padding;\n        }\n\n        getIconSize() {\n            return this.iconSize;\n        }\n\n        getCopyrightHeight() {\n            return Math.round(this.getIconSize() / 3);\n        }\n\n        getPadding() {\n            return this.padding;\n        }\n\n        getColorHex(x) {\n            const hexDigits = '0123456789ABCDEF'; // Lookup table for hexadecimal digits\n            const hexArray = [];\n\n            for (let i = 0; i < 6; i++) {\n                // Extract the least significant nibble and find its hex representation\n                // eslint-disable-next-line no-bitwise\n                hexArray.unshift(hexDigits[x & 0xF]);\n                // eslint-disable-next-line no-bitwise\n                x >>= 4; // Shift right by 4 bits to process the next nibble\n            }\n\n            // Join the hex digits and prefix with '#'\n            return '#' + hexArray.join('');\n        }\n\n        getContrast(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256; // Blue.\n\n            return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        }\n\n        getColorGray(x) {\n            let r = Math.floor(x / 0x1000000) % 256, // Red.\n                g = Math.floor(x / 0x10000) % 256, // Green.\n                b = Math.floor(x / 0x100) % 256, // Blue.\n                yiq = (r * 299) + g * 587 + b * 114,\n                m = 255 * 299 + 255 * 587 + 255 * 114,\n                gray = Math.round(yiq * 255 / m);\n\n            return (gray * 0x10000) + (gray * 0x100) + gray;\n        }\n\n        getColorContrast(x) {\n            return (this.getContrast(x) >= 128) ? '#000000' : '#ffffff';\n        }\n\n        repairColors(colors) {\n\n            this.colors = colors;\n            let instance = this;\n            this.colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n\n            this.colorBackground = this.colors[0];\n            this.body.style.background = this.getColorHex(this.colorBackground);\n\n            return this.colors;\n        }\n\n        repairP(s) {\n            if (s === undefined) {\n                return \"\";\n            }\n\n            // Remove <p> tags and replace </p> with <br />\n            let s2 = s.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br/>').trim();\n\n            // Remove <br> or <br/> at the end of the string\n            s2 = s2.replace(/<br\\s*\\/?>$/g, '');\n\n            // Remove the <ol><br></ol> sequence if it exists\n            let pos = s2.indexOf('<ol><br></ol>');\n            if (pos >= 0) {\n                s2 = s2.slice(0, pos) + s2.slice(pos + 13);\n            }\n\n            return s2;\n        }\n\n        createDivScorePercent(left, top, num) {\n            let button = document.createElement(\"button\");\n            button.style.position = \"absolute\";\n            button.classList.add(\"mmogame_button\");\n            button.style.left = left + \"px\";\n            button.style.top = top + \"px\";\n            button.style.width = this.iconSize + \"px\";\n            button.style.height = this.iconSize + \"px\";\n            button.style.lineHeight = this.iconSize + \"px\";\n            button.style.textAlign = \"center\";\n            button.style.border = \"0px solid \" + this.getColorHex(0xFFFFFF);\n            button.style.boxShadow = \"inset 0 0 0.125em rgba(255, 255, 255, 0.75)\";\n            if (num === 1) {\n                button.style.background = this.getColorHex(this.colorScore);\n                button.style.color = this.getColorContrast(this.colorScore);\n                button.title = this.getStringM('js_grade');\n            } else {\n                button.style.background = this.getColorHex(this.colorScore2);\n                button.style.color = this.getColorContrast(this.colorScore2);\n            }\n\n            this.body.appendChild(button);\n\n            button.innerHTML = '';\n            button.disabled = true;\n\n            let div = this.createDiv(this.body, left, top + this.iconSize / 4, this.iconSize / 2, this.iconSize / 2);\n            div.style.lineHeight = (this.iconSize / 2) + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            if (num === 1) {\n                this.labelScore = div;\n                div.title = this.getStringM('js_grade');\n            } else {\n                this.labelScore2 = div;\n                div.title = this.getStringM('js_grade_opponent');\n            }\n\n            let h = this.iconSize / 3;\n            div = this.createDiv(this.body, left, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_ranking_grade');\n            if (num === 1) {\n                this.labelScoreRank = div;\n            } else {\n                this.labelScoreRank2 = div;\n            }\n\n            div = this.createDiv(this.body, left, top + this.iconSize - h, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.color = this.getColorContrast(this.colorScore);\n            div.title = this.getStringM('js_grade_last_question');\n            button.disabled = true;\n            if (num === 1) {\n                this.labelAddScore = div;\n            } else {\n                this.labelAddScore2 = div;\n            }\n\n            let label = num === 1 ? this.labelScoreRank : this.labelScoreRank2;\n\n            div = this.createDiv(this.body, left + this.iconSize / 2, top, this.iconSize / 2, h);\n            div.style.textAlign = \"center\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = h + \"px\";\n            div.style.lineHeight = h + \"px\";\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_ranking_percent');\n            if (num === 1) {\n                this.labelScoreRankB = div;\n            }\n\n            label = num === 1 ? this.labelAddScore : this.labelAddScore2;\n            div = this.createDiv(this.body, left + this.iconSize / 2, parseFloat(this.labelScore.style.top), this.iconSize / 2,\n                this.iconSize / 2);\n            div.style.textAlign = \"center\";\n            div.style.lineHeight = Math.round(this.iconSize / 2) + \"px\";\n            div.style.fontName = label.style.fontName;\n            div.style.fontSize = label.style.fontSize;\n            div.style.fontWeight = 'bold';\n            div.style.color = label.style.color;\n            div.title = this.getStringM('js_percent');\n            this.autoResizeText(div, this.iconSize / 2, this.iconSize / 2, false);\n            if (num === 1) {\n                this.labelScoreB = div;\n            }\n        }\n\n        createDivTimer(left, top, sizeIcon) {\n            let div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.width = sizeIcon + \"px\";\n            div.style.height = sizeIcon + \"px\";\n            div.style.whiteSpace = \"nowrap\";\n            div.style.lineHeight = sizeIcon + \"px\";\n            div.style.textAlign = \"center\";\n            div.style.background = this.getColorHex(this.colorBackground); // \"#234025\"\n            div.style.color = this.getColorContrast(this.colorBackground); // \"#DCBFDA\"\n            div.name = \"timer\";\n            this.body.appendChild(div);\n            this.labelTimer = div;\n\n            div.innerHTML = '23:59';\n            this.autoResizeText(div, sizeIcon, sizeIcon, false, 0, 0, 1);\n            div.innerHTML = '';\n            div.title = this.getStringM('js_question_time');\n        }\n\n        createButtonSound(left, top) {\n            this.buttonSound = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"mmogame_button_red\",\n                this.getMuteFile());\n            this.buttonSound.alt = this.getStringM('js_sound');\n            let instance = this;\n            this.buttonSound.addEventListener(\"click\", function() {\n                instance.onClickSound(instance.buttonSound);\n            });\n\n            this.buttonSound.title = this.getStringM('js_sound');\n        }\n\n        onClickSound(btn) {\n            window.title = btn.src;\n            this.kindSound = (this.kindSound + 1) % 2;\n            window.localStorage.setItem(\"kindSound\", toString(this.kindSound));\n            btn.src = this.getMuteFile();\n        }\n\n        createButtonHelp(left, top) {\n            this.buttonHelp = this.createImageButton(this.body, left, top, this.iconSize, this.iconSize, \"\", 'assets/help.svg');\n            this.buttonHelp.alt = this.getStringM('js_help');\n        }\n\n        findbest(low, up, fn) {\n            if (low < 1) {\n                low = 1;\n            }\n\n            let prevSize;\n            let fitSize = low;\n            let testSize;\n            for (let i = 0; i <= 10; i++) {\n                prevSize = low;\n                testSize = (low + up) / 2;\n\n                let cmp = fn(testSize);\n                if (cmp <= 0) {\n                    fitSize = testSize;\n                    low = testSize;\n                } else {\n                    up = testSize;\n                }\n                if (Math.abs((testSize - prevSize) / testSize) < 0.01) {\n                    break;\n                }\n            }\n\n            return fitSize;\n        }\n\n        createDefinition(left, top, width, onlyMetrics, fontSize) {\n\n            width -= 2 * this.padding;\n            let div = document.createElement(\"div\");\n\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n\n            div.style.fontSize = fontSize + \"px\";\n            // A div.innerHTML = this.repairHTML(this.definition, this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n            div.innerHTML = this.definition;\n            div.style.textAlign = \"left\";\n\n            if (onlyMetrics) {\n                this.body.appendChild(div);\n                let ret = [div.scrollWidth - 1, div.scrollHeight];\n                this.body.removeChild(div);\n                return ret;\n            }\n\n            div.style.background = this.getColorHex(this.colorDefinition);\n            div.style.color = this.getColorContrast(this.colorDefinition);\n            div.style.left = left + \"px\";\n            div.style.top = top + \"px\";\n            div.style.paddingLeft = this.padding + \"px\";\n            div.style.paddingRight = this.padding + \"px\";\n            div.id = \"definition\";\n\n            this.area.appendChild(div);\n            let height = div.scrollHeight + this.padding;\n            div.style.height = height + \"px\";\n\n            this.definitionHeight = height;\n            this.divDefinition = div;\n\n            return [div.scrollWidth - 1, div.scrollHeight];\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined) {\n                return;\n            }\n            if (this.timeclose === 0 || this.timestart === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n\n            let dif = Math.round(this.timeclose - ((new Date()).getTime()) / 1000);\n            if (dif <= 0) {\n                dif = 0;\n                this.sendTimeout();\n            }\n            const minutes = Math.floor(Math.abs(dif) / 60);\n            const seconds = Math.abs(dif) % 60;\n            const prefix = dif < 0 ? \"-\" : \"\";\n            this.labelTimer.innerHTML = `${prefix}${minutes}:${seconds.toString().padStart(2, '0')}`;\n\n            if (dif === 0) {\n                return;\n            }\n\n            let instance = this;\n            setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        createDivMessage(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            this.createDivMessageDo(left, top, width, height, message, height);\n\n            this.divMessage.style.top = (height - this.divMessage.scrollHeight) / 2 + \"px\";\n        }\n\n        createDivMessageStart(message) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n\n            let left = this.padding;\n            let top = this.areaTop;\n            let width = window.innerWidth - 2 * this.padding;\n            let height = window.innerHeight - this.getCopyrightHeight() - this.padding - top;\n\n            let height1 = height / 8;\n\n            this.createDivMessageDo(left, top, width, height, message, height1);\n\n            top += (height1 - this.divMessage.scrollHeight) / 2;\n            this.divMessage.style.top = top + \"px\";\n\n            if (this.divMessageHelp === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"left\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                let top = this.iconSize + 3 * this.padding + height1;\n                div.style.top = (top + this.padding) + \"px\";\n                div.style.height = (height - height1) + \"px\";\n                this.divMessageHelp = div;\n                this.body.appendChild(this.divMessageHelp);\n\n                this.showHelpScreen(div, (width - 2 * this.padding), (height - height1));\n            }\n        }\n\n        removeDivMessage() {\n            if (this.divMessage !== undefined) {\n                this.body.removeChild(this.divMessage);\n                this.divMessage = undefined;\n            }\n            if (this.divMessageHelp !== undefined) {\n                this.body.removeChild(this.divMessageHelp);\n                this.divMessageHelp = undefined;\n            }\n            if (this.divMessageBackground !== undefined) {\n                this.divMessageBackground.remove();\n                this.divMessageBackground = undefined;\n            }\n        }\n\n        disableButtons(buttons, disabled) {\n            for (let i = 0; i < buttons.length; i++) {\n                let btn = buttons[i];\n                if (btn !== undefined) {\n                    if (disabled) {\n                        btn.classList.add(\"mmogame_imgbutton_disabled\");\n                    } else {\n                        btn.classList.remove(\"mmogame_imgbutton_disabled\");\n                    }\n                }\n            }\n        }\n\n        repairNickname(nickname) {\n            if (nickname === undefined) {\n                return '';\n            }\n\n            let s = nickname;\n            if (s !== '') {\n                while (s.indexOf('_') !== -1) {\n                    s = s.replace('_', ' ');\n                }\n            }\n\n            return s;\n        }\n\n        showScore(sumscore, rank, name, usercode, addscore, completedrank, percentcompleted) {\n            let s = sumscore === undefined ? '' : '<b>' + sumscore + '</b>';\n            if (this.labelScore.innerHTML !== s) {\n                this.labelScore.innerHTML = s;\n                let w = this.iconSize - 2 * this.padding;\n                this.autoResizeText(this.labelScore, w, this.iconSize / 2, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRank.innerHTML !== rank) {\n                this.labelScoreRank.innerHTML = rank !== undefined ? rank : '';\n                this.autoResizeText(this.labelScoreRank, this.iconSize, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            if (name !== undefined) {\n                window.document.title = (usercode !== undefined ? usercode : \"\") + \" \" + name;\n            }\n\n            s = addscore === undefined ? '' : addscore;\n            if (this.labelAddScore.innerHTML !== s) {\n                this.labelAddScore.innerHTML = s;\n                this.autoResizeText(this.labelAddScore, this.iconSize - 2 * this.padding, this.iconSize / 3, false, 0, 0, 1);\n            }\n\n            if (this.labelScoreRankB.innerHTML !== completedrank) {\n                this.labelScoreRankB.innerHTML = completedrank !== undefined ? completedrank : '';\n                this.autoResizeText(this.labelScoreRankB, 0.9 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n\n            s = percentcompleted !== undefined ? Math.round(100 * percentcompleted) + '%' : '';\n            if (this.labelScoreB.innerHTML !== s) {\n                this.labelScoreB.innerHTML = s;\n                this.autoResizeText(this.labelScoreB, 0.8 * this.iconSize / 2, this.iconSize / 3, true, 0, 0, 1);\n            }\n        }\n\n        showColorPalette(canvas, colors) {\n            let ctx = canvas.getContext(\"2d\");\n            let width = canvas.width;\n            let height = canvas.height;\n            let strip = width / 5;\n            let instance = this;\n\n            colors.sort(function(a, b) {\n                return instance.getContrast(a) - instance.getContrast(b);\n            });\n            for (let i = 0; i < 5; i++) {\n                ctx.fillStyle = this.getColorHex(colors[i]);\n                ctx.fillRect(i * strip, 0, (i + 1) * strip, height);\n            }\n\n            ctx.strokeStyle = \"#FFFFFF\";\n            ctx.lineWidth = 1;\n            ctx.strokeRect(0, 0, width, height);\n        }\n\n        setColorsString(s) {\n            let a = [0x9B7ED9, 0x79F2F2, 0x67BF5A, 0xD0F252, 0xBF5B21];\n            if (s !== undefined && s.length >= 0) {\n                let b = s.split(\",\");\n                if (b.length === 5) {\n                    a = b;\n                    for (let i = 0; i < 5; i++) {\n                        a[i] = parseInt(a[i]);\n                    }\n                }\n            }\n            this.setColors(a);\n        }\n\n        computeDifClock(time, timeStart, timeClose) {\n            if (time !== undefined) {\n                this.difClock = ((new Date()).getTime() - time) / 1000;\n            }\n\n            this.computeTimeStartClose(timeStart, timeClose);\n        }\n\n        computeTimeStartClose(timeStart, timeClose) {\n            if (timeStart !== undefined) {\n                this.timestart = parseInt(timeStart) !== 0 ? parseInt(timeStart) + this.difClock : 0;\n                this.timeclose = parseInt(timeClose) !== 0 ? parseInt(timeClose) + this.difClock : 0;\n            } else {\n                this.timestart = 0;\n                this.timeclose = 0;\n            }\n        }\n\n        drawRadio(canvas, color1, color2) {\n            let ctx = canvas.getContext(\"2d\");\n            let size = canvas.width;\n            ctx.clearRect(0, 0, size, canvas.height);\n\n            ctx.beginPath();\n            ctx.arc(size / 2, size / 2, size / 2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = this.getColorHex(color1);\n            ctx.fill();\n\n            let checked = canvas.classList.contains(\"checked\");\n            if (checked) {\n                ctx.beginPath();\n                ctx.arc(size / 2, size / 2, size / 4, 0, 2 * Math.PI, false);\n                ctx.fillStyle = this.getColorHex(color2);\n                ctx.fill();\n            }\n        }\n\n        createRadiobox(parent, size, color1, color2, checked, disabled) {\n            let canvas = document.createElement('canvas');\n            canvas.style.position = \"absolute\";\n            canvas.width = size;\n            canvas.height = size;\n            parent.appendChild(canvas);\n            if (checked) {\n                canvas.classList.add(\"checked\");\n            }\n            if (disabled) {\n                canvas.classList.add(\"disabled\");\n            }\n\n            this.drawRadio(canvas, disabled ? color1 : 0xFFFFFF, color2);\n\n            return canvas;\n        }\n\n        createButtonsAvatar(num, left, widthNickName = 0, heightNickName = 0) {\n            if (widthNickName === 0) {\n                widthNickName = this.iconSize;\n            }\n            if (heightNickName === 0) {\n                heightNickName = this.iconSize - this.buttonAvatarHeight;\n            }\n            if (this.buttonsAvatarLeft === undefined) {\n                this.buttonsAvatarLeft = [];\n            }\n            this.buttonsAvatarLeft[num] = left;\n\n            if (this.buttonsAvatarSrc === undefined) {\n                this.buttonsAvatarSrc = [];\n            }\n            this.buttonsAvatarSrc[num] = \"\";\n\n            if (this.nicknames === undefined) {\n                this.nicknames = [];\n            }\n            this.nicknames[num] = \"\";\n\n            if (this.buttonsAvatar === undefined) {\n                this.buttonsAvatar = [];\n            }\n            this.buttonsAvatar[num] = this.createImageButton(this.body, left, this.avatarTop, this.iconSize, this.iconSize, \"\", \"\");\n            if (num === 2 && this.avatarTop !== undefined) {\n                this.buttonsAvatar[num].title = this.getStringM('js_opponent');\n            }\n\n            if (this.divNicknames === undefined) {\n                this.divNicknames = [];\n            }\n            if (this.divNicknamesWidth === undefined) {\n                this.divNicknamesWidth = [];\n            }\n            if (this.divNicknamesHeight === undefined) {\n                this.divNicknamesHeight = [];\n            }\n            this.divNicknamesWidth[num] = widthNickName;\n            this.divNicknamesHeight[num] = heightNickName;\n\n            this.divNicknames[num] = this.createDiv(this.body, left, this.padding, widthNickName, heightNickName);\n        }\n\n        updateButtonsAvatar(num, avatar, nickname) {\n            if (avatar === undefined) {\n                avatar = \"\";\n            }\n            if (nickname === undefined) {\n                nickname = \"\";\n            }\n\n            if (avatar === \"\" && nickname === \"\") {\n                this.buttonsAvatar[num].style.visibility = 'hidden';\n                this.divNicknames[num].style.visibility = 'hidden';\n                return;\n            }\n\n            if (this.nicknames[num] !== nickname || nickname === \"\") {\n                this.nicknames[num] = nickname;\n                let s = nickname;\n\n                if (nickname.length === 0) {\n                    s = avatar;\n                    let pos = s.lastIndexOf(\"/\");\n                    if (pos >= 0) {\n                        s = s.slice(pos + 1);\n                    }\n                    pos = s.lastIndexOf(\".\");\n                    if (pos >= 0) {\n                        s = s.slice(0, pos);\n                    }\n                    const filenameWithExt = avatar.split('/').pop(); // Extract the file name with its extension\n                    s = filenameWithExt.split('.').slice(0, -1).join('.'); // Remove the extension from the file name\n                }\n                s = this.repairNickname(s);\n                if (this.divNicknames[num] !== undefined && this.divNicknames[num].innerHTML !== s) {\n                    this.divNicknames[num].innerHTML = s;\n                    this.divNicknames[num].style.textAlign = \"center\";\n                    this.divNicknames[num].style.color = this.getColorContrast(this.colorsBackground);\n                    this.autoResizeText(this.divNicknames[num], this.divNicknamesWidth[num], this.divNicknamesHeight[num], true,\n                        0, 0, 1);\n                }\n            }\n\n            if (avatar !== this.buttonsAvatarSrc[num]) {\n                this.updateImageButton(this.buttonsAvatar[num], this.buttonsAvatarLeft[num], this.buttonAvatarTop, this.iconSize,\n                    this.buttonAvatarHeight, avatar !== \"\" ? \"assets/avatars/\" + avatar : \"\");\n                this.buttonsAvatarSrc[num] = avatar;\n            }\n\n            this.buttonsAvatar[num].alt = this.divNicknames[num].innerHTML;\n\n            this.buttonsAvatar[num].style.visibility = 'visible';\n            this.divNicknames[num].style.visibility = 'visible';\n        }\n\n        gateOpen(mmogameid, pin, kinduser, user, url) {\n            this.url = url;\n            this.minFontSize *= 2;\n            this.maxFontSize *= 2;\n\n            this.mmogameid = mmogameid;\n            this.pin = pin;\n            this.kinduser = kinduser;\n            this.user = user;\n            this.gateComputeSizes();\n\n            this.areaTop = this.padding;\n            this.areaWidth = Math.round(window.innerWidth - 2 * this.padding);\n            this.areaHeight = Math.round(window.innerHeight - this.areaTop) - this.padding;\n\n            let instance = this;\n            this.getOptions().then(function(options) {\n                if (!options.hasOwnProperty('kindsound')) {\n                    options.kindsound = 0;\n                }\n                instance.kindSound = options.kindSound === 1 || options.kindSound === 2 ? options.kindSound : 0;\n\n                if (!options.hasOwnProperty('nickname')) {\n                    options.nickname = '';\n                }\n                options.avatarid = options.hasOwnProperty('avatarid') && options.avatarid !== undefined ? options.avatarid : 0;\n                options.paletteid = options.hasOwnProperty('paletteid') ? options.paletteid : 0;\n\n                switch (kinduser) {\n                    case 'moodle':\n                        if (options.nickname !== '' && options.avatarid !== 0 && options.paletteid !== 0) {\n                            instance.gatePlayGame(false, user, options.nickname, options.paletteid, options.avatarid);\n                            return;\n                        }\n                        break;\n                    case 'guid':\n                        if (!options.hasOwnProperty('userGUID')) {\n                            options.userGUID = '';\n                        }\n                        if (options.userGUID !== '' && options.nickname !== '' && options.avatarid !== 0 &&\n                            options.paletteid !== 0) {\n                            instance.gatePlayGame(false, options.userGUID, options.nickname, options.paletteid, options.avatarid);\n                            return;\n                        }\n                        break;\n                }\n                instance.gateCreateScreen();\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n\n        gatePlayGame(save, user, nickname, paletteid, avatarid) {\n            if (!save) {\n                console.log('gatePlayGame ' + user + ' ' + nickname + ' ' + paletteid + ' ' + avatarid);\n                this.sendGetAttempt(user, nickname, paletteid, avatarid);\n                return;\n            }\n\n            let options = {nickname: nickname, avatarid: avatarid, paletteid: paletteid};\n            if (this.kinduser === 'guid') {\n                options.userGUID = user;\n            }\n\n            let instance = this;\n            this.saveOptions(options)\n                .then(function() {\n                    instance.sendGetAttempt(user, nickname, paletteid, avatarid);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n\n        sendGetAttempt(user = '', nickname = '', paletteid = 0, avatarid = 0) {\n            console.log('sendGetAttempt ' + user + ' ' + nickname + ' ' + paletteid + ' ' + avatarid);\n            let params = {\n                mmogameid: this.mmogameid,\n                kinduser: this.kinduser,\n                user: user,\n                nickname: nickname,\n                avatarid: avatarid,\n                colorpaletteid: paletteid,\n            };\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Calling the service through the Moodle AJAX API\n                let getAttempt = Ajax.call([{\n                    methodname: 'mmogametype_quiz_get_attempt',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAttempt[0].done(function(response) {\n                    instance.openGame();\n                    instance.colors = undefined;\n                    instance.onServerGetAttempt(JSON.parse(response));\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateCreateScreen() {\n            this.vertical = window.innerWidth < window.innerHeight;\n\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n            if (this.vertical) {\n                this.gateCreateScreenVertical();\n            } else {\n                this.gateCreateScreenHorizontal();\n            }\n        }\n\n        gateCreateScreenVertical() {\n            let maxHeight = this.areaHeight - 5 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const labels = [this.getStringM('js_name') + \": \", this.getStringM('js_code'), this.getStringM('js_palette')];\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 3 * size[1] + 8 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = (maxHeight - 4 * this.fontSize + rest) * 3 / 5;\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // A bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code') + \": \") + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n\n            bottom = this.gateCreateLabelEditVertical(0, bottom, newWidth - 2 * this.padding, this.fontSize, size[0],\n                this.getStringM('js_name') + \": \") + 2 * this.padding;\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                        0, bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Vertical\n            this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.gatePlayGame(true, instance.edtCode === undefined ? instance.user : instance.edtCode.value,\n                    instance.edtNickname.value, instance.paletteid, instance.avatarid);\n            });\n        }\n\n        gateCreateScreenHorizontal() {\n            let maxHeight = this.areaHeight - 7 * this.padding - this.iconSize;\n            let maxWidth = this.areaWidth;\n            let instance = this;\n            let size;\n\n            const sName = this.getStringM('js_name') + \": \";\n            let labels = [this.getStringM('js_code'), sName, this.getStringM('js_palette')];\n\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                size = instance.gateComputeLabelSize(fontSize, labels);\n\n                if (size[0] >= maxWidth) {\n                    return 1;\n                }\n                let heightCode = instance.kinduser !== 'guid' && instance.kinduser !== 'moodle' ? size[1] + instance.padding : 0;\n\n                let heightColors = (maxHeight - 4 * fontSize) * 2 / 5;\n                let n = Math.floor(heightColors / instance.iconSize);\n                if (n === 0) {\n                    return 1;\n                }\n                let heightAvatars = (maxHeight - 4 * fontSize + heightColors) * 3 / 5;\n                let computedHeight = heightCode + 2 * size[1] + 7 * instance.padding + heightColors + heightAvatars;\n\n                return computedHeight < maxHeight ? -1 : 1;\n            });\n\n            let gridWidthColors = maxWidth - this.padding;\n            let gridWidthAvatars = maxWidth - this.padding;\n            let gridHeightColors = (maxHeight - 4 * this.fontSize) * 2 / 5;\n            let newHeight = Math.floor(gridHeightColors / instance.iconSize) * instance.iconSize;\n            let newWidth = Math.floor(gridWidthColors / instance.iconSize) * instance.iconSize;\n            let rest = gridHeightColors - newHeight;\n            gridHeightColors = newHeight;\n            let gridHeightAvatars = Math.floor((maxHeight - 4 * this.fontSize) * 3 / 5 + rest);\n\n            let bottom;\n            if (this.kinduser !== 'guid' && this.kinduser !== 'moodle') {\n                // B bottom = this.gateCreateCode(0, 0, maxWidth, this.fontSize, size[0]);\n                bottom = this.gateCreateLabelEditVertical(0, 0, maxWidth, this.fontSize, size[0],\n                    this.getStringM('js_code')) + 2 * this.padding;\n                this.edtCode = this.edt;\n                this.edtCode.addEventListener(\"keyup\", function() {\n                    instance.gateUpdateSubmit();\n                });\n            } else {\n                bottom = 0;\n            }\n            let sizeLabel = this.gateComputeLabelSize(this.fontSize, [sName]);\n            bottom = this.gateCreateLabelEditHorizontal(0, bottom, newWidth - 2 * this.padding,\n                this.fontSize, sizeLabel[0], this.getStringM('js_name') + \": \");\n\n            this.edtNickname = this.edt;\n            this.edtNickname.addEventListener(\"keyup\", function() {\n                instance.gateUpdateSubmit();\n            });\n\n            let label1 = document.createElement(\"label\");\n            label1.style.position = \"absolute\";\n            label1.innerHTML = this.getStringM('js_palette');\n            label1.style.font = \"FontAwesome\";\n            label1.style.fontSize = this.fontSize + \"px\";\n            label1.style.width = \"0px\";\n            label1.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label1);\n\n            // Button refresh color palettes\n            let btn = this.createImageButton(this.area, label1.scrollWidth + this.padding, bottom, this.iconSize, this.fontSize,\n                '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_color\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        true, false);\n                }\n            );\n            label1.style.left = 0;\n            label1.style.color = this.getColorContrast(this.colorBackground);\n            label1.style.top = bottom + \"px\";\n            bottom += this.fontSize + this.padding;\n\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n            label.innerHTML = this.getStringM('js_avatars');\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = this.fontSize + \"px\";\n            label.style.width = \"0 px\";\n            label.style.whiteSpace = \"nowrap\";\n            this.area.appendChild(label);\n\n            // Button refresh avatars\n            btn = this.createImageButton(this.area, label.scrollWidth + this.padding, bottom + gridHeightColors, this.iconSize,\n                this.fontSize, '', 'assets/refresh.svg', false, 'refresh');\n            btn.addEventListener(\"click\",\n                function() {\n                    let elements = instance.area.getElementsByClassName(\"mmogame_avatar\");\n\n                    while (elements[0]) {\n                        elements[0].parentNode.removeChild(elements[0]);\n                    }\n\n                    instance.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors, 0,\n                        bottom + gridHeightColors + instance.fontSize + instance.padding, gridWidthAvatars, gridHeightAvatars,\n                        false, true);\n                }\n            );\n\n            // Avatar\n            label.style.left = \"0 px\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n            label.style.top = (bottom + gridHeightColors) + \"px\";\n\n            // Horizontal\n            this.gateSendGetColorsAvatarsVertical(0, bottom, gridWidthColors, gridHeightColors,\n                0, bottom + gridHeightColors + this.fontSize + this.padding, gridWidthAvatars,\n                gridHeightAvatars);\n\n            let bottom2 = bottom + gridHeightColors + this.fontSize + this.padding + gridHeightAvatars;\n            this.btnSubmit = this.createImageButton(this.area, (maxWidth - this.iconSize) / 2, bottom2, 0,\n                this.iconSize, \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.style.visibility = 'hidden';\n            this.btnSubmit.addEventListener(\"click\",\n                function() {\n                    instance.gatePlayGame(true, instance.edtCode === undefined ? instance.user : instance.edtCode.value,\n                        instance.edtNickname.value, instance.paletteid, instance.avatarid);\n                });\n        }\n\n        gateComputeLabelSize(fontSize, aLabel) {\n            let maxWidth = 0;\n            let maxHeight = 0;\n\n            for (let i = 0; i < aLabel.length; i++) {\n                const label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.innerHTML = aLabel[i];\n                label.style.whiteSpace = \"nowrap\";\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                label.style.width = \"0px\";\n                label.style.height = \"0px\";\n                this.area.appendChild(label);\n\n                if (label.scrollWidth > maxWidth) {\n                    maxWidth = label.scrollWidth;\n                }\n\n                if (label.scrollHeight > maxHeight) {\n                    maxHeight = label.scrollHeight;\n                }\n                this.area.removeChild(label);\n            }\n\n            return [maxWidth, maxHeight];\n        }\n\n        gateCreateLabelEditVertical(left, top, width, fontSize, labelWidth, title) {\n            const label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            top += label.scrollHeight;\n\n            let leftEdit = left + 'px';\n            let div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = width + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return top + fontSize + this.padding;\n        }\n\n        gateShowAvatars(left, top, width, height, countX, avatarids, avatars) {\n            if (!avatars || avatars.length === 0) {\n                return; // Exit early if no avatars exist\n            }\n\n            this.avatar = undefined;\n            const count = avatars.length;\n            let leftOriginal = left;\n            let w = Math.round(this.padding / 2) + \"px\";\n            for (let i = 0; i < count; i++) {\n                let avatarImagePath = 'assets/avatars/' + avatars[i];\n                let btn = this.createCenterImageButton(\n                    this.area,\n                    left, top,\n                    this.iconSize - this.padding, this.iconSize - this.padding,\n                    \"\",\n                    avatarImagePath\n                );\n                btn.classList.add(\"mmogame_avatar\");\n                let id = avatarids[i];\n                btn.addEventListener(\"click\", () => {\n                    this.gateUpdateAvatar(btn, id, w);\n                });\n\n                // Move left position after placing the button\n                left += this.iconSize;\n\n                // Reset left and move to the next row after filling countX buttons\n                if ((i + 1) % countX === 0) {\n                    top += this.iconSize;\n                    left = leftOriginal;\n                }\n            }\n        }\n\n        gateSendGetColorsAvatarsVertical(leftColors, topColors, gridWidthColors, gridHeightColors, leftAvatars, topAvatars,\n                                         gridWidthAvatars, gridHeightAvatars, updateColors = true, updateAvatars = true) {\n\n            let countXcolors = Math.floor(gridWidthColors / this.iconSize);\n            let countYcolors = Math.floor(gridHeightColors / this.iconSize);\n\n            let countXavatars = Math.floor(gridWidthAvatars / this.iconSize);\n            let countYavatars = Math.floor((gridHeightAvatars + 2 * this.padding) / this.iconSize);\n\n            if (!updateColors) {\n                countXcolors = countXcolors = 0;\n            }\n            if (!updateAvatars) {\n                countXavatars = countYavatars = 0;\n            }\n\n            let instance = this;\n            require(['core/ajax'], function(Ajax) {\n                // Defining the parameters to be passed to the service\n                let params = {\n                    mmogameid: instance.mmogameid,\n                    kinduser: instance.kinduser,\n                    user: instance.user,\n                    avatars: countXavatars * countYavatars,\n                    colorpalettes: countXcolors * countYcolors,\n                };\n\n                // Calling the service through the Moodle AJAX API\n                let getAssets = Ajax.call([{\n                    methodname: 'mod_mmogame_get_assets',\n                    args: params\n                }]);\n\n                // Handling the response\n                getAssets[0].done(function(response) {\n                    if (updateColors) {\n                        instance.gateShowColorPalettes(leftColors, topColors, gridWidthColors,\n                            gridHeightColors, countXcolors, countYcolors, response.colorpaletteids, response.colorpalettes);\n                    }\n                    if (updateAvatars) {\n                        instance.gateShowAvatars(leftAvatars, topAvatars, gridWidthAvatars, gridHeightAvatars, countXavatars,\n                            response.avatarids, response.avatars);\n                    }\n                }).fail(function(error) {\n                    return error;\n                });\n            });\n        }\n\n        gateShowColorPalettes(left, top, width, height, countX, countY, colorpaletteids, colorpalettes) {\n            let i = 0; // Counter for color palettes\n            const count = colorpalettes.length;\n            this.canvasColor = undefined;\n            const canvasSize = this.iconSize - this.padding * 3 / 2;\n            const parsedPalettes = colorpalettes.map(palette =>\n                palette.split(\",\").map(value => parseInt(value, 10) || 0)\n            );\n            for (let iy = 0; iy < countY; iy++) {\n                for (let ix = 0; ix < countX; ix++) {\n                    // Check if we exceed available palettes or encounter invalid data\n                    if (i >= count || !parsedPalettes[i] || !colorpaletteids[i]) {\n                        i++; // Increment and continue if invalid\n                        continue;\n                    }\n\n                    // Create a new canvas element\n                    let canvas = document.createElement('canvas');\n                    canvas.style.position = \"absolute\";\n                    canvas.style.left = `${left + ix * this.iconSize}px`;\n                    canvas.style.top = `${top + iy * this.iconSize}px`;\n                    canvas.width = canvasSize;\n                    canvas.height = canvasSize;\n                    canvas.style.cursor = 'pointer';\n                    canvas.classList.add(\"mmogame_color\");\n\n                    // Append canvas to the area\n                    this.area.appendChild(canvas);\n\n                    // Render the color palette on the canvas\n                    this.showColorPalette(canvas, parsedPalettes[i]);\n\n                    // Get the palette ID and attach a click event listener\n                    let id = colorpaletteids[i];\n                    canvas.addEventListener(\"click\", () => {\n                        this.gateUpdateColorPalette(canvas, id);\n                    });\n\n                    i++;\n                }\n            }\n            this.area.classList.add(\"palette\");\n        }\n\n        gateUpdateColorPalette(canvas, id) {\n            if (this.canvasColor !== undefined) {\n                this.canvasColor.style.borderStyle = \"none\";\n            }\n            this.canvasColor = canvas;\n            canvas.style.borderStyle = \"outset\";\n            let w = Math.round(this.padding / 2) + \"px\";\n            canvas.style.borderLeftWidth = w;\n            canvas.style.borderTopWidth = w;\n            canvas.style.borderRightWidth = w;\n            canvas.style.borderBottomWidth = w;\n\n            this.paletteid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateAvatar(avatar, id, w) {\n            if (this.avatar !== undefined) {\n                this.avatar.style.borderStyle = \"none\";\n            }\n            this.avatar = avatar;\n            avatar.style.borderStyle = \"outset\";\n\n            avatar.style.borderLeftWidth = w;\n            avatar.style.borderTopWidth = w;\n            avatar.style.borderRightWidth = w;\n            avatar.style.borderBottomWidth = w;\n\n            this.avatarid = id;\n\n            this.gateUpdateSubmit();\n        }\n\n        gateUpdateSubmit() {\n            let hasCode = this.edtCode === undefined ? true : parseInt(this.edtCode.value) > 0;\n            let visible = this.avatarid !== undefined && this.paletteid !== undefined && hasCode\n                && this.edtNickname.value.length > 0;\n\n            this.btnSubmit.style.visibility = visible ? 'visible' : 'hidden';\n        }\n\n        gateComputeSizes() {\n            this.computeSizes();\n            this.iconSize = Math.round(0.8 * this.iconSize);\n            this.padding = Math.round(0.8 * this.padding);\n        }\n\n        getStringM(name) {\n            return M.util.get_string(name, 'mmogame');\n        }\n\n        gateCreateLabelEditHorizontal(left, top, width, fontSize, labelWidth, title) {\n            let label = document.createElement(\"label\");\n            label.style.position = \"absolute\";\n\n            label.innerHTML = title;\n\n            label.style.font = \"FontAwesome\";\n            label.style.fontSize = fontSize + \"px\";\n\n            this.area.appendChild(label);\n\n            label.style.position = \"absolute\";\n            label.style.left = left + \"px\";\n            label.style.top = top + \"px\";\n            label.style.width = labelWidth + \"px\";\n            label.style.align = \"left\";\n            label.style.color = this.getColorContrast(this.colorBackground);\n\n            let ret = top + Math.max(label.scrollHeight, fontSize) + this.padding;\n\n            let leftEdit = (left + labelWidth + this.padding);\n            const div = document.createElement(\"input\");\n            div.style.position = \"absolute\";\n            div.style.width = (width - leftEdit - this.padding) + \"px\";\n            div.style.type = \"text\";\n            div.style.fontSize = fontSize + \"px\";\n\n            div.style.left = leftEdit + \"px\";\n            div.style.top = top + \"px\";\n            div.autofocus = true;\n\n            this.area.appendChild(div);\n            this.edt = div;\n\n            return ret;\n        }\n\n        createDivMessageDo(left, top, width, height, message, heightmessage) {\n            if (this.divMessageBackground === undefined) {\n                let div = this.createDiv(this.divMessageBackground, left, top, width, height);\n                div.style.background = this.getColorHex(this.colorDefinition);\n                this.divMessageBackground = div;\n            }\n\n            if (this.divMessage === undefined) {\n                let div = document.createElement(\"div\");\n                div.style.position = \"absolute\";\n                div.style.left = left + \"px\";\n                div.style.textAlign = \"center\";\n                div.style.width = (width - 2 * this.padding) + \"px\";\n                div.style.paddingLeft = this.padding + \"px\";\n                div.style.paddingRight = this.padding + \"px\";\n\n                div.style.background = this.getColorHex(this.colorDefinition);\n                div.style.color = this.getColorContrast(this.colorDefinition);\n                this.divMessage = div;\n            }\n            this.divMessage.innerHTML = message;\n            this.body.appendChild(this.divMessage);\n            this.autoResizeText(this.divMessage, width, heightmessage, false, this.minFontSize, this.maxFontSize, 0.5);\n        }\n\n        getOptions() {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4); // Άνοιγμα της βάσης δεδομένων\n\n                request.onupgradeneeded = function(event) {\n                    let db = event.target.result;\n                    // Δημιουργία του object store \"options\" αν δεν υπάρχει\n                    if (!db.objectStoreNames.contains(\"options\")) {\n                        db.createObjectStore(\"options\", {keyPath: \"name\"});\n                    }\n                };\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readonly\"); // Δημιουργία συναλλαγής ανάγνωσης\n                    let store = transaction.objectStore(\"options\");\n\n                    let getAllRequest = store.getAll(); // Διαβάζει όλες τις εγγραφές από το object store\n\n                    getAllRequest.onsuccess = function(event) {\n                        let records = event.target.result; // Όλες οι εγγραφές από το object store\n                        if (records.length > 0) {\n                            // Μετατροπή σε object με τα name ως κλειδιά\n                            let optionsObject = {};\n                            records.forEach(record => {\n                                optionsObject[record.name] = record.value;\n                            });\n                            console.log(optionsObject);\n                            resolve(optionsObject); // Επιστροφή του αντικειμένου\n                        } else {\n                            resolve({}); // Επιστροφή άδειου αντικειμένου αν δεν υπάρχουν εγγραφές\n                        }\n                    };\n\n                    getAllRequest.onerror = function() {\n                        reject(new Error(\"Failed to read options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    resolve({});\n                };\n            });\n        }\n\n        saveOptions(optionsObject) {\n            return new Promise((resolve, reject) => {\n                let request = indexedDB.open(\"PreferencesDB\", 4);\n\n                request.onsuccess = function(event) {\n                    let db = event.target.result;\n\n                    let transaction = db.transaction([\"options\"], \"readwrite\"); // Δημιουργία συναλλαγής για εγγραφή\n                    let store = transaction.objectStore(\"options\");\n\n                    // Για κάθε ζεύγος name-value στο αντικείμενο, το αποθηκεύουμε στην IndexedDB\n                    for (let name in optionsObject) {\n                        if (optionsObject.hasOwnProperty(name)) {\n                            let value = optionsObject[name];\n                            let saveRequest = store.put({name: name, value: value});\n\n                            saveRequest.onsuccess = function() {\n                            };\n\n                            saveRequest.onerror = function() {\n                            };\n                        }\n                    }\n\n                    // Επιτυχής ολοκλήρωση της συναλλαγής\n                    transaction.oncomplete = function() {\n                        resolve();\n                    };\n\n                    transaction.onerror = function() {\n                        reject(new Error(\"Failed to save options\"));\n                    };\n                };\n\n                request.onerror = function() {\n                    reject(new Error(\"Failed to open database\"));\n                };\n            });\n        }\n    };\n});"],"names":["define","constructor","body","document","getElementsByTagName","kindSound","size","parseFloat","window","getComputedStyle","documentElement","getPropertyValue","minFontSize","maxFontSize","fontSize","hasHelp","removeBodyChilds","removeDivMessage","this","firstChild","removeChild","lastChild","area","undefined","openGame","computeSizes","createImageButton","parent","left","top","width","height","classname","filename","wrap","alt","button","createImage","classList","add","setAttribute","createElement","tabIndex","style","position","draggable","src","appendChild","createCenterImageButton","img","Image","onload","mul","Math","min","w","round","h","innerHTML","visibility","updateImageButton","createDiv","div","createDivColor","color","background","getColorHex","getMuteFile","playAudio","audio","networkState","play","autoResizeText","item","minRatio","minHeight","low","max","up","fitSize","fitHeight","newHeight","newWidth","i","el","whiteSpace","scrollHeight","scrollWidth","abs","autoResizeTextBr","autoResizeTextImage","s","change","startsWith","substring","pos1","indexOf","pos","trim","subwidth","subheight","pos2","pos3","s2","posw","posw2","num","slice","replace","parseInt","ratio","pad","length","uuid4","uuid","Array","floor","random","map","x","join","cIcons","iconSize","innerWidth","innerHeight","padding","getIconSize","getCopyrightHeight","getPadding","hexArray","unshift","getContrast","getColorGray","yiq","gray","getColorContrast","repairColors","colors","instance","sort","a","b","colorBackground","repairP","createDivScorePercent","lineHeight","textAlign","border","boxShadow","colorScore","title","getStringM","colorScore2","disabled","labelScore","labelScore2","labelScoreRank","labelScoreRank2","labelAddScore","labelAddScore2","label","fontName","labelScoreRankB","fontWeight","labelScoreB","createDivTimer","sizeIcon","name","labelTimer","createButtonSound","buttonSound","addEventListener","onClickSound","btn","localStorage","setItem","toString","createButtonHelp","buttonHelp","findbest","fn","prevSize","testSize","createDefinition","onlyMetrics","definition","ret","colorDefinition","paddingLeft","paddingRight","id","definitionHeight","divDefinition","updateLabelTimer","timeclose","timestart","dif","Date","getTime","sendTimeout","minutes","seconds","prefix","padStart","setTimeout","createDivMessage","message","divMessageHelp","areaTop","createDivMessageDo","divMessage","createDivMessageStart","height1","showHelpScreen","divMessageBackground","remove","disableButtons","buttons","repairNickname","nickname","showScore","sumscore","rank","usercode","addscore","completedrank","percentcompleted","showColorPalette","canvas","ctx","getContext","strip","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","setColorsString","split","setColors","computeDifClock","time","timeStart","timeClose","difClock","computeTimeStartClose","drawRadio","color1","color2","clearRect","beginPath","arc","PI","fill","contains","createRadiobox","checked","createButtonsAvatar","widthNickName","heightNickName","buttonAvatarHeight","buttonsAvatarLeft","buttonsAvatarSrc","nicknames","buttonsAvatar","avatarTop","divNicknames","divNicknamesWidth","divNicknamesHeight","updateButtonsAvatar","avatar","lastIndexOf","pop","colorsBackground","buttonAvatarTop","gateOpen","mmogameid","pin","kinduser","user","url","gateComputeSizes","areaWidth","areaHeight","getOptions","then","options","hasOwnProperty","kindsound","avatarid","paletteid","gatePlayGame","userGUID","gateCreateScreen","catch","error","console","log","save","sendGetAttempt","saveOptions","params","colorpaletteid","require","Ajax","call","methodname","args","done","response","onServerGetAttempt","JSON","parse","fail","vertical","gateCreateScreenVertical","gateCreateScreenHorizontal","maxHeight","maxWidth","labels","gateComputeLabelSize","heightCode","heightColors","heightAvatars","gridWidthColors","gridWidthAvatars","gridHeightColors","rest","bottom","gridHeightAvatars","gateCreateLabelEditVertical","edtCode","edt","gateUpdateSubmit","edtNickname","label1","font","elements","getElementsByClassName","parentNode","gateSendGetColorsAvatarsVertical","bottom2","btnSubmit","value","sName","sizeLabel","gateCreateLabelEditHorizontal","aLabel","labelWidth","align","leftEdit","type","autofocus","gateShowAvatars","countX","avatarids","avatars","count","leftOriginal","avatarImagePath","gateUpdateAvatar","leftColors","topColors","leftAvatars","topAvatars","updateColors","updateAvatars","countXcolors","countYcolors","countXavatars","countYavatars","colorpalettes","gateShowColorPalettes","colorpaletteids","countY","canvasColor","canvasSize","parsedPalettes","palette","iy","ix","cursor","gateUpdateColorPalette","borderStyle","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","hasCode","visible","M","util","get_string","heightmessage","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","createObjectStore","keyPath","onsuccess","getAllRequest","transaction","objectStore","getAll","records","optionsObject","forEach","record","onerror","Error","store","saveRequest","put","oncomplete"],"mappings":"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"}