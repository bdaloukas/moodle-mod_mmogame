{"version":3,"file":"mmogametypequiz.min.js","sources":["../src/mmogametypequiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mod_mmogame/mmogame'], function(MmoGame) {\n    return class MmoGameTypeQuiz extends MmoGame {\n        mmogameid;\n        kinduser;\n        auserid;\n        url;\n        pin;\n        labelTimer;\n\n        /**\n         * Base class for Quiz mmmogame\n         *\n         * @module mmogametype_quiz\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n\n        constructor() {\n            super();\n            this.hideSubmit = false;\n        }\n\n        setColors(colors, nameLoad) {\n            let c = this.repairColors(colors, nameLoad);\n\n            this.colorDefinition = c[1];\n            this.colorScore = c[2];\n            this.colorScore2 = c[4];\n        }\n\n        openGame(url, id, pin, auserid, kinduser, callOnAfterOpenGame) {\n            super.openGame(url, id, pin, auserid, kinduser, callOnAfterOpenGame);\n\n            this.audioYes = new Audio('assets/yes1.mp3');\n            this.audioYes.load();\n            this.audioNo = new Audio('assets/no1.mp3');\n            this.audioNo.load();\n        }\n\n        sendGetAttempt(param, subcommand) {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.onServerGetAttempt(JSON.parse(this.responseText), param);\n                }\n            };\n\n            xmlhttp.open(\"POST\", this.url, true);\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let d = {\n                \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n                \"user\": this.auserid, \"subcommand\": subcommand\n            };\n            if (this.helpurl === undefined) {\n                d.helpurl = 1;\n            }\n            let data = JSON.stringify(d);\n            xmlhttp.send(data);\n        }\n\n        onServerGetAttempt(json) {\n            this.computeDifClock(json);\n\n            if (this.colors === undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            if (json.name !== undefined) {\n                window.document.title = json.name;\n            }\n\n            if (json.helpurl !== undefined) {\n                this.helpUrl = json.helpurl;\n            }\n\n            if (json.errorcode !== undefined) {\n                this.createDivMessage(json.errorcode);\n                return;\n            }\n\n            this.state = parseInt(json.state);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson);\n            this.updateButtonsAvatar(1, json.avatar, json.nickname);\n\n            this.attempt = json.attempt;\n\n            this.qtype = json.qtype;\n            if (json.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = [];\n                for (let i = 1; i <= json.answers; i++) {\n                    let answerid = json[\"answerid_\" + i];\n                    let answer = this.repairP(json[\"answer_\" + i]);\n                    this.answersID.push(answerid);\n                    this.answers.push(answer);\n\n                }\n            }\n            this.answer = json.answer !== undefined ? json.answer : null;\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            this.definition = this.repairP(json.definition);\n            this.single = json.single;\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            this.updateLabelTimer();\n\n            this.sendFastJSON();\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined || this.timeclose === undefined) {\n                return;\n            }\n            if (this.timeclose === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n            let time = (new Date()).getTime();\n            let dif = this.timeclose - time / 1000;\n\n            if (dif <= 0) {\n                dif = 0;\n            }\n            dif = Math.round(dif);\n            if (dif <= 0) {\n                this.labelTimer.innerHTML = '';\n                this.onTimeout();\n            } else {\n                let s = (dif < 0 ? \"-\" : \"\") + Math.floor(dif / 60.0);\n                this.labelTimer.innerHTML = s + \":\" + (\"0\" + (dif % 60)).slice(-2);\n            }\n\n            if (dif <= 0 && this.timeclose !== 0) {\n                return;\n            }\n\n            let instance = this;\n            this.timerTimeout = setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        onTimeout() {\n            this.labelTimer.innerHTML = '';\n            this.disableInput();\n            this.sendTimeout();\n        }\n\n        createScreen(json, disabled) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n            if (this.endofgame) {\n                this.createDivMessage('LANGM_GAME_OVER_' + this.errorcode);\n                this.showScore(json);\n                return;\n            }\n\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(disabled);\n            }\n            this.showScore(json);\n        }\n\n        createScreenVertical(disabled) {\n            let nickNameHeight = Math.round(this.iconSize / 3) + this.padding;\n            let maxHeight = this.areaHeight - 4 * this.padding - nickNameHeight;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize;\n            }\n            let instance = this;\n            let maxWidth = this.areaWidth;\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                    let defSize = instance.createDefinition(0, 0, maxWidth - 1, true, fontSize);\n\n                    if (defSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    let ansSize = instance.createAnswer(0, 0, maxWidth - 1, true, fontSize, disabled);\n                    if (ansSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    return defSize[1] + ansSize[1] < maxHeight ? -1 : 1;\n                }\n            );\n\n            this.radioSize = Math.round(this.fontSize);\n            this.explainLeft = 0;\n            let defSize = this.createDefinition(0, 0, maxWidth, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(0, defSize[1] + this.padding, maxWidth, false, this.fontSize, disabled);\n            this.nextLeft = this.areaWidth - this.iconSize - this.padding;\n\n            if (this.nextTop + this.padding >= this.areaHeight) {\n                this.nextTop = this.areaHeight - this.padding;\n            }\n\n            if (this.hideSubmit === false) {\n                let top = (this.areaWidth - this.iconSize) / 2;\n                this.btnSubmit = this.createImageButton(this.body, top, this.nextTop, 0, this.iconSize,\n                    \"\", 'assets/submit.svg', false, 'submit');\n                this.btnSubmit.addEventListener(\"click\",\n                    function() {\n                        if (instance.btnSubmit !== undefined) {\n                            instance.area.removeChild(instance.btnSubmit);\n                            instance.btnSubmit = undefined;\n                        }\n                        instance.sendAnswer(true);\n                    }\n                );\n            }\n\n            this.stripLeft = this.padding;\n            this.stripTop = this.nextTop;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createScreenHorizontal(disabled) {\n            let maxHeight = this.areaHeight - 2 * this.padding;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize + this.padding;\n            }\n            let width = Math.round((this.areaWidth - this.padding) / 2);\n            let instance = this;\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    function(fontSize) {\n                        defSize = instance.createDefinition(0, 0, width - instance.padding, true, fontSize);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = instance.createAnswer(0, 0, width - instance.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= instance.areaHeight) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n            this.nextLeft = width + Math.min(3 * this.iconSize + 2 * this.padding, width - this.iconSize);\n\n            if (this.hideSubmit) {\n                return;\n            }\n\n            this.btnSubmit = this.createImageButton(this.body, width + (width - this.iconSize) / 2, this.nextTop, 0, this.iconSize,\n                \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.sendAnswer(true);\n            });\n\n            this.stripLeft = width + this.padding;\n            this.stripTop = this.nextTop;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createAnswer(left, top, width, onlyMetrics, fontSize, disabled) {\n            return this.createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled);\n        }\n\n        createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled) {\n            let n = this.answers.length;\n            let instance = this;\n\n            let aChecked = [];\n            if (this.answer !== null) {\n                aChecked = this.answer.split(\",\");\n            }\n            if (aChecked.length > 0) {\n                if (aChecked[0] === \"\") {\n                    aChecked.pop();\n                }\n            }\n\n            this.multichoiceLeft = left;\n            this.aItemAnswer = new Array(n);\n            this.aItemLabel = new Array(n);\n            this.aItemCorrectX = new Array(n);\n            let retSize = [0, 0];\n            this.labelWidth = Math.round(width - fontSize - this.padding - this.getMultichoiceSpace(fontSize));\n            let checkboxSize = Math.round(fontSize);\n            let top1 = top;\n            let offsetLabel = this.getMultichoiceSpace(fontSize);\n            for (let i = 0; i < n; i++) {\n                let label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.style.width = this.labelWidth + \"px\";\n\n                // A label.innerHTML = this.repairHTML(this.answers[i], this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n                label.innerHTML = this.answers[i];\n\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                this.aItemLabel[i] = label;\n\n                if (onlyMetrics) {\n                    this.body.appendChild(label);\n                    let newSize = label.scrollWidth + fontSize + this.padding + this.getMultichoiceSpace(fontSize);\n                    if (newSize > retSize[0]) {\n                        retSize[0] = newSize;\n                    }\n                    retSize[1] += Math.max(label.scrollHeight, fontSize) + this.padding;\n\n                    this.body.removeChild(label);\n                    continue;\n                }\n\n                label.htmlFor = \"input\" + i;\n                label.style.left = (left + fontSize + this.padding + offsetLabel) + \"px\";\n                label.style.top = top + \"px\";\n                label.style.align = \"left\";\n                label.style.color = this.getColorContrast(this.colorBackground);\n\n                let checked = aChecked.includes(this.answersID[i]);\n                let item = this.createRadiobox(this.body, checkboxSize, this.colorDefinition, this.colorScore, checked, disabled);\n                item.style.position = \"absolute\";\n                item.style.left = left + \"px\";\n                let topRadio = top;\n                item.style.top = topRadio + \"px\";\n\n                item.addEventListener('click', () => {\n                    if (!item.classList.contains(\"disabled\")) {\n                        instance.onClickRadio(i, this.colorDefinition, this.colorScore, true);\n                    }\n                });\n\n                label.addEventListener('click', () => {\n                    instance.onClickRadio(i, instance.colorDefinition, instance.colorScore, true);\n                });\n\n                this.area.appendChild(item);\n                this.area.appendChild(label);\n                if (label.scrollHeight > fontSize) {\n                    topRadio = Math.round(top + (label.scrollHeight - fontSize) / 2);\n                    item.style.top = topRadio + \"px\";\n                }\n\n                if (this.answersID[i] === '') {\n                    item.style.visibility = 'hidden';\n                    label.style.visibility = 'hidden';\n                }\n\n                this.aItemAnswer[i] = item;\n                this.aItemCorrectX[i] = left + fontSize + this.padding;\n\n                top += Math.max(label.scrollHeight, fontSize) + this.padding;\n            }\n\n            if (onlyMetrics) {\n                return retSize;\n            }\n\n            let heightControls = top - top1;\n            let vspace;\n            if (this.vertical === false) {\n                vspace = this.areaHeight - heightControls - this.iconSize;\n                if (vspace > this.padding) {\n                    let move = Math.round(vspace / 3);\n                    for (let i = 0; i < n; i++) {\n                        this.aItemAnswer[i].style.top = (parseInt(this.aItemAnswer[i].style.top) + move) + \"px\";\n                        this.aItemLabel[i].style.top = (parseInt(this.aItemLabel[i].style.top) + move) + \"px\";\n                    }\n                    this.nextTop += move / 2;\n                    let defTop = parseInt(this.divDefinition.style.top);\n                    if (defTop + move + this.definitionHeight + this.padding < this.areaHeight) {\n                        this.divDefinition.style.top = this.aItemLabel[0].style.top;\n                        this.divDefinition.style.height = Math.max(heightControls, this.definitionHeight) + \"px\";\n                    }\n                    top += move;\n                }\n            }\n\n            return top;\n        }\n\n        onClickRadio(i, colorBack, color, callSendAnswer) {\n            if (this.aItemAnswer[i].classList.contains(\"disabled\")) {\n                return;\n            }\n            for (let j = 0; j < this.aItemAnswer.length; j++) {\n                let item = this.aItemAnswer[j];\n                let disabled = item.classList.contains(\"disabled\");\n\n                if (i === j) {\n                    item.classList.add(\"checked\");\n                    this.answer = this.answersID[i];\n                } else if (item.classList.contains(\"checked\")) {\n                    item.classList.remove(\"checked\");\n                }\n\n                this.drawRadio(item, disabled ? colorBack : 0xFFFFFF, color);\n            }\n            if (this.autosave && callSendAnswer) {\n                this.sendAnswer(this.autosubmit);\n            }\n        }\n\n        getMultichoiceSpace() {\n            return 0;\n        }\n\n        sendAnswer(submit, subcommand) {\n            if (submit) {\n                clearTimeout(this.timerTimeout);\n                this.timerTimeout = undefined;\n            }\n\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    let json = JSON.parse(this.responseText);\n                    if (submit) {\n                        json.submit = 1;\n                    }\n                    instance.onServerAnswer(json);\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let a = {\n                \"command\": \"answer\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.auserid, \"attempt\": this.attempt, \"answer\": this.answer, 'submit': submit ? 1 : 0\n            };\n            if (subcommand !== undefined) {\n                a.subcommand = subcommand;\n            }\n            let data = JSON.stringify(a);\n            xmlhttp.send(data);\n        }\n\n        sendTimeout() {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.sendGetAttempt();\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let data = JSON.stringify({\n                \"command\": \"timeout\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.auserid, \"attempt\": this.attempt\n            });\n            xmlhttp.send(data);\n        }\n\n        onServerAnswer(json) {\n            if (json.submit === 0) {\n                return;\n            }\n            this.correct = json.correct;\n\n            this.playAudio(json.iscorrect !== 0 ? this.audioYes : this.audioNo);\n\n            if (json.correct !== undefined) {\n                if (this.qtype === \"multichoice\") {\n                    this.onServerAnswerMultichoice(json);\n                }\n            }\n            this.disableInput();\n\n            if (this.btnSubmit !== undefined) {\n                this.body.removeChild(this.btnSubmit);\n                this.btnSubmit = undefined;\n            }\n\n            let btn = super.createImageButton(this.area, this.nextLeft, this.nextTop, 0, this.iconSize, \"\", 'assets/next.svg',\n                false, 'alt');\n            let instance = this;\n            btn.addEventListener(\"click\", function() {\n                instance.sendGetAttempt();\n                instance.area.removeChild(btn);\n            });\n\n            if (!json.iscorrect && this.qtype !== \"multichoice\") {\n                let w = this.nextLeft - this.explainLeft - 2 * this.padding - this.iconSize;\n                let ans2 = this.createDiv(this.body, this.explainLeft + this.iconSize + this.padding, this.nextTop, this.iconSize,\n                    this.iconSize);\n                ans2.style.lineHeight = this.iconSize + \"px\";\n                ans2.style.color = this.getColorContrast(this.colorBackground);\n                ans2.innerHTML = json.correct;\n                this.autoResizeText(ans2, w, this.iconSize, false, this.minFontSize, this.maxFontSize, 0.9);\n            }\n\n            this.showScore(json);\n        }\n\n        getSVGcorrect(size, iscorrect, colorCorrect, colorError) {\n            if (iscorrect) {\n                let c = colorCorrect !== undefined ? this.getColorHex(colorCorrect) : '#398439';\n                return \"<svg aria-hidden=\\\"true\\\" class=\\\"svg-icon iconCheckmarkLg\\\" width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" viewBox=\\\"0 0 36 36\\\"><path fill=\\\"\" + c + \"\\\" d=\\\"m6 14 8 8L30 6v8L14 30l-8-8v-8z\\\"></path></svg>\";\n            } else {\n                let c = colorError !== undefined ? this.getColorHex(colorError) : '#398439';\n                return \"<svg width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" class=\\\"bi bi-x-lg\\\" viewBox=\\\"0 0 18 18\\\"> <path fill=\\\"\" + c +\n                    `\" d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 \n                1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\"/></svg>`;\n            }\n        }\n\n        onServerAnswerMultichoice(json) {\n            let aCorrect = json.correct.split(\",\");\n\n            for (let i = 0; i < this.answersID.length; i++) {\n                let label = this.aItemLabel[i];\n                let checked = this.aItemAnswer[i].classList.contains(\"checked\");\n                let iscorrect;\n\n                if (aCorrect.includes(this.answersID[i])) {\n                    iscorrect = true;\n                } else if (json.correct !== undefined && checked) {\n                    iscorrect = false;\n                } else {\n                    continue;\n                }\n                let height = label.scrollHeight;\n                let width = label.scrollWidth - this.radioSize;\n                label.style.left = (parseInt(label.style.left) + this.radioSize) + \"px\";\n                label.style.width = width + \"px\";\n                if (iscorrect) {\n                    label.innerHTML = '<b><u>' + label.innerHTML + '</u></b>';\n                }\n                this.autoResizeText(label, width, height, true, this.minFontSize, this.maxFontSize, 0.9);\n\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect, this.colorScore, this.colorScore);\n            }\n        }\n\n        disableInput() {\n            if (this.aItemAnswer !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                    this.drawRadio(this.aItemAnswer[i], this.colorScore, this.colorDefinition);\n                }\n            }\n        }\n\n        sendFastJSON() {\n            if (this.timeoutFastJSON !== undefined) {\n                clearTimeout(this.timeoutFastJSON);\n            }\n            let instance = this;\n            this.timeoutFastJSON = setTimeout(function() {\n                let xmlhttp = new XMLHttpRequest();\n                xmlhttp.onreadystatechange = function() {\n                    this.timeoutFastJSON = undefined;\n                    if (this.readyState === 4 && this.status === 200) {\n                        instance.onServerFastJson(this.response);\n                    }\n                };\n\n                let url = instance.url.slice(0, -8) + \"state.php\";\n\n                xmlhttp.open(\"POST\", url, true);\n\n                let data = new FormData();\n                data.set('fastjson', instance.fastjson);\n                data.set('type', instance.type);\n\n                xmlhttp.send(data);\n            }, 1000);\n        }\n\n        onClickHelp() {\n            if (this.helpUrl !== '') {\n                window.open(this.helpUrl, \"_blank\");\n            }\n        }\n\n        getStringG(name) {\n            return M.util.get_string(name, 'mmogametype_quiz');\n        }\n    };\n    });"],"names":["define","MmoGame","constructor","hideSubmit","setColors","colors","nameLoad","c","this","repairColors","colorDefinition","colorScore","colorScore2","openGame","url","id","pin","auserid","kinduser","callOnAfterOpenGame","audioYes","Audio","load","audioNo","sendGetAttempt","param","subcommand","xmlhttp","XMLHttpRequest","instance","onreadystatechange","readyState","status","onServerGetAttempt","JSON","parse","responseText","open","setRequestHeader","d","mmogameid","undefined","helpurl","data","stringify","send","json","computeDifClock","setColorsString","createIconBar","name","window","document","title","helpUrl","errorcode","state","parseInt","fastjson","timefastjson","updateButtonsAvatar","avatar","nickname","attempt","qtype","answers","answersID","i","answerid","answer","repairP","push","endofgame","definition","single","createScreen","updateLabelTimer","sendFastJSON","createDivMessage","labelTimer","timeclose","innerHTML","time","Date","getTime","dif","Math","round","onTimeout","s","floor","slice","timerTimeout","setTimeout","disableInput","sendTimeout","disabled","area","body","removeChild","removeDivMessage","createDiv","padding","areaTop","areaWidth","areaHeight","showScore","vertical","createScreenVertical","createScreenHorizontal","nickNameHeight","iconSize","maxHeight","maxWidth","fontSize","findbest","minFontSize","maxFontSize","defSize","createDefinition","ansSize","createAnswer","radioSize","explainLeft","nextTop","nextLeft","top","btnSubmit","createImageButton","addEventListener","sendAnswer","stripLeft","stripTop","stripWidth","stripHeight","width","step","min","left","onlyMetrics","createAnswerMultichoice","n","length","aChecked","split","pop","multichoiceLeft","aItemAnswer","Array","aItemLabel","aItemCorrectX","retSize","labelWidth","getMultichoiceSpace","checkboxSize","top1","offsetLabel","label","createElement","style","position","font","appendChild","newSize","scrollWidth","max","scrollHeight","htmlFor","align","color","getColorContrast","colorBackground","checked","includes","item","createRadiobox","topRadio","classList","contains","onClickRadio","visibility","vspace","heightControls","move","divDefinition","definitionHeight","height","colorBack","callSendAnswer","j","add","remove","drawRadio","autosave","autosubmit","submit","clearTimeout","onServerAnswer","a","correct","playAudio","iscorrect","onServerAnswerMultichoice","btn","super","w","ans2","lineHeight","autoResizeText","getSVGcorrect","size","colorCorrect","colorError","getColorHex","aCorrect","t","timeoutFastJSON","onServerFastJson","response","FormData","set","type","onClickHelp","getStringG","M","util","get_string"],"mappings":"oKAeAA,0CAAO,CAAC,wBAAwB,SAASC,gBAC9B,cAA8BA;;;;;;;;AAgBjCC,mQAESC,YAAa,EAGtBC,UAAUC,OAAQC,cACVC,EAAIC,KAAKC,aAAaJ,OAAQC,eAE7BI,gBAAkBH,EAAE,QACpBI,WAAaJ,EAAE,QACfK,YAAcL,EAAE,GAGzBM,SAASC,IAAKC,GAAIC,IAAKC,QAASC,SAAUC,2BAChCN,SAASC,IAAKC,GAAIC,IAAKC,QAASC,SAAUC,0BAE3CC,SAAW,IAAIC,MAAM,wBACrBD,SAASE,YACTC,QAAU,IAAIF,MAAM,uBACpBE,QAAQD,OAGjBE,eAAeC,MAAOC,gBACdC,QAAU,IAAIC,eACdC,SAAWrB,KACfmB,QAAQG,mBAAqB,WACD,IAApBtB,KAAKuB,YAAoC,MAAhBvB,KAAKwB,QAC9BH,SAASI,mBAAmBC,KAAKC,MAAM3B,KAAK4B,cAAeX,QAInEE,QAAQU,KAAK,OAAQ7B,KAAKM,KAAK,GAC/Ba,QAAQW,iBAAiB,eAAgB,wBACrCC,EAAI,SACO,uBAA2B/B,KAAKgC,cAAkBhC,KAAKQ,aAAiBR,KAAKU,cAChFV,KAAKS,mBAAuBS,iBAEnBe,IAAjBjC,KAAKkC,UACLH,EAAEG,QAAU,OAEZC,KAAOT,KAAKU,UAAUL,GAC1BZ,QAAQkB,KAAKF,MAGjBV,mBAAmBa,cACVC,gBAAgBD,WAEDL,IAAhBjC,KAAKH,cACA2C,gBAAgBF,KAAKzC,aACrB4C,sBAGSR,IAAdK,KAAKI,OACLC,OAAOC,SAASC,MAAQP,KAAKI,WAGZT,IAAjBK,KAAKJ,eACAY,QAAUR,KAAKJ,cAGDD,IAAnBK,KAAKS,mBAKJC,MAAQC,SAASX,KAAKU,YACtBE,SAAWZ,KAAKY,cAChBC,aAAeF,SAASX,KAAKa,mBAC7BC,oBAAoB,EAAGd,KAAKe,OAAQf,KAAKgB,eAEzCC,QAAUjB,KAAKiB,aAEfC,MAAQlB,KAAKkB,MACC,gBAAflB,KAAKkB,MAAyB,MACzBC,QAAU,QACVC,UAAY,OACZ,IAAIC,EAAI,EAAGA,GAAKrB,KAAKmB,QAASE,IAAK,KAChCC,SAAWtB,KAAK,YAAcqB,GAC9BE,OAAS7D,KAAK8D,QAAQxB,KAAK,UAAYqB,SACtCD,UAAUK,KAAKH,eACfH,QAAQM,KAAKF,cAIrBA,YAAyB5B,IAAhBK,KAAKuB,OAAuBvB,KAAKuB,OAAS,UACnDG,eAA+B/B,IAAnBK,KAAK0B,WAA8C,IAAnB1B,KAAK0B,eACjDC,WAAajE,KAAK8D,QAAQxB,KAAK2B,iBAC/BC,OAAS5B,KAAK4B,YACdnB,UAAYT,KAAKS,UAEH,IAAfT,KAAKU,YACAmB,aAAa7B,MAAM,QAGvB8B,wBAEAC,yBAnCIC,iBAAiBhC,KAAKS,WAsCnCqB,2BAC4BnC,IAApBjC,KAAKuE,iBAA+CtC,IAAnBjC,KAAKwE,oBAGnB,IAAnBxE,KAAKwE,2BACAD,WAAWE,UAAY,QAG5BC,MAAQ,IAAIC,MAAQC,UACpBC,IAAM7E,KAAKwE,UAAYE,KAAO,OAE9BG,KAAO,IACPA,IAAM,GAEVA,IAAMC,KAAKC,MAAMF,KACbA,KAAO,OACFN,WAAWE,UAAY,QACvBO,gBACF,KACCC,GAAKJ,IAAM,EAAI,IAAM,IAAMC,KAAKI,MAAML,IAAM,SAC3CN,WAAWE,UAAYQ,EAAI,KAAO,IAAOJ,IAAM,IAAKM,OAAO,MAGhEN,KAAO,GAAwB,IAAnB7E,KAAKwE,qBAIjBnD,SAAWrB,UACVoF,aAAeC,YAAW,WAC3BhE,SAAS+C,qBACV,KAGPY,iBACST,WAAWE,UAAY,QACvBa,oBACAC,cAGTpB,aAAa7B,KAAMkD,kBACGvD,IAAdjC,KAAKyF,YACAC,KAAKC,YAAY3F,KAAKyF,WACtBA,UAAOxD,QAEX2D,wBACAH,KAAOzF,KAAK6F,UAAU7F,KAAK0F,KAAM1F,KAAK8F,QAAS9F,KAAK+F,QAAS/F,KAAKgG,UAAWhG,KAAKiG,YAEnFjG,KAAKgE,sBACAM,iBAAiB,mBAAqBtE,KAAK+C,qBAC3CmD,UAAU5D,MAIftC,KAAKmG,cACAC,qBAAqBZ,eAErBa,uBAAuBb,eAE3BU,UAAU5D,MAGnB8D,qBAAqBZ,cACbc,eAAiBxB,KAAKC,MAAM/E,KAAKuG,SAAW,GAAKvG,KAAK8F,QACtDU,UAAYxG,KAAKiG,WAAa,EAAIjG,KAAK8F,QAAUQ,gBAE7B,IAApBtG,KAAKL,aACL6G,WAAaxG,KAAKuG,cAElBlF,SAAWrB,KACXyG,SAAWzG,KAAKgG,eACfU,SAAW1G,KAAK2G,SAAS3G,KAAK4G,YAAa5G,KAAK6G,aAAa,SAASH,cAC/DI,QAAUzF,SAAS0F,iBAAiB,EAAG,EAAGN,SAAW,GAAG,EAAMC,aAE9DI,QAAQ,IAAML,gBACP,MAEPO,QAAU3F,SAAS4F,aAAa,EAAG,EAAGR,SAAW,GAAG,EAAMC,SAAUlB,iBACpEwB,QAAQ,IAAMP,SACP,EAEJK,QAAQ,GAAKE,QAAQ,GAAKR,WAAa,EAAI,UAIrDU,UAAYpC,KAAKC,MAAM/E,KAAK0G,eAC5BS,YAAc,MACfL,QAAU9G,KAAK+G,iBAAiB,EAAG,EAAGN,UAAU,EAAOzG,KAAK0G,kBAE3DU,QAAU/F,SAAS4F,aAAa,EAAGH,QAAQ,GAAK9G,KAAK8F,QAASW,UAAU,EAAOzG,KAAK0G,SAAUlB,eAC9F6B,SAAWrH,KAAKgG,UAAYhG,KAAKuG,SAAWvG,KAAK8F,QAElD9F,KAAKoH,QAAUpH,KAAK8F,SAAW9F,KAAKiG,kBAC/BmB,QAAUpH,KAAKiG,WAAajG,KAAK8F,UAGlB,IAApB9F,KAAKL,WAAsB,KACvB2H,KAAOtH,KAAKgG,UAAYhG,KAAKuG,UAAY,OACxCgB,UAAYvH,KAAKwH,kBAAkBxH,KAAK0F,KAAM4B,IAAKtH,KAAKoH,QAAS,EAAGpH,KAAKuG,SAC1E,GAAI,qBAAqB,EAAO,eAC/BgB,UAAUE,iBAAiB,SAC5B,gBAC+BxF,IAAvBZ,SAASkG,YACTlG,SAASoE,KAAKE,YAAYtE,SAASkG,WACnClG,SAASkG,eAAYtF,GAEzBZ,SAASqG,YAAW,WAK3BC,UAAY3H,KAAK8F,aACjB8B,SAAW5H,KAAKoH,aAChBS,WAAa,EAAI7H,KAAKuG,cACtBuB,YAAc9H,KAAKuG,SAG5BF,uBAAuBb,cACfgB,UAAYxG,KAAKiG,WAAa,EAAIjG,KAAK8F,SAEnB,IAApB9F,KAAKL,aACL6G,WAAaxG,KAAKuG,SAAWvG,KAAK8F,aAElCiC,MAAQjD,KAAKC,OAAO/E,KAAKgG,UAAYhG,KAAK8F,SAAW,GACrDzE,SAAWrB,SACV,IAAIgI,KAAO,EAAGA,MAAQ,EAAGA,OAAQ,KAC9BlB,gBACCJ,SAAW1G,KAAK2G,SAAkB,IAATqB,KAAahI,KAAK4G,YAAc5G,KAAK4G,YAAc,EAAG5G,KAAK6G,aACrF,SAASH,aACLI,QAAUzF,SAAS0F,iBAAiB,EAAG,EAAGgB,MAAQ1G,SAASyE,SAAS,EAAMY,UAEtEI,QAAQ,IAAMiB,aACP,MAEPf,QAAU3F,SAAS4F,aAAa,EAAG,EAAGc,MAAQ1G,SAASyE,SAAS,EAAMY,SAAUlB,iBAChFwB,QAAQ,IAAMe,MACP,EAEJjB,QAAQ,GAAKN,WAAaQ,QAAQ,GAAKR,WAAa,EAAI,KAGnEM,QAAQ,IAAMiB,OAASjB,QAAQ,IAAMzF,SAAS4E,sBAKjDiB,UAAYpC,KAAKC,MAAM/E,KAAK0G,eAC5BK,iBAAiB,EAAG,EAAGgB,MAAQ/H,KAAK8F,SAAS,EAAO9F,KAAK0G,eAEzDU,QAAU/F,SAAS4F,aAAac,MAAO,EAAGA,MAAQ/H,KAAK8F,SAAS,EAAO9F,KAAK0G,SAAUlB,UAAYxF,KAAK8F,aACvGuB,SAAWU,MAAQjD,KAAKmD,IAAI,EAAIjI,KAAKuG,SAAW,EAAIvG,KAAK8F,QAASiC,MAAQ/H,KAAKuG,UAEhFvG,KAAKL,kBAIJ4H,UAAYvH,KAAKwH,kBAAkBxH,KAAK0F,KAAMqC,OAASA,MAAQ/H,KAAKuG,UAAY,EAAGvG,KAAKoH,QAAS,EAAGpH,KAAKuG,SAC1G,GAAI,qBAAqB,EAAO,eAC/BgB,UAAUE,iBAAiB,SAAS,WACrCpG,SAASqG,YAAW,WAGnBC,UAAYI,MAAQ/H,KAAK8F,aACzB8B,SAAW5H,KAAKoH,aAChBS,WAAa,EAAI7H,KAAKuG,cACtBuB,YAAc9H,KAAKuG,UAG5BU,aAAaiB,KAAMZ,IAAKS,MAAOI,YAAazB,SAAUlB,iBAC3CxF,KAAKoI,wBAAwBF,KAAMZ,IAAKS,MAAOI,YAAazB,SAAUlB,UAGjF4C,wBAAwBF,KAAMZ,IAAKS,MAAOI,YAAazB,SAAUlB,cACzD6C,EAAIrI,KAAKyD,QAAQ6E,OACjBjH,SAAWrB,KAEXuI,SAAW,GACK,OAAhBvI,KAAK6D,SACL0E,SAAWvI,KAAK6D,OAAO2E,MAAM,MAE7BD,SAASD,OAAS,GACE,KAAhBC,SAAS,IACTA,SAASE,WAIZC,gBAAkBR,UAClBS,YAAc,IAAIC,MAAMP,QACxBQ,WAAa,IAAID,MAAMP,QACvBS,cAAgB,IAAIF,MAAMP,OAC3BU,QAAU,CAAC,EAAG,QACbC,WAAalE,KAAKC,MAAMgD,MAAQrB,SAAW1G,KAAK8F,QAAU9F,KAAKiJ,oBAAoBvC,eACpFwC,aAAepE,KAAKC,MAAM2B,UAC1ByC,KAAO7B,IACP8B,YAAcpJ,KAAKiJ,oBAAoBvC,cACtC,IAAI/C,EAAI,EAAGA,EAAI0E,EAAG1E,IAAK,KACpB0F,MAAQzG,SAAS0G,cAAc,YACnCD,MAAME,MAAMC,SAAW,WACvBH,MAAME,MAAMxB,MAAQ/H,KAAKgJ,WAAa,KAGtCK,MAAM5E,UAAYzE,KAAKyD,QAAQE,GAE/B0F,MAAME,MAAME,KAAO,cACnBJ,MAAME,MAAM7C,SAAWA,SAAW,UAC7BmC,WAAWlF,GAAK0F,MAEjBlB,YAAa,MACRzC,KAAKgE,YAAYL,WAClBM,QAAUN,MAAMO,YAAclD,SAAW1G,KAAK8F,QAAU9F,KAAKiJ,oBAAoBvC,UACjFiD,QAAUZ,QAAQ,KAClBA,QAAQ,GAAKY,SAEjBZ,QAAQ,IAAMjE,KAAK+E,IAAIR,MAAMS,aAAcpD,UAAY1G,KAAK8F,aAEvDJ,KAAKC,YAAY0D,gBAI1BA,MAAMU,QAAU,QAAUpG,EAC1B0F,MAAME,MAAMrB,KAAQA,KAAOxB,SAAW1G,KAAK8F,QAAUsD,YAAe,KACpEC,MAAME,MAAMjC,IAAMA,IAAM,KACxB+B,MAAME,MAAMS,MAAQ,OACpBX,MAAME,MAAMU,MAAQjK,KAAKkK,iBAAiBlK,KAAKmK,qBAE3CC,QAAU7B,SAAS8B,SAASrK,KAAK0D,UAAUC,IAC3C2G,KAAOtK,KAAKuK,eAAevK,KAAK0F,KAAMwD,aAAclJ,KAAKE,gBAAiBF,KAAKG,WAAYiK,QAAS5E,UACxG8E,KAAKf,MAAMC,SAAW,WACtBc,KAAKf,MAAMrB,KAAOA,KAAO,SACrBsC,SAAWlD,IACfgD,KAAKf,MAAMjC,IAAMkD,SAAW,KAE5BF,KAAK7C,iBAAiB,SAAS,KACtB6C,KAAKG,UAAUC,SAAS,aACzBrJ,SAASsJ,aAAahH,EAAG3D,KAAKE,gBAAiBF,KAAKG,YAAY,MAIxEkJ,MAAM5B,iBAAiB,SAAS,KAC5BpG,SAASsJ,aAAahH,EAAGtC,SAASnB,gBAAiBmB,SAASlB,YAAY,WAGvEsF,KAAKiE,YAAYY,WACjB7E,KAAKiE,YAAYL,OAClBA,MAAMS,aAAepD,WACrB8D,SAAW1F,KAAKC,MAAMuC,KAAO+B,MAAMS,aAAepD,UAAY,GAC9D4D,KAAKf,MAAMjC,IAAMkD,SAAW,MAGN,KAAtBxK,KAAK0D,UAAUC,KACf2G,KAAKf,MAAMqB,WAAa,SACxBvB,MAAME,MAAMqB,WAAa,eAGxBjC,YAAYhF,GAAK2G,UACjBxB,cAAcnF,GAAKuE,KAAOxB,SAAW1G,KAAK8F,QAE/CwB,KAAOxC,KAAK+E,IAAIR,MAAMS,aAAcpD,UAAY1G,KAAK8F,WAGrDqC,mBACOY,YAIP8B,OADAC,eAAiBxD,IAAM6B,SAEL,IAAlBnJ,KAAKmG,WACL0E,OAAS7K,KAAKiG,WAAa6E,eAAiB9K,KAAKuG,SAC7CsE,OAAS7K,KAAK8F,SAAS,KACnBiF,KAAOjG,KAAKC,MAAM8F,OAAS,OAC1B,IAAIlH,EAAI,EAAGA,EAAI0E,EAAG1E,SACdgF,YAAYhF,GAAG4F,MAAMjC,IAAOrE,SAASjD,KAAK2I,YAAYhF,GAAG4F,MAAMjC,KAAOyD,KAAQ,UAC9ElC,WAAWlF,GAAG4F,MAAMjC,IAAOrE,SAASjD,KAAK6I,WAAWlF,GAAG4F,MAAMjC,KAAOyD,KAAQ,UAEhF3D,SAAW2D,KAAO,EACV9H,SAASjD,KAAKgL,cAAczB,MAAMjC,KAClCyD,KAAO/K,KAAKiL,iBAAmBjL,KAAK8F,QAAU9F,KAAKiG,kBACvD+E,cAAczB,MAAMjC,IAAMtH,KAAK6I,WAAW,GAAGU,MAAMjC,SACnD0D,cAAczB,MAAM2B,OAASpG,KAAK+E,IAAIiB,eAAgB9K,KAAKiL,kBAAoB,MAExF3D,KAAOyD,YAIRzD,IAGXqD,aAAahH,EAAGwH,UAAWlB,MAAOmB,oBAC1BpL,KAAK2I,YAAYhF,GAAG8G,UAAUC,SAAS,iBAGtC,IAAIW,EAAI,EAAGA,EAAIrL,KAAK2I,YAAYL,OAAQ+C,IAAK,KAC1Cf,KAAOtK,KAAK2I,YAAY0C,GACxB7F,SAAW8E,KAAKG,UAAUC,SAAS,YAEnC/G,IAAM0H,GACNf,KAAKG,UAAUa,IAAI,gBACdzH,OAAS7D,KAAK0D,UAAUC,IACtB2G,KAAKG,UAAUC,SAAS,YAC/BJ,KAAKG,UAAUc,OAAO,gBAGrBC,UAAUlB,KAAM9E,SAAW2F,UAAY,SAAUlB,OAEtDjK,KAAKyL,UAAYL,qBACZ1D,WAAW1H,KAAK0L,aAI7BzC,6BACW,EAGXvB,WAAWiE,OAAQzK,YACXyK,SACAC,aAAa5L,KAAKoF,mBACbA,kBAAenD,OAGpBd,QAAU,IAAIC,eACdC,SAAWrB,KACfmB,QAAQG,mBAAqB,cACD,IAApBtB,KAAKuB,YAAoC,MAAhBvB,KAAKwB,OAAgB,KAC1Cc,KAAOZ,KAAKC,MAAM3B,KAAK4B,cACvB+J,SACArJ,KAAKqJ,OAAS,GAElBtK,SAASwK,eAAevJ,QAGhCnB,QAAQU,KAAK,OAAQ7B,KAAKM,KAAK,GAE/Ba,QAAQW,iBAAiB,eAAgB,wBACrCgK,EAAI,SACO,mBAAuB9L,KAAKgC,cAAkBhC,KAAKQ,aAAiBR,KAAKU,cAC5EV,KAAKS,gBAAoBT,KAAKuD,eAAmBvD,KAAK6D,cAAkB8H,OAAS,EAAI,QAE9E1J,IAAff,aACA4K,EAAE5K,WAAaA,gBAEfiB,KAAOT,KAAKU,UAAU0J,GAC1B3K,QAAQkB,KAAKF,MAGjBoD,kBACQpE,QAAU,IAAIC,eACdC,SAAWrB,KACfmB,QAAQG,mBAAqB,WACD,IAApBtB,KAAKuB,YAAoC,MAAhBvB,KAAKwB,QAC9BH,SAASL,kBAGjBG,QAAQU,KAAK,OAAQ7B,KAAKM,KAAK,GAE/Ba,QAAQW,iBAAiB,eAAgB,wBACrCK,KAAOT,KAAKU,UAAU,SACX,oBAAwBpC,KAAKgC,cAAkBhC,KAAKQ,aAAiBR,KAAKU,cAC7EV,KAAKS,gBAAoBT,KAAKuD,UAE1CpC,QAAQkB,KAAKF,MAGjB0J,eAAevJ,SACS,IAAhBA,KAAKqJ,mBAGJI,QAAUzJ,KAAKyJ,aAEfC,UAA6B,IAAnB1J,KAAK2J,UAAkBjM,KAAKY,SAAWZ,KAAKe,cAEtCkB,IAAjBK,KAAKyJ,SACc,gBAAf/L,KAAKwD,YACA0I,0BAA0B5J,WAGlCgD,oBAEkBrD,IAAnBjC,KAAKuH,iBACA7B,KAAKC,YAAY3F,KAAKuH,gBACtBA,eAAYtF,OAGjBkK,IAAMC,MAAM5E,kBAAkBxH,KAAKyF,KAAMzF,KAAKqH,SAAUrH,KAAKoH,QAAS,EAAGpH,KAAKuG,SAAU,GAAI,mBAC5F,EAAO,OACPlF,SAAWrB,QACfmM,IAAI1E,iBAAiB,SAAS,WAC1BpG,SAASL,iBACTK,SAASoE,KAAKE,YAAYwG,SAGzB7J,KAAK2J,WAA4B,gBAAfjM,KAAKwD,MAAyB,KAC7C6I,EAAIrM,KAAKqH,SAAWrH,KAAKmH,YAAc,EAAInH,KAAK8F,QAAU9F,KAAKuG,SAC/D+F,KAAOtM,KAAK6F,UAAU7F,KAAK0F,KAAM1F,KAAKmH,YAAcnH,KAAKuG,SAAWvG,KAAK8F,QAAS9F,KAAKoH,QAASpH,KAAKuG,SACrGvG,KAAKuG,UACT+F,KAAK/C,MAAMgD,WAAavM,KAAKuG,SAAW,KACxC+F,KAAK/C,MAAMU,MAAQjK,KAAKkK,iBAAiBlK,KAAKmK,iBAC9CmC,KAAK7H,UAAYnC,KAAKyJ,aACjBS,eAAeF,KAAMD,EAAGrM,KAAKuG,UAAU,EAAOvG,KAAK4G,YAAa5G,KAAK6G,YAAa,SAGtFX,UAAU5D,MAGnBmK,cAAcC,KAAMT,UAAWU,aAAcC,eACrCX,UAAW,OAEJ,mEAA0ES,KAAO,aAAiBA,KACrG,2CAFqBzK,IAAjB0K,aAA6B3M,KAAK6M,YAAYF,cAAgB,WAEnB,4DAG5C,eAAkBD,KAAO,aAAiBA,KAC7C,+DAFmBzK,IAAf2K,WAA2B5M,KAAK6M,YAAYD,YAAc,kPAQ1EV,0BAA0B5J,UAClBwK,SAAWxK,KAAKyJ,QAAQvD,MAAM,SAE7B,IAAI7E,EAAI,EAAGA,EAAI3D,KAAK0D,UAAU4E,OAAQ3E,IAAK,KAGxCsI,UAFA5C,MAAQrJ,KAAK6I,WAAWlF,GACxByG,QAAUpK,KAAK2I,YAAYhF,GAAG8G,UAAUC,SAAS,cAGjDoC,SAASzC,SAASrK,KAAK0D,UAAUC,IACjCsI,WAAY,MACT,CAAA,QAAqBhK,IAAjBK,KAAKyJ,UAAyB3B,iBACrC6B,WAAY,MAIZf,OAAS7B,MAAMS,aACf/B,MAAQsB,MAAMO,YAAc5J,KAAKkH,UACrCmC,MAAME,MAAMrB,KAAQjF,SAASoG,MAAME,MAAMrB,MAAQlI,KAAKkH,UAAa,KACnEmC,MAAME,MAAMxB,MAAQA,MAAQ,KACxBkE,YACA5C,MAAM5E,UAAY,SAAW4E,MAAM5E,UAAY,iBAE9C+H,eAAenD,MAAOtB,MAAOmD,QAAQ,EAAMlL,KAAK4G,YAAa5G,KAAK6G,YAAa,QAEhFkG,EAAI9J,SAASjD,KAAK2I,YAAYhF,GAAG4F,MAAMjC,KACjCtH,KAAK6F,UAAU7F,KAAKyF,KAAMzF,KAAK8I,cAAcnF,GAAIoJ,EAAG/M,KAAKkH,UAAWlH,KAAKkH,WAC/EzC,UAAYzE,KAAKyM,cAAczM,KAAKkH,UAAW+E,UAAWjM,KAAKG,WAAYH,KAAKG,aAI5FmF,uBAC6BrD,IAArBjC,KAAK2I,gBACA,IAAIhF,EAAI,EAAGA,EAAI3D,KAAK2I,YAAYL,OAAQ3E,SACpCgF,YAAYhF,GAAG8G,UAAUa,IAAI,iBAC7BE,UAAUxL,KAAK2I,YAAYhF,GAAI3D,KAAKG,WAAYH,KAAKE,iBAKtEmE,oBACiCpC,IAAzBjC,KAAKgN,iBACLpB,aAAa5L,KAAKgN,qBAElB3L,SAAWrB,UACVgN,gBAAkB3H,YAAW,eAC1BlE,QAAU,IAAIC,eAClBD,QAAQG,mBAAqB,gBACpB0L,qBAAkB/K,EACC,IAApBjC,KAAKuB,YAAoC,MAAhBvB,KAAKwB,QAC9BH,SAAS4L,iBAAiBjN,KAAKkN,eAInC5M,IAAMe,SAASf,IAAI6E,MAAM,GAAI,GAAK,YAEtChE,QAAQU,KAAK,OAAQvB,KAAK,OAEtB6B,KAAO,IAAIgL,SACfhL,KAAKiL,IAAI,WAAY/L,SAAS6B,UAC9Bf,KAAKiL,IAAI,OAAQ/L,SAASgM,MAE1BlM,QAAQkB,KAAKF,QACd,KAGPmL,cACyB,KAAjBtN,KAAK8C,SACLH,OAAOd,KAAK7B,KAAK8C,QAAS,UAIlCyK,WAAW7K,aACA8K,EAAEC,KAAKC,WAAWhL,KAAM"}