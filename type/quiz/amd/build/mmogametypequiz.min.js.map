{"version":3,"file":"mmogametypequiz.min.js","sources":["../src/mmogametypequiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['mod_mmogame/mmogame'], function(MmoGame) {\n    return class MmoGameTypeQuiz extends MmoGame {\n        mmogameid;\n        kinduser;\n        auserid;\n        url;\n        pin;\n        labelTimer;\n\n        /**\n         * Base class for Quiz mmmogame\n         *\n         * @module mmogametype_quiz\n         * @copyright 2024 Vasilis Daloukas\n         * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n         */\n\n        constructor() {\n            super();\n            this.hideSubmit = false;\n        }\n\n        setColors(colors, nameLoad) {\n            let c = this.repairColors(colors, nameLoad);\n\n            this.colorDefinition = c[1];\n            this.colorScore = c[2];\n            this.colorScore2 = c[4];\n        }\n\n        openGame() {\n            super.openGame();\n\n            this.audioYes = new Audio('assets/yes1.mp3');\n            this.audioYes.load();\n            this.audioNo = new Audio('assets/no1.mp3');\n            this.audioNo.load();\n        }\n\n        sendGetAttempt(param, subcommand) {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.onServerGetAttempt(JSON.parse(this.responseText), param);\n                }\n            };\n\n            xmlhttp.open(\"POST\", this.url, true);\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let d = {\n                \"command\": \"getattempt\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, \"kinduser\": this.kinduser,\n                \"user\": this.auserid, \"subcommand\": subcommand\n            };\n            if (this.helpurl === undefined) {\n                d.helpurl = 1;\n            }\n            let data = JSON.stringify(d);\n            xmlhttp.send(data);\n        }\n\n        onServerGetAttempt(json) {\n            console.log( json);\n            this.computeDifClock(json);\n\n            if (this.colors === undefined) {\n                this.setColorsString(json.colors);\n                this.createIconBar();\n            }\n\n            if (json.name !== undefined) {\n                window.document.title = json.name;\n            }\n\n            if (json.helpurl !== undefined) {\n                this.helpUrl = json.helpurl;\n            }\n\n            if (json.errorcode !== undefined) {\n                this.createDivMessage(json.errorcode);\n                return;\n            }\n\n            this.state = parseInt(json.state);\n            this.fastjson = json.fastjson;\n            this.timefastjson = parseInt(json.timefastjson);\n            this.updateButtonsAvatar(1, json.avatar, json.nickname);\n\n            this.attempt = json.attempt;\n\n            this.qtype = json.qtype;\n            if (json.qtype === 'multichoice') {\n                this.answers = [];\n                this.answersID = [];\n                for (let i = 1; i <= json.answers; i++) {\n                    let answerid = json[\"answerid_\" + i];\n                    let answer = this.repairP(json[\"answer_\" + i]);\n                    this.answersID.push(answerid);\n                    this.answers.push(answer);\n\n                }\n            }\n            this.answer = json.answer !== undefined ? json.answer : null;\n            this.endofgame = json.endofgame !== undefined && json.endofgame !== 0;\n            this.definition = this.repairP(json.definition);\n            this.single = json.single;\n            this.errorcode = json.errorcode;\n\n            if (json.state !== 0) {\n                this.createScreen(json, false);\n            }\n\n            this.updateLabelTimer();\n\n            this.sendFastJSON();\n        }\n\n        updateLabelTimer() {\n            if (this.labelTimer === undefined || this.timeclose === undefined) {\n                return;\n            }\n            if (this.timeclose === 0) {\n                this.labelTimer.innerHTML = '';\n                return;\n            }\n            let time = (new Date()).getTime();\n            let dif = this.timeclose - time / 1000;\n\n            if (dif <= 0) {\n                dif = 0;\n            }\n            dif = Math.round(dif);\n            if (dif <= 0) {\n                this.labelTimer.innerHTML = '';\n                this.onTimeout();\n            } else {\n                let s = (dif < 0 ? \"-\" : \"\") + Math.floor(dif / 60.0);\n                this.labelTimer.innerHTML = s + \":\" + (\"0\" + (dif % 60)).slice(-2);\n            }\n\n            if (dif <= 0 && this.timeclose !== 0) {\n                return;\n            }\n\n            let instance = this;\n            this.timerTimeout = setTimeout(function() {\n                instance.updateLabelTimer();\n            }, 500);\n        }\n\n        onTimeout() {\n            this.labelTimer.innerHTML = '';\n            this.disableInput();\n            this.sendTimeout();\n        }\n\n        createScreen(json, disabled) {\n            if (this.area !== undefined) {\n                this.body.removeChild(this.area);\n                this.area = undefined;\n            }\n            this.removeDivMessage();\n            this.area = this.createDiv(this.body, this.padding, this.areaTop, this.areaWidth, this.areaHeight);\n\n            if (this.endofgame) {\n                this.createDivMessage( this.getStringM('js_game_over'));\n                this.showScore(json);\n                return;\n            }\n\n            if (this.vertical) {\n                this.createScreenVertical(disabled);\n            } else {\n                this.createScreenHorizontal(disabled);\n            }\n            this.showScore(json);\n        }\n\n        createScreenVertical(disabled) {\n            let nickNameHeight = Math.round(this.iconSize / 3) + this.padding;\n            let maxHeight = this.areaHeight - 4 * this.padding - nickNameHeight;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize;\n            }\n            let instance = this;\n            let maxWidth = this.areaWidth;\n            this.fontSize = this.findbest(this.minFontSize, this.maxFontSize, function(fontSize) {\n                    let defSize = instance.createDefinition(0, 0, maxWidth - 1, true, fontSize);\n\n                    if (defSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    let ansSize = instance.createAnswer(0, 0, maxWidth - 1, true, fontSize, disabled);\n                    if (ansSize[0] >= maxWidth) {\n                        return 1;\n                    }\n                    return defSize[1] + ansSize[1] < maxHeight ? -1 : 1;\n                }\n            );\n\n            this.radioSize = Math.round(this.fontSize);\n            this.explainLeft = 0;\n            let defSize = this.createDefinition(0, 0, maxWidth, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(0, defSize[1] + this.padding, maxWidth, false, this.fontSize, disabled);\n            this.nextLeft = this.areaWidth - this.iconSize - this.padding;\n\n            if (this.nextTop + this.padding >= this.areaHeight) {\n                this.nextTop = this.areaHeight - this.padding;\n            }\n\n            if (this.hideSubmit === false) {\n                let top = (this.areaWidth - this.iconSize) / 2;\n                this.btnSubmit = this.createImageButton(this.body, top, this.nextTop, 0, this.iconSize,\n                    \"\", 'assets/submit.svg', false, 'submit');\n                this.btnSubmit.addEventListener(\"click\",\n                    function() {\n                        if (instance.btnSubmit !== undefined) {\n                            instance.area.removeChild(instance.btnSubmit);\n                            instance.btnSubmit = undefined;\n                        }\n                        instance.sendAnswer(true);\n                    }\n                );\n            }\n\n            this.stripLeft = this.padding;\n            this.stripTop = this.nextTop;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createScreenHorizontal(disabled) {\n            let maxHeight = this.areaHeight - 2 * this.padding;\n\n            if (this.hideSubmit === false) {\n                maxHeight -= this.iconSize + this.padding;\n            }\n            let width = Math.round((this.areaWidth - this.padding) / 2);\n            let instance = this;\n            for (let step = 1; step <= 2; step++) {\n                let defSize;\n                this.fontSize = this.findbest(step === 1 ? this.minFontSize : this.minFontSize / 2, this.maxFontSize,\n                    function(fontSize) {\n                        defSize = instance.createDefinition(0, 0, width - instance.padding, true, fontSize);\n\n                        if (defSize[0] >= width) {\n                            return 1;\n                        }\n                        let ansSize = instance.createAnswer(0, 0, width - instance.padding, true, fontSize, disabled);\n                        if (ansSize[0] >= width) {\n                            return 1;\n                        }\n                        return defSize[1] < maxHeight && ansSize[1] < maxHeight ? -1 : 1;\n                    }\n                );\n                if (defSize[0] <= width && defSize[1] <= instance.areaHeight) {\n                    break;\n                }\n            }\n\n            this.radioSize = Math.round(this.fontSize);\n            this.createDefinition(0, 0, width - this.padding, false, this.fontSize);\n\n            this.nextTop = instance.createAnswer(width, 0, width - this.padding, false, this.fontSize, disabled) + this.padding;\n            this.nextLeft = width + Math.min(3 * this.iconSize + 2 * this.padding, width - this.iconSize);\n\n            if (this.hideSubmit) {\n                return;\n            }\n\n            this.btnSubmit = this.createImageButton(this.body, width + (width - this.iconSize) / 2, this.nextTop, 0, this.iconSize,\n                \"\", 'assets/submit.svg', false, 'submit');\n            this.btnSubmit.addEventListener(\"click\", function() {\n                instance.sendAnswer(true);\n            });\n\n            this.stripLeft = width + this.padding;\n            this.stripTop = this.nextTop;\n            this.stripWidth = 2 * this.iconSize;\n            this.stripHeight = this.iconSize;\n        }\n\n        createAnswer(left, top, width, onlyMetrics, fontSize, disabled) {\n            return this.createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled);\n        }\n\n        createAnswerMultichoice(left, top, width, onlyMetrics, fontSize, disabled) {\n            let n = this.answers.length;\n            let instance = this;\n\n            let aChecked = [];\n            if (this.answer !== null) {\n                aChecked = this.answer.split(\",\");\n            }\n            if (aChecked.length > 0) {\n                if (aChecked[0] === \"\") {\n                    aChecked.pop();\n                }\n            }\n\n            this.multichoiceLeft = left;\n            this.aItemAnswer = new Array(n);\n            this.aItemLabel = new Array(n);\n            this.aItemCorrectX = new Array(n);\n            let retSize = [0, 0];\n            this.labelWidth = Math.round(width - fontSize - this.padding - this.getMultichoiceSpace(fontSize));\n            let checkboxSize = Math.round(fontSize);\n            let top1 = top;\n            let offsetLabel = this.getMultichoiceSpace(fontSize);\n            for (let i = 0; i < n; i++) {\n                let label = document.createElement(\"label\");\n                label.style.position = \"absolute\";\n                label.style.width = this.labelWidth + \"px\";\n\n                // A label.innerHTML = this.repairHTML(this.answers[i], this.mapFiles, this.mapFilesWidth, this.mapFilesHeight);\n                label.innerHTML = this.answers[i];\n\n                label.style.font = \"FontAwesome\";\n                label.style.fontSize = fontSize + \"px\";\n                this.aItemLabel[i] = label;\n\n                if (onlyMetrics) {\n                    this.body.appendChild(label);\n                    let newSize = label.scrollWidth + fontSize + this.padding + this.getMultichoiceSpace(fontSize);\n                    if (newSize > retSize[0]) {\n                        retSize[0] = newSize;\n                    }\n                    retSize[1] += Math.max(label.scrollHeight, fontSize) + this.padding;\n\n                    this.body.removeChild(label);\n                    continue;\n                }\n\n                label.htmlFor = \"input\" + i;\n                label.style.left = (left + fontSize + this.padding + offsetLabel) + \"px\";\n                label.style.top = top + \"px\";\n                label.style.align = \"left\";\n                label.style.color = this.getColorContrast(this.colorBackground);\n\n                let checked = aChecked.includes(this.answersID[i]);\n                let item = this.createRadiobox(this.body, checkboxSize, this.colorDefinition, this.colorScore, checked, disabled);\n                item.style.position = \"absolute\";\n                item.style.left = left + \"px\";\n                let topRadio = top;\n                item.style.top = topRadio + \"px\";\n\n                item.addEventListener('click', () => {\n                    if (!item.classList.contains(\"disabled\")) {\n                        instance.onClickRadio(i, this.colorDefinition, this.colorScore, true);\n                    }\n                });\n\n                label.addEventListener('click', () => {\n                    instance.onClickRadio(i, instance.colorDefinition, instance.colorScore, true);\n                });\n\n                this.area.appendChild(item);\n                this.area.appendChild(label);\n                if (label.scrollHeight > fontSize) {\n                    topRadio = Math.round(top + (label.scrollHeight - fontSize) / 2);\n                    item.style.top = topRadio + \"px\";\n                }\n\n                if (this.answersID[i] === '') {\n                    item.style.visibility = 'hidden';\n                    label.style.visibility = 'hidden';\n                }\n\n                this.aItemAnswer[i] = item;\n                this.aItemCorrectX[i] = left + fontSize + this.padding;\n\n                top += Math.max(label.scrollHeight, fontSize) + this.padding;\n            }\n\n            if (onlyMetrics) {\n                return retSize;\n            }\n\n            let heightControls = top - top1;\n            let vspace;\n            if (this.vertical === false) {\n                vspace = this.areaHeight - heightControls - this.iconSize;\n                if (vspace > this.padding) {\n                    let move = Math.round(vspace / 3);\n                    for (let i = 0; i < n; i++) {\n                        this.aItemAnswer[i].style.top = (parseInt(this.aItemAnswer[i].style.top) + move) + \"px\";\n                        this.aItemLabel[i].style.top = (parseInt(this.aItemLabel[i].style.top) + move) + \"px\";\n                    }\n                    this.nextTop += move / 2;\n                    let defTop = parseInt(this.divDefinition.style.top);\n                    if (defTop + move + this.definitionHeight + this.padding < this.areaHeight) {\n                        this.divDefinition.style.top = this.aItemLabel[0].style.top;\n                        this.divDefinition.style.height = Math.max(heightControls, this.definitionHeight) + \"px\";\n                    }\n                    top += move;\n                }\n            }\n\n            return top;\n        }\n\n        onClickRadio(i, colorBack, color, callSendAnswer) {\n            if (this.aItemAnswer[i].classList.contains(\"disabled\")) {\n                return;\n            }\n            for (let j = 0; j < this.aItemAnswer.length; j++) {\n                let item = this.aItemAnswer[j];\n                let disabled = item.classList.contains(\"disabled\");\n\n                if (i === j) {\n                    item.classList.add(\"checked\");\n                    this.answer = this.answersID[i];\n                } else if (item.classList.contains(\"checked\")) {\n                    item.classList.remove(\"checked\");\n                }\n\n                this.drawRadio(item, disabled ? colorBack : 0xFFFFFF, color);\n            }\n            if (this.autosave && callSendAnswer) {\n                this.sendAnswer(this.autosubmit);\n            }\n        }\n\n        getMultichoiceSpace() {\n            return 0;\n        }\n\n        sendAnswer(submit, subcommand) {\n            if (submit) {\n                clearTimeout(this.timerTimeout);\n                this.timerTimeout = undefined;\n            }\n\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    let json = JSON.parse(this.responseText);\n                    if (submit) {\n                        json.submit = 1;\n                    }\n                    instance.onServerAnswer(json);\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let a = {\n                \"command\": \"answer\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.auserid, \"attempt\": this.attempt, \"answer\": this.answer, 'submit': submit ? 1 : 0\n            };\n            if (subcommand !== undefined) {\n                a.subcommand = subcommand;\n            }\n            let data = JSON.stringify(a);\n            xmlhttp.send(data);\n        }\n\n        sendTimeout() {\n            let xmlhttp = new XMLHttpRequest();\n            let instance = this;\n            xmlhttp.onreadystatechange = function() {\n                if (this.readyState === 4 && this.status === 200) {\n                    instance.sendGetAttempt();\n                }\n            };\n            xmlhttp.open(\"POST\", this.url, true);\n\n            xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n            let data = JSON.stringify({\n                \"command\": \"timeout\", \"mmogameid\": this.mmogameid, \"pin\": this.pin, 'kinduser': this.kinduser,\n                \"user\": this.auserid, \"attempt\": this.attempt\n            });\n            xmlhttp.send(data);\n        }\n\n        onServerAnswer(json) {\n            if (json.submit === 0) {\n                return;\n            }\n            this.correct = json.correct;\n\n            this.playAudio(json.iscorrect !== 0 ? this.audioYes : this.audioNo);\n\n            if (json.correct !== undefined) {\n                if (this.qtype === \"multichoice\") {\n                    this.onServerAnswerMultichoice(json);\n                }\n            }\n            this.disableInput();\n\n            if (this.btnSubmit !== undefined) {\n                this.body.removeChild(this.btnSubmit);\n                this.btnSubmit = undefined;\n            }\n\n            let btn = super.createImageButton(this.area, this.nextLeft, this.nextTop, 0, this.iconSize, \"\", 'assets/next.svg',\n                false, 'alt');\n            let instance = this;\n            btn.addEventListener(\"click\", function() {\n                instance.sendGetAttempt();\n                instance.area.removeChild(btn);\n            });\n\n            if (!json.iscorrect && this.qtype !== \"multichoice\") {\n                let w = this.nextLeft - this.explainLeft - 2 * this.padding - this.iconSize;\n                let ans2 = this.createDiv(this.body, this.explainLeft + this.iconSize + this.padding, this.nextTop, this.iconSize,\n                    this.iconSize);\n                ans2.style.lineHeight = this.iconSize + \"px\";\n                ans2.style.color = this.getColorContrast(this.colorBackground);\n                ans2.innerHTML = json.correct;\n                this.autoResizeText(ans2, w, this.iconSize, false, this.minFontSize, this.maxFontSize, 0.9);\n            }\n\n            this.showScore(json);\n        }\n\n        getSVGcorrect(size, iscorrect, colorCorrect, colorError) {\n            if (iscorrect) {\n                let c = colorCorrect !== undefined ? this.getColorHex(colorCorrect) : '#398439';\n                return \"<svg aria-hidden=\\\"true\\\" class=\\\"svg-icon iconCheckmarkLg\\\" width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" viewBox=\\\"0 0 36 36\\\"><path fill=\\\"\" + c + \"\\\" d=\\\"m6 14 8 8L30 6v8L14 30l-8-8v-8z\\\"></path></svg>\";\n            } else {\n                let c = colorError !== undefined ? this.getColorHex(colorError) : '#398439';\n                return \"<svg width=\\\"\" + size + \"\\\" height=\\\"\" + size +\n                    \"\\\" class=\\\"bi bi-x-lg\\\" viewBox=\\\"0 0 18 18\\\"> <path fill=\\\"\" + c +\n                    `\" d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 \n                1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\"/></svg>`;\n            }\n        }\n\n        onServerAnswerMultichoice(json) {\n            let aCorrect = json.correct.split(\",\");\n\n            for (let i = 0; i < this.answersID.length; i++) {\n                let label = this.aItemLabel[i];\n                let checked = this.aItemAnswer[i].classList.contains(\"checked\");\n                let iscorrect;\n\n                if (aCorrect.includes(this.answersID[i])) {\n                    iscorrect = true;\n                } else if (json.correct !== undefined && checked) {\n                    iscorrect = false;\n                } else {\n                    continue;\n                }\n                let height = label.scrollHeight;\n                let width = label.scrollWidth - this.radioSize;\n                label.style.left = (parseInt(label.style.left) + this.radioSize) + \"px\";\n                label.style.width = width + \"px\";\n                if (iscorrect) {\n                    label.innerHTML = '<b><u>' + label.innerHTML + '</u></b>';\n                }\n                this.autoResizeText(label, width, height, true, this.minFontSize, this.maxFontSize, 0.9);\n\n                let t = parseInt(this.aItemAnswer[i].style.top);\n                let div = this.createDiv(this.area, this.aItemCorrectX[i], t, this.radioSize, this.radioSize);\n                div.innerHTML = this.getSVGcorrect(this.radioSize, iscorrect, this.colorScore, this.colorScore);\n            }\n        }\n\n        disableInput() {\n            if (this.aItemAnswer !== undefined) {\n                for (let i = 0; i < this.aItemAnswer.length; i++) {\n                    this.aItemAnswer[i].classList.add(\"disabled\");\n                    this.drawRadio(this.aItemAnswer[i], this.colorScore, this.colorDefinition);\n                }\n            }\n        }\n\n        sendFastJSON() {\n            if (this.timeoutFastJSON !== undefined) {\n                clearTimeout(this.timeoutFastJSON);\n            }\n            let instance = this;\n            this.timeoutFastJSON = setTimeout(function() {\n                let xmlhttp = new XMLHttpRequest();\n                xmlhttp.onreadystatechange = function() {\n                    this.timeoutFastJSON = undefined;\n                    if (this.readyState === 4 && this.status === 200) {\n                        instance.onServerFastJson(this.response);\n                    }\n                };\n\n                let url = instance.url + \"/state.php\";\n\n                xmlhttp.open(\"POST\", url, true);\n\n                let data = new FormData();\n                data.set('fastjson', instance.fastjson);\n                data.set('type', instance.type);\n\n                xmlhttp.send(data);\n            }, 1000);\n        }\n\n        onClickHelp() {\n            if (this.helpUrl !== '') {\n                window.open(this.helpUrl, \"_blank\");\n            }\n        }\n\n        getStringG(name) {\n            return M.util.get_string(name, 'mmogametype_quiz');\n        }\n    };\n    });"],"names":["define","MmoGame","constructor","hideSubmit","setColors","colors","nameLoad","c","this","repairColors","colorDefinition","colorScore","colorScore2","openGame","audioYes","Audio","load","audioNo","sendGetAttempt","param","subcommand","xmlhttp","XMLHttpRequest","instance","onreadystatechange","readyState","status","onServerGetAttempt","JSON","parse","responseText","open","url","setRequestHeader","d","mmogameid","pin","kinduser","auserid","undefined","helpurl","data","stringify","send","json","console","log","computeDifClock","setColorsString","createIconBar","name","window","document","title","helpUrl","errorcode","state","parseInt","fastjson","timefastjson","updateButtonsAvatar","avatar","nickname","attempt","qtype","answers","answersID","i","answerid","answer","repairP","push","endofgame","definition","single","createScreen","updateLabelTimer","sendFastJSON","createDivMessage","labelTimer","timeclose","innerHTML","time","Date","getTime","dif","Math","round","onTimeout","s","floor","slice","timerTimeout","setTimeout","disableInput","sendTimeout","disabled","area","body","removeChild","removeDivMessage","createDiv","padding","areaTop","areaWidth","areaHeight","getStringM","showScore","vertical","createScreenVertical","createScreenHorizontal","nickNameHeight","iconSize","maxHeight","maxWidth","fontSize","findbest","minFontSize","maxFontSize","defSize","createDefinition","ansSize","createAnswer","radioSize","explainLeft","nextTop","nextLeft","top","btnSubmit","createImageButton","addEventListener","sendAnswer","stripLeft","stripTop","stripWidth","stripHeight","width","step","min","left","onlyMetrics","createAnswerMultichoice","n","length","aChecked","split","pop","multichoiceLeft","aItemAnswer","Array","aItemLabel","aItemCorrectX","retSize","labelWidth","getMultichoiceSpace","checkboxSize","top1","offsetLabel","label","createElement","style","position","font","appendChild","newSize","scrollWidth","max","scrollHeight","htmlFor","align","color","getColorContrast","colorBackground","checked","includes","item","createRadiobox","topRadio","classList","contains","onClickRadio","visibility","vspace","heightControls","move","divDefinition","definitionHeight","height","colorBack","callSendAnswer","j","add","remove","drawRadio","autosave","autosubmit","submit","clearTimeout","onServerAnswer","a","correct","playAudio","iscorrect","onServerAnswerMultichoice","btn","super","w","ans2","lineHeight","autoResizeText","getSVGcorrect","size","colorCorrect","colorError","getColorHex","aCorrect","t","timeoutFastJSON","onServerFastJson","response","FormData","set","type","onClickHelp","getStringG","M","util","get_string"],"mappings":"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"}